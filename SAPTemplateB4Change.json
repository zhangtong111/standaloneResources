{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "author": "Microsoft - support@microsoft.com",
        "comments": "Solution template for SAP"
    },
    "parameters": {
        "location": {
            "type": "string",
            "minLength": 1,
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
            }
        },
        "workspace-location": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
            }
        },
        "workspace": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
            }
        },
        "workbook1-name": {
            "type": "string",
            "defaultValue": "SAP -Security Audit log and Initial Access",
            "minLength": 1,
            "metadata": {
                "description": "Name for the workbook"
            }
        },
        "CWSQSOCIdentifier": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "SOC data"
            }
        },
        "CWSQSAPIdentifier": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "SAP data"
            }
        },
        "wl_1_creation_required": {
            "type": "bool",
            "defaultValue": true
        },
        "wl_2_creation_required": {
            "type": "bool",
            "defaultValue": true
        },
        "wl_3_creation_required": {
            "type": "bool",
            "defaultValue": true
        },
        "wl_4_creation_required": {
            "type": "bool",
            "defaultValue": true
        },
        "wl_5_creation_required": {
            "type": "bool",
            "defaultValue": true
        },
        "wl_6_creation_required": {
            "type": "bool",
            "defaultValue": true
        },
        "wl_7_creation_required": {
            "type": "bool",
            "defaultValue": true
        },
        "wl_8_creation_required": {
            "type": "bool",
            "defaultValue": true
        },
        "wl_9_creation_required": {
            "type": "bool",
            "defaultValue": true
        },
        "wl_10_creation_required": {
            "type": "bool",
            "defaultValue": true
        },
        "wl_11_creation_required": {
            "type": "bool",
            "defaultValue": true
        },
        "wl_12_creation_required": {
            "type": "bool",
            "defaultValue": true
        },
        "wl_13_creation_required": {
            "type": "bool",
            "defaultValue": true
        },
        "wl_14_creation_required": {
            "type": "bool",
            "defaultValue": true
        },
        "wl_15_creation_required": {
            "type": "bool",
            "defaultValue": true
        },
        "wl_16_creation_required": {
            "type": "bool",
            "defaultValue": true
        },
        "wl_17_creation_required": {
            "type": "bool",
            "defaultValue": true
        },
        "wl_18_creation_required": {
            "type": "bool",
            "defaultValue": true
        }
    },
    "variables": {
        "solutionId": "sentinel4sap.sentinel4sap",
        "_solutionId": "[variables('solutionId')]",
        "email": "support@microsoft.com",
        "_email": "[variables('email')]",
        "workbookVersion1": "2.0.0",
        "workbookContentId1": "SAP-SecurityAuditlogandInitialAccess",
        "workbookId1": "[resourceId('Microsoft.Insights/workbooks', variables('workbookContentId1'))]",
        "workbookTemplateSpecName1": "[concat(parameters('workspace'),'-wb-',uniquestring(variables('_workbookContentId1')))]",
        "_workbookContentId1": "[variables('workbookContentId1')]",
        "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
        "analyticRuleVersion1": "2.0.49",
        "analyticRulecontentId1": "7c2d366a-1cb8-41f3-9b0b-a5c469ad467e",
        "analyticRuleId1": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId1'))]",
        "analyticRuleTemplateSpecName1": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId1')))]",
        "analyticRuleVersion2": "2.0.19",
        "analyticRulecontentId2": "6e60e742-aef0-47aa-95e5-36a100a4272d",
        "analyticRuleId2": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId2'))]",
        "analyticRuleTemplateSpecName2": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId2')))]",
        "analyticRuleVersion3": "2.0.52",
        "analyticRulecontentId3": "2af909e9-9c84-4198-b8c7-e80fe9f00ffb",
        "analyticRuleId3": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId3'))]",
        "analyticRuleTemplateSpecName3": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId3')))]",
        "analyticRuleVersion4": "2.0.33",
        "analyticRulecontentId4": "4329c5d1-7062-4ec4-8ab8-29846e0e0d9a",
        "analyticRuleId4": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId4'))]",
        "analyticRuleTemplateSpecName4": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId4')))]",
        "analyticRuleVersion5": "2.0.29",
        "analyticRulecontentId5": "49fd3399-67c5-47bf-bb61-8b6efa27a5fe",
        "analyticRuleId5": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId5'))]",
        "analyticRuleTemplateSpecName5": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId5')))]",
        "analyticRuleVersion6": "2.0.37",
        "analyticRulecontentId6": "5f152aa1-f82c-4789-8dea-d63d7d6bf96b",
        "analyticRuleId6": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId6'))]",
        "analyticRuleTemplateSpecName6": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId6')))]",
        "analyticRuleVersion7": "2.0.19",
        "analyticRulecontentId7": "2d7cbb53-cb18-4c9e-8855-c5393aa91db0",
        "analyticRuleId7": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId7'))]",
        "analyticRuleTemplateSpecName7": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId7')))]",
        "analyticRuleVersion8": "2.0.19",
        "analyticRulecontentId8": "fe14e4b9-8616-4741-bf6c-2936d30afa65",
        "analyticRuleId8": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId8'))]",
        "analyticRuleTemplateSpecName8": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId8')))]",
        "analyticRuleVersion9": "2.0.19",
        "analyticRulecontentId9": "7e5e321a-f6df-434d-b1be-a8d74f696481",
        "analyticRuleId9": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId9'))]",
        "analyticRuleTemplateSpecName9": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId9')))]",
        "analyticRuleVersion10": "2.0.19",
        "analyticRulecontentId10": "3ba35622-3071-477e-9af9-5380bce25e1e",
        "analyticRuleId10": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId10'))]",
        "analyticRuleTemplateSpecName10": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId10')))]",
        "analyticRuleVersion11": "2.0.33",
        "analyticRulecontentId11": "a4dee43c-f06e-4f6f-8735-db6dec4c5aa3",
        "analyticRuleId11": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId11'))]",
        "analyticRuleTemplateSpecName11": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId11')))]",
        "analyticRuleVersion12": "2.0.49",
        "analyticRulecontentId12": "e35db198-2146-446c-8eb7-a77b6344f1d7",
        "analyticRuleId12": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId12'))]",
        "analyticRuleTemplateSpecName12": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId12')))]",
        "analyticRuleVersion13": "2.0.37",
        "analyticRulecontentId13": "49f11dc5-03c9-4ea3-83ee-33434b42e699",
        "analyticRuleId13": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId13'))]",
        "analyticRuleTemplateSpecName13": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId13')))]",
        "analyticRuleVersion14": "2.0.37",
        "analyticRulecontentId14": "870d9ea0-cd99-4644-9c7a-d7256b0b37e0",
        "analyticRuleId14": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId14'))]",
        "analyticRuleTemplateSpecName14": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId14')))]",
        "analyticRuleVersion15": "2.0.19",
        "analyticRulecontentId15": "e704b794-2f22-417a-b3ac-25e6037e2717",
        "analyticRuleId15": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId15'))]",
        "analyticRuleTemplateSpecName15": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId15')))]",
        "analyticRuleVersion16": "2.0.31",
        "analyticRulecontentId16": "4e228f1a-55cc-4abc-8ef4-5e385b60f9c0",
        "analyticRuleId16": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId16'))]",
        "analyticRuleTemplateSpecName16": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId16')))]",
        "analyticRuleVersion17": "2.0.19",
        "analyticRulecontentId17": "03b9a2cf-8434-44ad-b42f-9a35701f1c2a",
        "analyticRuleId17": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId17'))]",
        "analyticRuleTemplateSpecName17": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId17')))]",
        "analyticRuleVersion18": "2.0.33",
        "analyticRulecontentId18": "c2cc3901-d6bd-4189-bb5f-ab464dcfd079",
        "analyticRuleId18": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId18'))]",
        "analyticRuleTemplateSpecName18": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId18')))]",
        "analyticRuleVersion19": "2.0.19",
        "analyticRulecontentId19": "3eab4a41-1d7b-453d-8631-a7d74936973b",
        "analyticRuleId19": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId19'))]",
        "analyticRuleTemplateSpecName19": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId19')))]",
        "analyticRuleVersion20": "2.0.31",
        "analyticRulecontentId20": "4258c51d-59db-4502-9b02-fb2ab20e97d4",
        "analyticRuleId20": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId20'))]",
        "analyticRuleTemplateSpecName20": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId20')))]",
        "analyticRuleVersion21": "2.0.19",
        "analyticRulecontentId21": "8f9b9576-d0cd-43da-8ea2-d77366d4a70d",
        "analyticRuleId21": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId21'))]",
        "analyticRuleTemplateSpecName21": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId21')))]",
        "analyticRuleVersion22": "2.0.29",
        "analyticRulecontentId22": "9a55136c-fa19-46d4-9376-17c8f96cc2b8",
        "analyticRuleId22": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId22'))]",
        "analyticRuleTemplateSpecName22": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId22')))]",
        "analyticRuleVersion23": "2.0.19",
        "analyticRulecontentId23": "45fb7bf5-783b-4a87-897d-b26f5574186b",
        "analyticRuleId23": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId23'))]",
        "analyticRuleTemplateSpecName23": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId23')))]",
        "analyticRuleVersion24": "2.0.19",
        "analyticRulecontentId24": "a7babb63-a466-4ec7-a056-a213555f18df",
        "analyticRuleId24": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId24'))]",
        "analyticRuleTemplateSpecName24": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId24')))]",
        "analyticRuleVersion25": "2.0.29",
        "analyticRulecontentId25": "db123b5e-bcc2-43a5-9e13-8ac1e1a3c530",
        "analyticRuleId25": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId25'))]",
        "analyticRuleTemplateSpecName25": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId25')))]",
        "analyticRuleVersion26": "2.0.19",
        "analyticRulecontentId26": "fd655ec6-cb11-4e79-a825-0935a66596c8",
        "analyticRuleId26": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId26'))]",
        "analyticRuleTemplateSpecName26": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId26')))]",
        "analyticRuleVersion27": "2.0.29",
        "analyticRulecontentId27": "68a03140-24bc-4985-8b77-ca5cc8aadeda",
        "analyticRuleId27": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId27'))]",
        "analyticRuleTemplateSpecName27": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId27')))]",
        "analyticRuleVersion28": "2.0.19",
        "analyticRulecontentId28": "57e99014-746b-4696-ae6a-447aecc9e800",
        "analyticRuleId28": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId28'))]",
        "analyticRuleTemplateSpecName28": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId28')))]",
        "analyticRuleVersion29": "2.0.19",
        "analyticRulecontentId29": "e0e53cb9-d3f4-47c3-b953-ad62a8414f4f",
        "analyticRuleId29": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId29'))]",
        "analyticRuleTemplateSpecName29": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId29')))]",
        "analyticRuleVersion30": "2.0.31",
        "analyticRulecontentId30": "797db008-0a53-4510-9883-b32673f9c3f5",
        "analyticRuleId30": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId30'))]",
        "analyticRuleTemplateSpecName30": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId30')))]",
        "analyticRuleVersion31": "2.0.19",
        "analyticRulecontentId31": "45e784d5-0414-4029-8fc6-5f6722abdb5c",
        "analyticRuleId31": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId31'))]",
        "analyticRuleTemplateSpecName31": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId31')))]",
        "analyticRuleVersion32": "2.0.19",
        "analyticRulecontentId32": "6a6ff9e7-b167-49a1-bff8-00dadf62b34c",
        "analyticRuleId32": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId32'))]",
        "analyticRuleTemplateSpecName32": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId32')))]",
        "analyticRuleVersion33": "2.0.37",
        "analyticRulecontentId33": "d940bee2-46ff-4bb5-869a-1a54a967977d",
        "analyticRuleId33": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId33'))]",
        "analyticRuleTemplateSpecName33": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId33')))]",
        "analyticRuleVersion34": "2.0.19",
        "analyticRulecontentId34": "bd39a2f0-2eaa-41e6-a071-70c42e42dd21",
        "analyticRuleId34": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId34'))]",
        "analyticRuleTemplateSpecName34": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId34')))]",
        "analyticRuleVersion35": "2.0.37",
        "analyticRulecontentId35": "7e6cb00d-d7cb-4411-837f-6e62c2fab6e7",
        "analyticRuleId35": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId35'))]",
        "analyticRuleTemplateSpecName35": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId35')))]",
        "analyticRuleVersion36": "2.0.19",
        "analyticRulecontentId36": "78fbdc7d-6136-4afc-9cc5-5e5aff1563ae",
        "analyticRuleId36": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId36'))]",
        "analyticRuleTemplateSpecName36": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId36')))]",
        "analyticRuleVersion37": "2.0.19",
        "analyticRulecontentId37": "7f364fac-c6a9-4935-a73b-ba215acace31",
        "analyticRuleId37": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId37'))]",
        "analyticRuleTemplateSpecName37": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId37')))]",
        "analyticRuleVersion38": "2.0.31",
        "analyticRulecontentId38": "978e1cc8-f891-41c7-83b8-b21762a2ebb7",
        "analyticRuleId38": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId38'))]",
        "analyticRuleTemplateSpecName38": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId38')))]",
        "analyticRuleVersion39": "2.0.19",
        "analyticRulecontentId39": "b0594a30-5da4-4eca-89af-cb8ad111d697",
        "analyticRuleId39": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId39'))]",
        "analyticRuleTemplateSpecName39": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId39')))]",
        "analyticRuleVersion40": "2.0.19",
        "analyticRulecontentId40": "4285d707-f969-4a8c-801f-e9c6a328d884",
        "analyticRuleId40": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId40'))]",
        "analyticRuleTemplateSpecName40": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId40')))]",
        "analyticRuleVersion41": "2.0.19",
        "analyticRulecontentId41": "e5a176ef-dd12-47a3-a5ef-1900997f1b17",
        "analyticRuleId41": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId41'))]",
        "analyticRuleTemplateSpecName41": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId41')))]",
        "analyticRuleVersion42": "2.0.32",
        "analyticRulecontentId42": "c01c6b88-6323-4a71-b981-4bc0ddca88bf",
        "analyticRuleId42": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId42'))]",
        "analyticRuleTemplateSpecName42": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId42')))]",
        "analyticRuleVersion43": "2.0.19",
        "analyticRulecontentId43": "dfbcb26d-7b53-41f8-9647-1e158722a80e",
        "analyticRuleId43": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId43'))]",
        "analyticRuleTemplateSpecName43": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId43')))]",
        "analyticRuleVersion44": "2.0.19",
        "analyticRulecontentId44": "c123a8d7-f72f-4ba0-8b06-ba5e12043432",
        "analyticRuleId44": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId44'))]",
        "analyticRuleTemplateSpecName44": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId44')))]",
        "analyticRuleVersion45": "2.0.33",
        "analyticRulecontentId45": "0079fee8-1ebf-4721-92c2-ac1861a79626",
        "analyticRuleId45": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId45'))]",
        "analyticRuleTemplateSpecName45": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId45')))]",
        "analyticRuleVersion46": "2.0.19",
        "analyticRulecontentId46": "45ae0492-fe7d-4ba8-addd-ca984ea30bc1",
        "analyticRuleId46": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId46'))]",
        "analyticRuleTemplateSpecName46": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId46')))]",
        "analyticRuleVersion47": "2.0.19",
        "analyticRulecontentId47": "263ea651-10c8-48a6-a5ac-2c9fc0655ebc",
        "analyticRuleId47": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId47'))]",
        "analyticRuleTemplateSpecName47": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId47')))]",
        "analyticRuleVersion48": "2.0.19",
        "analyticRulecontentId48": "8e8a95c5-7f78-435e-9e6a-7e29c0b831c1",
        "analyticRuleId48": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId48'))]",
        "analyticRuleTemplateSpecName48": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId48')))]",
        "analyticRuleVersion49": "2.0.19",
        "analyticRulecontentId49": "ea0f2cc5-9ee4-45b0-bc19-fdbdf37b4db4",
        "analyticRuleId49": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId49'))]",
        "analyticRuleTemplateSpecName49": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId49')))]",
        "analyticRuleVersion50": "2.0.33",
        "analyticRulecontentId50": "97d13311-748b-4016-b095-9100ab00e4db",
        "analyticRuleId50": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId50'))]",
        "analyticRuleTemplateSpecName50": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId50')))]",
        "analyticRuleVersion51": "2.0.19",
        "analyticRulecontentId51": "47848010-7a36-44f7-96be-d988f3de9421",
        "analyticRuleId51": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId51'))]",
        "analyticRuleTemplateSpecName51": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId51')))]",
        "analyticRuleVersion52": "2.0.19",
        "analyticRulecontentId52": "9fadb366-a7ec-474c-90e1-d1a823176a1e",
        "analyticRuleId52": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId52'))]",
        "analyticRuleTemplateSpecName52": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId52')))]",
        "analyticRuleVersion53": "2.0.19",
        "analyticRulecontentId53": "940baadd-fe19-4c1a-9680-63a9c5d21e1c",
        "analyticRuleId53": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId53'))]",
        "analyticRuleTemplateSpecName53": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId53')))]",
        "analyticRuleVersion54": "2.0.19",
        "analyticRulecontentId54": "2521fd74-79f3-4adc-8350-edf4036913b3",
        "analyticRuleId54": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId54'))]",
        "analyticRuleTemplateSpecName54": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId54')))]",
        "analyticRuleVersion55": "2.0.29",
        "analyticRulecontentId55": "4cc23b15-a048-45f1-b1e8-2dfc40013d84",
        "analyticRuleId55": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId55'))]",
        "analyticRuleTemplateSpecName55": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId55')))]",
        "analyticRuleVersion56": "2.0.19",
        "analyticRulecontentId56": "d83d4699-7bd5-44f1-826a-3bd3501712a9",
        "analyticRuleId56": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId56'))]",
        "analyticRuleTemplateSpecName56": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId56')))]",
        "analyticRuleVersion57": "2.0.31",
        "analyticRulecontentId57": "27d73c8f-88fd-41b8-a785-231541aa32a0",
        "analyticRuleId57": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId57'))]",
        "analyticRuleTemplateSpecName57": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId57')))]",
        "analyticRuleVersion58": "2.0.19",
        "analyticRulecontentId58": "f4da8e9d-3515-4a2a-8cf0-43334fa29d91",
        "analyticRuleId58": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId58'))]",
        "analyticRuleTemplateSpecName58": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId58')))]",
        "analyticRuleVersion59": "2.0.19",
        "analyticRulecontentId59": "35ff4cf7-ed01-4ec2-92e5-ffcbf88fb294",
        "analyticRuleId59": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId59'))]",
        "analyticRuleTemplateSpecName59": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId59')))]",
        "analyticRuleVersion60": "2.0.19",
        "analyticRulecontentId60": "12509d03-0206-4b85-84b9-6d2349afa42b",
        "analyticRuleId60": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId60'))]",
        "analyticRuleTemplateSpecName60": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId60')))]",
        "analyticRuleVersion61": "2.0.19",
        "analyticRulecontentId61": "7224ad22-e2cf-459d-9359-62310555e716",
        "analyticRuleId61": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId61'))]",
        "analyticRuleTemplateSpecName61": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('analyticRulecontentId61')))]",
        "uiConfigId1": "SAP",
        "_uiConfigId1": "[variables('uiConfigId1')]",
        "dataConnectorContentId1": "SAP",
        "_dataConnectorContentId1": "[variables('dataConnectorContentId1')]",
        "dataConnectorId1": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
        "_dataConnectorId1": "[variables('dataConnectorId1')]",
        "dataConnectorTemplateSpecName1": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId1')))]",
        "dataConnectorVersion1": "1.0.0",
        "SAP - Critical Authorizations": "SAP - Critical Authorizations",
        "_SAP - Critical Authorizations": "[variables('SAP - Critical Authorizations')]",
        "SAP - Excluded Networks": "SAP - Excluded Networks",
        "_SAP - Excluded Networks": "[variables('SAP - Excluded Networks')]",
        "SAP - Excluded Users": "SAP - Excluded Users",
        "_SAP - Excluded Users": "[variables('SAP - Excluded Users')]",
        "SAP - FTP Servers": "SAP - FTP Servers",
        "_SAP - FTP Servers": "[variables('SAP - FTP Servers')]",
        "SAP - Networks": "SAP - Networks",
        "_SAP - Networks": "[variables('SAP - Networks')]",
        "SAP - Obsolete Function Modules": "SAP - Obsolete Function Modules",
        "_SAP - Obsolete Function Modules": "[variables('SAP - Obsolete Function Modules')]",
        "SAP - Obsolete Programs": "SAP - Obsolete Programs",
        "_SAP - Obsolete Programs": "[variables('SAP - Obsolete Programs')]",
        "SAP - Privileged Users": "SAP - Privileged Users",
        "_SAP - Privileged Users": "[variables('SAP - Privileged Users')]",
        "SAP - Sensitive ABAP Programs": "SAP - Sensitive ABAP Programs",
        "_SAP - Sensitive ABAP Programs": "[variables('SAP - Sensitive ABAP Programs')]",
        "SAP - Sensitive Function Modules": "SAP - Sensitive Function Modules",
        "_SAP - Sensitive Function Modules": "[variables('SAP - Sensitive Function Modules')]",
        "SAP - Sensitive Profiles": "SAP - Sensitive Profiles",
        "_SAP - Sensitive Profiles": "[variables('SAP - Sensitive Profiles')]",
        "SAP - Sensitive Roles": "SAP - Sensitive Roles",
        "_SAP - Sensitive Roles": "[variables('SAP - Sensitive Roles')]",
        "SAP - Sensitive Tables": "SAP - Sensitive Tables",
        "_SAP - Sensitive Tables": "[variables('SAP - Sensitive Tables')]",
        "SAP - Sensitive Transactions": "SAP - Sensitive Transactions",
        "_SAP - Sensitive Transactions": "[variables('SAP - Sensitive Transactions')]",
        "SAP - Systems": "SAP - Systems",
        "_SAP - Systems": "[variables('SAP - Systems')]",
        "SAP - Transactions for ABAP Generations": "SAP - Transactions for ABAP Generations",
        "_SAP - Transactions for ABAP Generations": "[variables('SAP - Transactions for ABAP Generations')]",
        "SAP_Dynamic_Audit_Log_Monitor_Configuration": "SAP_Dynamic_Audit_Log_Monitor_Configuration",
        "_SAP_Dynamic_Audit_Log_Monitor_Configuration": "[variables('SAP_Dynamic_Audit_Log_Monitor_Configuration')]",
        "SAP_User_Config": "SAP_User_Config",
        "_SAP_User_Config": "[variables('SAP_User_Config')]",
        "SAPFunctionsSAPUsersEmail": "SAPFunctionsSAPUsersEmail",
        "_SAPFunctionsSAPUsersEmail": "[variables('SAPFunctionsSAPUsersEmail')]",
        "SAPFunctionsSAPAuditLogConfiguration": "SAPFunctionsSAPAuditLogConfiguration",
        "_SAPFunctionsSAPAuditLogConfiguration": "[variables('SAPFunctionsSAPAuditLogConfiguration')]",
        "SAPFunctionsSAPGetParameters": "SAPFunctionsSAPGetParameters",
        "_SAPFunctionsSAPGetParameters": "[variables('SAPFunctionsSAPGetParameters')]",
        "SAPFunctionsSAPAuditLogConfigRecommend": "SAPFunctionsSAPAuditLogConfigRecommend",
        "_SAPFunctionsSAPAuditLogConfigRecommend": "[variables('SAPFunctionsSAPAuditLogConfigRecommend')]",
        "SAPFunctionsSAPGetDataTypes": "SAPFunctionsSAPGetDataTypes",
        "_SAPFunctionsSAPGetDataTypes": "[variables('SAPFunctionsSAPGetDataTypes')]",
        "SAPFunctionsSAPUsersGetSensitive": "SAPFunctionsSAPUsersGetSensitive",
        "_SAPFunctionsSAPUsersGetSensitive": "[variables('SAPFunctionsSAPUsersGetSensitive')]",
        "SAPFunctionsSAPUsersGetVIP": "SAPFunctionsSAPUsersGetVIP",
        "_SAPFunctionsSAPUsersGetVIP": "[variables('SAPFunctionsSAPUsersGetVIP')]",
        "SAPFunctionsSAPUsersHeader": "SAPFunctionsSAPUsersHeader",
        "_SAPFunctionsSAPUsersHeader": "[variables('SAPFunctionsSAPUsersHeader')]",
        "SAPFunctionsSAPSystems": "SAPFunctionsSAPSystems",
        "_SAPFunctionsSAPSystems": "[variables('SAPFunctionsSAPSystems')]",
        "SAPFunctionsSAPThreatIntelligenceIndicator": "SAPFunctionsSAPThreatIntelligenceIndicator",
        "_SAPFunctionsSAPThreatIntelligenceIndicator": "[variables('SAPFunctionsSAPThreatIntelligenceIndicator')]",
        "SAPFunctionsSAPAuditLogAnomalies": "SAPFunctionsSAPAuditLogAnomalies",
        "_SAPFunctionsSAPAuditLogAnomalies": "[variables('SAPFunctionsSAPAuditLogAnomalies')]",
        "SAPFunctionsSAP_ADCP": "SAPFunctionsSAP_ADCP",
        "_SAPFunctionsSAP_ADCP": "[variables('SAPFunctionsSAP_ADCP')]",
        "SAPFunctionsSAP_ADR6": "SAPFunctionsSAP_ADR6",
        "_SAPFunctionsSAP_ADR6": "[variables('SAPFunctionsSAP_ADR6')]",
        "SAPFunctionsSAP_AGR_1251": "SAPFunctionsSAP_AGR_1251",
        "_SAPFunctionsSAP_AGR_1251": "[variables('SAPFunctionsSAP_AGR_1251')]",
        "SAPFunctionsSAP_AGR_AGRS": "SAPFunctionsSAP_AGR_AGRS",
        "_SAPFunctionsSAP_AGR_AGRS": "[variables('SAPFunctionsSAP_AGR_AGRS')]",
        "SAPFunctionsSAP_AGR_DEFINE": "SAPFunctionsSAP_AGR_DEFINE",
        "_SAPFunctionsSAP_AGR_DEFINE": "[variables('SAPFunctionsSAP_AGR_DEFINE')]",
        "SAPFunctionsSAP_AGR_FLAGS": "SAPFunctionsSAP_AGR_FLAGS",
        "_SAPFunctionsSAP_AGR_FLAGS": "[variables('SAPFunctionsSAP_AGR_FLAGS')]",
        "SAPFunctionsSAP_AGR_PROF": "SAPFunctionsSAP_AGR_PROF",
        "_SAPFunctionsSAP_AGR_PROF": "[variables('SAPFunctionsSAP_AGR_PROF')]",
        "SAPFunctionsSAP_AGR_TCODES": "SAPFunctionsSAP_AGR_TCODES",
        "_SAPFunctionsSAP_AGR_TCODES": "[variables('SAPFunctionsSAP_AGR_TCODES')]",
        "SAPFunctionsSAP_AGR_USERS": "SAPFunctionsSAP_AGR_USERS",
        "_SAPFunctionsSAP_AGR_USERS": "[variables('SAPFunctionsSAP_AGR_USERS')]",
        "SAPFunctionsSAP_DEVACCESS": "SAPFunctionsSAP_DEVACCESS",
        "_SAPFunctionsSAP_DEVACCESS": "[variables('SAPFunctionsSAP_DEVACCESS')]",
        "SAPFunctionsSAP_PAHI": "SAPFunctionsSAP_PAHI",
        "_SAPFunctionsSAP_PAHI": "[variables('SAPFunctionsSAP_PAHI')]",
        "SAPFunctionsSAP_USGRP_USER": "SAPFunctionsSAP_USGRP_USER",
        "_SAPFunctionsSAP_USGRP_USER": "[variables('SAPFunctionsSAP_USGRP_USER')]",
        "SAPFunctionsSAP_USR01": "SAPFunctionsSAP_USR01",
        "_SAPFunctionsSAP_USR01": "[variables('SAPFunctionsSAP_USR01')]",
        "SAPFunctionsSAP_USR02": "SAPFunctionsSAP_USR02",
        "_SAPFunctionsSAP_USR02": "[variables('SAPFunctionsSAP_USR02')]",
        "SAPFunctionsSAP_USR05": "SAPFunctionsSAP_USR05",
        "_SAPFunctionsSAP_USR05": "[variables('SAPFunctionsSAP_USR05')]",
        "SAPFunctionsSAP_USR21": "SAPFunctionsSAP_USR21",
        "_SAPFunctionsSAP_USR21": "[variables('SAPFunctionsSAP_USR21')]",
        "SAPFunctionsSAP_UST04": "SAPFunctionsSAP_UST04",
        "_SAPFunctionsSAP_UST04": "[variables('SAPFunctionsSAP_UST04')]",
        "SAPFunctionsSAPAppLog": "SAPFunctionsSAPAppLog",
        "_SAPFunctionsSAPAppLog": "[variables('SAPFunctionsSAPAppLog')]",
        "SAPFunctionsSAPAuditLog": "SAPFunctionsSAPAuditLog",
        "_SAPFunctionsSAPAuditLog": "[variables('SAPFunctionsSAPAuditLog')]",
        "SAPFunctionsSAPChangeDocsLog": "SAPFunctionsSAPChangeDocsLog",
        "_SAPFunctionsSAPChangeDocsLog": "[variables('SAPFunctionsSAPChangeDocsLog')]",
        "SAPFunctionsSAPConnectorHealth": "SAPFunctionsSAPConnectorHealth",
        "_SAPFunctionsSAPConnectorHealth": "[variables('SAPFunctionsSAPConnectorHealth')]",
        "SAPFunctionsSAPConnectorOverview": "SAPFunctionsSAPConnectorOverview",
        "_SAPFunctionsSAPConnectorOverview": "[variables('SAPFunctionsSAPConnectorOverview')]",
        "SAPFunctionsSAPCRLog": "SAPFunctionsSAPCRLog",
        "_SAPFunctionsSAPCRLog": "[variables('SAPFunctionsSAPCRLog')]",
        "SAPFunctionsSAPFilesLogs": "SAPFunctionsSAPFilesLogs",
        "_SAPFunctionsSAPFilesLogs": "[variables('SAPFunctionsSAPFilesLogs')]",
        "SAPFunctionsSAPHeartBeat": "SAPFunctionsSAPHeartBeat",
        "_SAPFunctionsSAPHeartBeat": "[variables('SAPFunctionsSAPHeartBeat')]",
        "SAPFunctionsSAPJAVAFilesLogs": "SAPFunctionsSAPJAVAFilesLogs",
        "_SAPFunctionsSAPJAVAFilesLogs": "[variables('SAPFunctionsSAPJAVAFilesLogs')]",
        "SAPFunctionsSAPJobLog": "SAPFunctionsSAPJobLog",
        "_SAPFunctionsSAPJobLog": "[variables('SAPFunctionsSAPJobLog')]",
        "SAPFunctionsSAPOS_GW": "SAPFunctionsSAPOS_GW",
        "_SAPFunctionsSAPOS_GW": "[variables('SAPFunctionsSAPOS_GW')]",
        "SAPFunctionsSAPOS_ICM": "SAPFunctionsSAPOS_ICM",
        "_SAPFunctionsSAPOS_ICM": "[variables('SAPFunctionsSAPOS_ICM')]",
        "SAPFunctionsSAPOS_SAPCONTROL": "SAPFunctionsSAPOS_SAPCONTROL",
        "_SAPFunctionsSAPOS_SAPCONTROL": "[variables('SAPFunctionsSAPOS_SAPCONTROL')]",
        "SAPFunctionsSAPOS_Syslog": "SAPFunctionsSAPOS_Syslog",
        "_SAPFunctionsSAPOS_Syslog": "[variables('SAPFunctionsSAPOS_Syslog')]",
        "SAPFunctionsSAPOS_WP": "SAPFunctionsSAPOS_WP",
        "_SAPFunctionsSAPOS_WP": "[variables('SAPFunctionsSAPOS_WP')]",
        "SAPFunctionsSAPSpoolLog": "SAPFunctionsSAPSpoolLog",
        "_SAPFunctionsSAPSpoolLog": "[variables('SAPFunctionsSAPSpoolLog')]",
        "SAPFunctionsSAPSpoolOutputLog": "SAPFunctionsSAPSpoolOutputLog",
        "_SAPFunctionsSAPSpoolOutputLog": "[variables('SAPFunctionsSAPSpoolOutputLog')]",
        "SAPFunctionsSAPSyslog": "SAPFunctionsSAPSyslog",
        "_SAPFunctionsSAPSyslog": "[variables('SAPFunctionsSAPSyslog')]",
        "SAPFunctionsSAPTableDataLog": "SAPFunctionsSAPTableDataLog",
        "_SAPFunctionsSAPTableDataLog": "[variables('SAPFunctionsSAPTableDataLog')]",
        "SAPFunctionsSAPUsersAssignments": "SAPFunctionsSAPUsersAssignments",
        "_SAPFunctionsSAPUsersAssignments": "[variables('SAPFunctionsSAPUsersAssignments')]",
        "SAPFunctionsSAPUsersAuthorizations": "SAPFunctionsSAPUsersAuthorizations",
        "_SAPFunctionsSAPUsersAuthorizations": "[variables('SAPFunctionsSAPUsersAuthorizations')]",
        "SAPFunctionsSAPUsersGetPrivileged": "SAPFunctionsSAPUsersGetPrivileged",
        "_SAPFunctionsSAPUsersGetPrivileged": "[variables('SAPFunctionsSAPUsersGetPrivileged')]",
        "SAPFunctionsSAPWorkflowLog": "SAPFunctionsSAPWorkflowLog",
        "_SAPFunctionsSAPWorkflowLog": "[variables('SAPFunctionsSAPWorkflowLog')]",
        "workspace-dependency": "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'))]",
        "SAPFunctionsSAPSystemsQuery": "// let SelectedSystems =  dynamic([\"All Systems\"]);//can also do:// let SelectedSystems =  dynamic([\"S4P\", \"B4X\", \"ODT\"]);\r\n// let SelectedSystemRoles =  dynamic([\"All System Roles\"]); //can also do:let SelectedSystemRoles =  dynamic([\"Production\", \"UAT\"]);\r\n// let SelectedSystemUsage=  dynamic([\"All Usage Types\"]); //can also do// let SelectedSystemUsage =  dynamic([\"ERP\", \"CRM\"]);\r\n\r\nlet SystemRolesDictionary= dynamic({\"UP\":\"Unknown (Production)\", \"AH\":\"Agent Heartbeat\",\"P\":\"Production\", \"T\": \"Test\", \"C\": \"Customizing\", \"D\": \"Demo\", \"E\": \"Training/Education\", \"S\": \"SAP reference\"});\r\nlet EmptySystems= datatable ( TimeGenerated:datetime, system_id_s: string, SearchKey:string, SystemID:string , SystemRole: string, SystemUsage: string, Priority: int, sap_client_category_s:string )[];\r\n\r\n// the 'SAP - Systems' watchlist allows for configuring attributes for each system\r\nlet SAPSystemsFromWL= _GetWatchlist('SAP - Systems')\r\n| union isfuzzy=true EmptySystems\r\n// | project-keep SearchKey, SystemRole, SystemUsage\r\n| extend Priority= int(2)\r\n| extend SystemID= SearchKey;\r\n\r\n// As of agent version 64043801 from November 2022, the hearbeat sends the original system role from SAP\r\nlet SAPSystemsFromHeartbeat= CWSQSAP.SAP_HeartBeat_CL\r\n| union isfuzzy=true EmptySystems\r\n| summarize arg_max(TimeGenerated, *) by system_id_s\r\n| extend SystemID= substring(system_id_s,0,3)\r\n| summarize arg_max(TimeGenerated, *) by SystemID\r\n| order by SystemID\r\n| extend SystemRoleCode= column_ifexists(\"sap_client_category_s\",\"UP\")\r\n| extend SystemRoleCode= iff(bag_has_key(SystemRolesDictionary,SystemRoleCode), SystemRoleCode, \"UP\")\r\n| extend SystemRole= tostring(SystemRolesDictionary[SystemRoleCode])\r\n| project SearchKey= SystemID, Priority= int(1), SystemID, SystemRole;\r\n\r\nunion isfuzzy=true SAPSystemsFromWL, SAPSystemsFromHeartbeat\r\n// allow SystemRole to be controlled by the watchlist so users can set own system role (not the one coming from the hearbeat)\r\n| summarize arg_max(Priority, SystemRole), arg_max(Priority, SystemUsage)\r\nby SystemID, SearchKey\r\n| where SearchKey in (SelectedSystems) or tostring(SelectedSystems) contains 'All Systems'\r\n| where SystemRole in (SelectedSystemRoles) or tostring(SelectedSystemRoles) contains 'All System Roles'\r\n| where SystemUsage in (SelectedSystemUsage) or tostring(SelectedSystemUsage) contains 'All Usage Types'\r\n| project DummyJoinField = 1, SearchKey, SystemID, SystemUsage=iff(isempty(SystemUsage), \"Unknown\", SystemUsage)\r\n// set \"Production\" as default, just in case it cannot be inferred from data. This value is considered for analytics purposes only, and not billing purposes.\r\n, SystemRole= iff(isempty(SystemRole), \"Production\", SystemRole)",
        "SAPFunctionsSAPThreatIntelligenceIndicatorQuery": "//generated function structure for table CWSQSOC.ThreatIntelligenceIndicator \r\n//generated on 2022-12-13 \r\n//Sentinel4SAP solution version 2.0.33 \r\nlet D_ThreatIntelligenceIndicator = datatable(TimeGenerated:datetime \r\n,Action:string\r\n,ActivityGroupNames:string\r\n,AdditionalInformation:string\r\n,ApplicationId:string\r\n,AzureTenantId:string\r\n,ConfidenceScore:real\r\n,Description:string\r\n,DiamondModel:string\r\n,ExternalIndicatorId:string\r\n,ExpirationDateTime:datetime\r\n,IndicatorId:string\r\n,ThreatType:string\r\n,Active:bool\r\n,KillChainActions:bool\r\n,KillChainC2:bool\r\n,KillChainDelivery:bool\r\n,KillChainExploitation:bool\r\n,KillChainReconnaissance:bool\r\n,KillChainWeaponization:bool\r\n,KnownFalsePositives:string\r\n,MalwareNames:string\r\n,PassiveOnly:bool\r\n,ThreatSeverity:int\r\n,Tags:string\r\n,TrafficLightProtocolLevel:string\r\n,EmailEncoding:string\r\n,EmailLanguage:string\r\n,EmailRecipient:string\r\n,EmailSenderAddress:string\r\n,EmailSenderName:string\r\n,EmailSourceDomain:string\r\n,EmailSourceIpAddress:string\r\n,EmailSubject:string\r\n,EmailXMailer:string\r\n,FileCompileDateTime:datetime\r\n,FileCreatedDateTime:datetime\r\n,FileHashType:string\r\n,FileHashValue:string\r\n,FileMutexName:string\r\n,FileName:string\r\n,FilePacker:string\r\n,FilePath:string\r\n,FileSize:int\r\n,FileType:string\r\n,DomainName:string\r\n,NetworkIP:string\r\n,NetworkPort:int\r\n,NetworkDestinationAsn:int\r\n,NetworkDestinationCidrBlock:string\r\n,NetworkDestinationIP:string\r\n,NetworkCidrBlock:string\r\n,NetworkDestinationPort:int\r\n,NetworkProtocol:int\r\n,NetworkSourceAsn:int\r\n,NetworkSourceCidrBlock:string\r\n,NetworkSourceIP:string\r\n,NetworkSourcePort:int\r\n,Url:string\r\n,UserAgent:string\r\n,IndicatorProvider:string\r\n,Type:string\r\n)[];\r\nlet T_ThreatIntelligenceIndicator = (CWSQSOC.ThreatIntelligenceIndicator | project \r\nTimeGenerated = column_ifexists('TimeGenerated', '1000-01-01T00:00:00Z')\r\n,Action = column_ifexists('Action', 'initialString')\r\n,ActivityGroupNames = column_ifexists('ActivityGroupNames', 'initialString')\r\n,AdditionalInformation = column_ifexists('AdditionalInformation', 'initialString')\r\n,ApplicationId = column_ifexists('ApplicationId', 'initialString')\r\n,AzureTenantId = column_ifexists('AzureTenantId', 'initialString')\r\n,ConfidenceScore = column_ifexists('ConfidenceScore', 1.1111)\r\n,Description = column_ifexists('Description', 'initialString')\r\n,DiamondModel = column_ifexists('DiamondModel', 'initialString')\r\n,ExternalIndicatorId = column_ifexists('ExternalIndicatorId', 'initialString')\r\n,ExpirationDateTime = column_ifexists('ExpirationDateTime', '1000-01-01T00:00:00Z')\r\n,IndicatorId = column_ifexists('IndicatorId', 'initialString')\r\n,ThreatType = column_ifexists('ThreatType', 'initialString')\r\n,Active = column_ifexists('Active', true)\r\n,KillChainActions = column_ifexists('KillChainActions', true)\r\n,KillChainC2 = column_ifexists('KillChainC2', true)\r\n,KillChainDelivery = column_ifexists('KillChainDelivery', true)\r\n,KillChainExploitation = column_ifexists('KillChainExploitation', true)\r\n,KillChainReconnaissance = column_ifexists('KillChainReconnaissance', true)\r\n,KillChainWeaponization = column_ifexists('KillChainWeaponization', true)\r\n,KnownFalsePositives = column_ifexists('KnownFalsePositives', 'initialString')\r\n,MalwareNames = column_ifexists('MalwareNames', 'initialString')\r\n,PassiveOnly = column_ifexists('PassiveOnly', true)\r\n,ThreatSeverity = column_ifexists('ThreatSeverity', 1)\r\n,Tags = column_ifexists('Tags', 'initialString')\r\n,TrafficLightProtocolLevel = column_ifexists('TrafficLightProtocolLevel', 'initialString')\r\n,EmailEncoding = column_ifexists('EmailEncoding', 'initialString')\r\n,EmailLanguage = column_ifexists('EmailLanguage', 'initialString')\r\n,EmailRecipient = column_ifexists('EmailRecipient', 'initialString')\r\n,EmailSenderAddress = column_ifexists('EmailSenderAddress', 'initialString')\r\n,EmailSenderName = column_ifexists('EmailSenderName', 'initialString')\r\n,EmailSourceDomain = column_ifexists('EmailSourceDomain', 'initialString')\r\n,EmailSourceIpAddress = column_ifexists('EmailSourceIpAddress', 'initialString')\r\n,EmailSubject = column_ifexists('EmailSubject', 'initialString')\r\n,EmailXMailer = column_ifexists('EmailXMailer', 'initialString')\r\n,FileCompileDateTime = column_ifexists('FileCompileDateTime', '1000-01-01T00:00:00Z')\r\n,FileCreatedDateTime = column_ifexists('FileCreatedDateTime', '1000-01-01T00:00:00Z')\r\n,FileHashType = column_ifexists('FileHashType', 'initialString')\r\n,FileHashValue = column_ifexists('FileHashValue', 'initialString')\r\n,FileMutexName = column_ifexists('FileMutexName', 'initialString')\r\n,FileName = column_ifexists('FileName', 'initialString')\r\n,FilePacker = column_ifexists('FilePacker', 'initialString')\r\n,FilePath = column_ifexists('FilePath', 'initialString')\r\n,FileSize = column_ifexists('FileSize', 1)\r\n,FileType = column_ifexists('FileType', 'initialString')\r\n,DomainName = column_ifexists('DomainName', 'initialString')\r\n,NetworkIP = column_ifexists('NetworkIP', 'initialString')\r\n,NetworkPort = column_ifexists('NetworkPort', 1)\r\n,NetworkDestinationAsn = column_ifexists('NetworkDestinationAsn', 1)\r\n,NetworkDestinationCidrBlock = column_ifexists('NetworkDestinationCidrBlock', 'initialString')\r\n,NetworkDestinationIP = column_ifexists('NetworkDestinationIP', 'initialString')\r\n,NetworkCidrBlock = column_ifexists('NetworkCidrBlock', 'initialString')\r\n,NetworkDestinationPort = column_ifexists('NetworkDestinationPort', 1)\r\n,NetworkProtocol = column_ifexists('NetworkProtocol', 1)\r\n,NetworkSourceAsn = column_ifexists('NetworkSourceAsn', 1)\r\n,NetworkSourceCidrBlock = column_ifexists('NetworkSourceCidrBlock', 'initialString')\r\n,NetworkSourceIP = column_ifexists('NetworkSourceIP', 'initialString')\r\n,NetworkSourcePort = column_ifexists('NetworkSourcePort', 1)\r\n,Url = column_ifexists('Url', 'initialString')\r\n,UserAgent = column_ifexists('UserAgent', 'initialString')\r\n,IndicatorProvider = column_ifexists('IndicatorProvider', 'initialString')\r\n,Type = column_ifexists('Type', 'initialString')\r\n);\r\nT_ThreatIntelligenceIndicator | union isfuzzy= true D_ThreatIntelligenceIndicator ",
        "SAPFunctionsSAP_ADCPQuery": "//generated function structure for custom log CWSQSAP.ABAP_ADCP_CL \n//generated on 2022-05-07 \n//Sentinel4SAP solution version 1.2.98 \nlet D_ABAP_ADCP_CL = datatable(TimeGenerated:datetime \n,CLIENT:string\n,ADDRNUMBER:string\n,PERSNUMBER:string\n,DATE_FROM:string\n,NATION:string\n,DATE_TO:string\n,COMP_PERS:string\n,SO_KEY:string\n,DEPARTMENT:string\n,FUNCTION:string\n,BUILDING:string\n,FLOOR:string\n,ROOMNUMBER:string\n,ID_CODE:string\n,IH_MAIL:string\n,SORT1:string\n,SORT2:string\n,SORT_PHN:string\n,ALT_COMPNY:string\n,DEFLT_COMM:string\n,TEL_NUMBER:string\n,TEL_EXTENS:string\n,FAX_NUMBER:string\n,FAX_EXTENS:string\n,FLAGCOMM2:string\n,FLAGCOMM3:string\n,FLAGCOMM4:string\n,FLAGCOMM5:string\n,FLAGCOMM6:string\n,FLAGCOMM7:string\n,FLAGCOMM8:string\n,FLAGCOMM9:string\n,FLAGCOMM10:string\n,FLAGCOMM11:string\n,FLAGCOMM12:string\n,FLAGCOMM13:string\n,UUID_BELATED:string\n,ID_CATEGORY:string\n,ADCP_ERR_STATUS:string\n,XPCPT:string\n,_DATAAGING:string\n,SystemID:string\n,Type:string\n)['1000-01-01T00:00:00Z','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString'];\n\nlet T_ABAP_ADCP_CL = (CWSQSAP.ABAP_ADCP_CL | project \nTimeGenerated = column_ifexists('TimeGenerated', '1000-01-01T00:00:00Z')\n,CLIENT = column_ifexists('CLIENT_s', 'initialString')\n,ADDRNUMBER = column_ifexists('ADDRNUMBER_s', 'initialString')\n,PERSNUMBER = column_ifexists('PERSNUMBER_s', 'initialString')\n,DATE_FROM = column_ifexists('DATE_FROM_s', 'initialString')\n,NATION = column_ifexists('NATION_s', 'initialString')\n,DATE_TO = column_ifexists('DATE_TO_s', 'initialString')\n,COMP_PERS = column_ifexists('COMP_PERS_s', 'initialString')\n,SO_KEY = column_ifexists('SO_KEY_s', 'initialString')\n,DEPARTMENT = column_ifexists('DEPARTMENT_s', 'initialString')\n,FUNCTION = column_ifexists('FUNCTION_s', 'initialString')\n,BUILDING = column_ifexists('BUILDING_s', 'initialString')\n,FLOOR = column_ifexists('FLOOR_s', 'initialString')\n,ROOMNUMBER = column_ifexists('ROOMNUMBER_s', 'initialString')\n,ID_CODE = column_ifexists('ID_CODE_s', 'initialString')\n,IH_MAIL = column_ifexists('IH_MAIL_s', 'initialString')\n,SORT1 = column_ifexists('SORT1_s', 'initialString')\n,SORT2 = column_ifexists('SORT2_s', 'initialString')\n,SORT_PHN = column_ifexists('SORT_PHN_s', 'initialString')\n,ALT_COMPNY = column_ifexists('ALT_COMPNY_s', 'initialString')\n,DEFLT_COMM = column_ifexists('DEFLT_COMM_s', 'initialString')\n,TEL_NUMBER = column_ifexists('TEL_NUMBER_s', 'initialString')\n,TEL_EXTENS = column_ifexists('TEL_EXTENS_s', 'initialString')\n,FAX_NUMBER = column_ifexists('FAX_NUMBER_s', 'initialString')\n,FAX_EXTENS = column_ifexists('FAX_EXTENS_s', 'initialString')\n,FLAGCOMM2 = column_ifexists('FLAGCOMM2_s', 'initialString')\n,FLAGCOMM3 = column_ifexists('FLAGCOMM3_s', 'initialString')\n,FLAGCOMM4 = column_ifexists('FLAGCOMM4_s', 'initialString')\n,FLAGCOMM5 = column_ifexists('FLAGCOMM5_s', 'initialString')\n,FLAGCOMM6 = column_ifexists('FLAGCOMM6_s', 'initialString')\n,FLAGCOMM7 = column_ifexists('FLAGCOMM7_s', 'initialString')\n,FLAGCOMM8 = column_ifexists('FLAGCOMM8_s', 'initialString')\n,FLAGCOMM9 = column_ifexists('FLAGCOMM9_s', 'initialString')\n,FLAGCOMM10 = column_ifexists('FLAGCOMM10_s', 'initialString')\n,FLAGCOMM11 = column_ifexists('FLAGCOMM11_s', 'initialString')\n,FLAGCOMM12 = column_ifexists('FLAGCOMM12_s', 'initialString')\n,FLAGCOMM13 = column_ifexists('FLAGCOMM13_s', 'initialString')\n,UUID_BELATED = column_ifexists('UUID_BELATED_s', 'initialString')\n,ID_CATEGORY = column_ifexists('ID_CATEGORY_s', 'initialString')\n,ADCP_ERR_STATUS = column_ifexists('ADCP_ERR_STATUS_s', 'initialString')\n,XPCPT = column_ifexists('XPCPT_s', 'initialString')\n,_DATAAGING = column_ifexists('_DATAAGING_s', 'initialString')\n,SystemID = column_ifexists('SystemID_s', 'initialString')\n,Type = column_ifexists('Type', 'initialString')\n);\n\nT_ABAP_ADCP_CL | union isfuzzy= true (D_ABAP_ADCP_CL  | where TimeGenerated != '1000-01-01T00:00:00Z')",
        "SAPFunctionsSAP_ADR6Query": "// generated function structure for custom log CWSQSAP.ABAP_ADR6_CL \n// generated on 2022-09-12 \n// Sentinel4SAP solution version 2.0.20 \n// note that CWSQSAP.ABAP_ADR6_CL custom log has been enhanced with the SAP agent version 60075287 to show user names and restricted only to SAP users\n// get the user MD lookback period \nlet UserMDLookBack = totimespan(toscalar(SAPGetParameters('UserMDLookBack')| project-keep ValueLow));\n\nlet D_ABAP_ADR6_CL = datatable(TimeGenerated:datetime \n,CLIENT:string\n,BNAME:string\n,ADDRNUMBER:string\n,PERSNUMBER:string\n,DATE_FROM:string\n,CONSNUMBER:string\n,FLGDEFAULT:string\n,FLG_NOUSE:string\n,HOME_FLAG:string\n,SMTP_ADDR:string\n,SMTP_SRCH:string\n,DFT_RECEIV:string\n,R3_USER:string\n,ENCODE:string\n,TNEF:string\n,VALID_FROM:string\n,VALID_TO:string\n,_DATAAGING:string\n,SystemID:string\n,Type:string\n)['1000-01-01T00:00:00Z','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString'];\n\nlet T_ABAP_ADR6_CL = (CWSQSAP.ABAP_ADR6_CL | where TimeGenerated > ago(UserMDLookBack)\n| project \nTimeGenerated = column_ifexists('TimeGenerated', '1000-01-01T00:00:00Z')\n,CLIENT = column_ifexists('CLIENT_s', 'initialString')\n,BNAME = column_ifexists('BNAME_s', 'initialString')\n,ADDRNUMBER = column_ifexists('ADDRNUMBER_s', 'initialString')\n,PERSNUMBER = column_ifexists('PERSNUMBER_s', 'initialString')\n,DATE_FROM = column_ifexists('DATE_FROM_s', 'initialString')\n,CONSNUMBER = column_ifexists('CONSNUMBER_s', 'initialString')\n,FLGDEFAULT = column_ifexists('FLGDEFAULT_s', 'initialString')\n,FLG_NOUSE = column_ifexists('FLG_NOUSE_s', 'initialString')\n,HOME_FLAG = column_ifexists('HOME_FLAG_s', 'initialString')\n,SMTP_ADDR = column_ifexists('SMTP_ADDR_s', 'initialString')\n,SMTP_SRCH = column_ifexists('SMTP_SRCH_s', 'initialString')\n,DFT_RECEIV = column_ifexists('DFT_RECEIV_s', 'initialString')\n,R3_USER = column_ifexists('R3_USER_s', 'initialString')\n,ENCODE = column_ifexists('ENCODE_s', 'initialString')\n,TNEF = column_ifexists('TNEF_s', 'initialString')\n,VALID_FROM = column_ifexists('VALID_FROM_s', 'initialString')\n,VALID_TO = column_ifexists('VALID_TO_s', 'initialString')\n,_DATAAGING = column_ifexists('_DATAAGING_s', 'initialString')\n,SystemID = column_ifexists('SystemID_s', 'initialString')\n,Type = column_ifexists('Type', 'initialString')\n);\n\nT_ABAP_ADR6_CL | union isfuzzy= true (D_ABAP_ADR6_CL  | where TimeGenerated != '1000-01-01T00:00:00Z')",
        "SAPFunctionsSAP_AGR_1251Query": "//generated function structure for custom log CWSQSAP.ABAP_AGR_1251_CL \n//generated on 2022-05-07 \n//Sentinel4SAP solution version 1.2.98 \nlet D_ABAP_AGR_1251_CL = datatable(TimeGenerated:datetime \n,MANDT:string\n,AGR_NAME:string\n,COUNTER:string\n,OBJECT:string\n,AUTH:string\n,VARIANT:string\n,FIELD:string\n,LOW:string\n,HIGH:string\n,MODIFIED:string\n,DELETED:string\n,COPIED:string\n,NEU:string\n,NODE:string\n,SystemID:string\n,Type:string\n)['1000-01-01T00:00:00Z','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString'];\n\nlet T_ABAP_AGR_1251_CL = (CWSQSAP.ABAP_AGR_1251_CL | project \nTimeGenerated = column_ifexists('TimeGenerated', '1000-01-01T00:00:00Z')\n,MANDT = column_ifexists('MANDT_s', 'initialString')\n,AGR_NAME = column_ifexists('AGR_NAME_s', 'initialString')\n,COUNTER = column_ifexists('COUNTER_s', 'initialString')\n,OBJECT = column_ifexists('OBJECT_s', 'initialString')\n,AUTH = column_ifexists('AUTH_s', 'initialString')\n,VARIANT = column_ifexists('VARIANT_s', 'initialString')\n,FIELD = column_ifexists('FIELD_s', 'initialString')\n,LOW = column_ifexists('LOW_s', 'initialString')\n,HIGH = column_ifexists('HIGH_s', 'initialString')\n,MODIFIED = column_ifexists('MODIFIED_s', 'initialString')\n,DELETED = column_ifexists('DELETED_s', 'initialString')\n,COPIED = column_ifexists('COPIED_s', 'initialString')\n,NEU = column_ifexists('NEU_s', 'initialString')\n,NODE = column_ifexists('NODE_s', 'initialString')\n,SystemID = column_ifexists('SystemID_s', 'initialString')\n,Type = column_ifexists('Type', 'initialString')\n);\n\nT_ABAP_AGR_1251_CL | union isfuzzy= true (D_ABAP_AGR_1251_CL  | where TimeGenerated != '1000-01-01T00:00:00Z')",
        "SAPFunctionsSAP_AGR_AGRSQuery": "//generated function structure for custom log CWSQSAP.ABAP_AGR_AGRS_CL \n//generated on 2022-05-07 \n//Sentinel4SAP solution version 1.2.98 \nlet D_ABAP_AGR_AGRS_CL = datatable(TimeGenerated:datetime \n,MANDT:string\n,AGR_NAME:string\n,CHILD_AGR:string\n,ATTRIBUTES:string\n,SystemID:string\n,Type:string\n)['1000-01-01T00:00:00Z','initialString','initialString','initialString','initialString','initialString','initialString'];\n\nlet T_ABAP_AGR_AGRS_CL = (CWSQSAP.ABAP_AGR_AGRS_CL | project \nTimeGenerated = column_ifexists('TimeGenerated', '1000-01-01T00:00:00Z')\n,MANDT = column_ifexists('MANDT_s', 'initialString')\n,AGR_NAME = column_ifexists('AGR_NAME_s', 'initialString')\n,CHILD_AGR = column_ifexists('CHILD_AGR_s', 'initialString')\n,ATTRIBUTES = column_ifexists('ATTRIBUTES_s', 'initialString')\n,SystemID = column_ifexists('SystemID_s', 'initialString')\n,Type = column_ifexists('Type', 'initialString')\n);\n\nT_ABAP_AGR_AGRS_CL | union isfuzzy= true (D_ABAP_AGR_AGRS_CL  | where TimeGenerated != '1000-01-01T00:00:00Z')",
        "SAPFunctionsSAP_AGR_DEFINEQuery": "//generated function structure for custom log CWSQSAP.ABAP_AGR_DEFINE_CL \n//generated on 2022-05-07 \n//Sentinel4SAP solution version 1.2.98 \nlet D_ABAP_AGR_DEFINE_CL = datatable(TimeGenerated:datetime \n,MANDT:string\n,AGR_NAME:string\n,PARENT_AGR:string\n,CREATE_USR:string\n,CREATE_DAT:string\n,CREATE_TIM:string\n,CREATE_TMP:string\n,CHANGE_USR:string\n,CHANGE_DAT:string\n,CHANGE_TIM:string\n,CHANGE_TMP:string\n,ATTRIBUTES:string\n,SystemID:string\n,Type:string\n)['1000-01-01T00:00:00Z','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString'];\n\nlet T_ABAP_AGR_DEFINE_CL = (CWSQSAP.ABAP_AGR_DEFINE_CL | project \nTimeGenerated = column_ifexists('TimeGenerated', '1000-01-01T00:00:00Z')\n,MANDT = column_ifexists('MANDT_s', 'initialString')\n,AGR_NAME = column_ifexists('AGR_NAME_s', 'initialString')\n,PARENT_AGR = column_ifexists('PARENT_AGR_s', 'initialString')\n,CREATE_USR = column_ifexists('CREATE_USR_s', 'initialString')\n,CREATE_DAT = column_ifexists('CREATE_DAT_s', 'initialString')\n,CREATE_TIM = column_ifexists('CREATE_TIM_s', 'initialString')\n,CREATE_TMP = column_ifexists('CREATE_TMP_s', 'initialString')\n,CHANGE_USR = column_ifexists('CHANGE_USR_s', 'initialString')\n,CHANGE_DAT = column_ifexists('CHANGE_DAT_s', 'initialString')\n,CHANGE_TIM = column_ifexists('CHANGE_TIM_s', 'initialString')\n,CHANGE_TMP = column_ifexists('CHANGE_TMP_s', 'initialString')\n,ATTRIBUTES = column_ifexists('ATTRIBUTES_s', 'initialString')\n,SystemID = column_ifexists('SystemID_s', 'initialString')\n,Type = column_ifexists('Type', 'initialString')\n);\n\nT_ABAP_AGR_DEFINE_CL | union isfuzzy= true (D_ABAP_AGR_DEFINE_CL  | where TimeGenerated != '1000-01-01T00:00:00Z')",
        "SAPFunctionsSAP_AGR_FLAGSQuery": "//generated function structure for custom log CWSQSAP.ABAP_AGR_FLAGS_CL \nlet D_ABAP_AGR_FLAGS_CL = datatable(TimeGenerated:datetime \n,FLAG_VALUE_g:string\n,MANDT:string\n,AGR_NAME:string\n,FLAG_TYPE:string\n,CREATE_USR:string\n,CREATE_DAT:string\n,CREATE_TIM:string\n,CHANGE_USR:string\n,CHANGE_DAT:string\n,CHANGE_TIM:string\n,FLAG_VALUE:string\n,SystemID:string\n,Type:string\n)[];\n\nlet T_ABAP_AGR_FLAGS_CL = (CWSQSAP.ABAP_AGR_FLAGS_CL | project \nTimeGenerated = TimeGenerated\n,FLAG_VALUE_g = FLAG_VALUE_g\n,MANDT = MANDT_s\n,AGR_NAME = AGR_NAME_s\n,FLAG_TYPE = FLAG_TYPE_s\n,CREATE_USR = CREATE_USR_s\n,CREATE_DAT = CREATE_DAT_s\n,CREATE_TIM = CREATE_TIM_s\n,CHANGE_USR = CHANGE_USR_s\n,CHANGE_DAT = CHANGE_DAT_s\n,CHANGE_TIM = CHANGE_TIM_s\n,FLAG_VALUE = FLAG_VALUE_s\n,SystemID = SystemID_s\n,Type = Type\n);\n\nT_ABAP_AGR_FLAGS_CL | union isfuzzy= true D_ABAP_AGR_FLAGS_CL  ",
        "SAPFunctionsSAP_AGR_PROFQuery": "//generated function structure for custom log CWSQSAP.ABAP_AGR_PROF_CL \n//generated on 2022-05-07 \n//Sentinel4SAP solution version 1.2.98 \nlet D_ABAP_AGR_PROF_CL = datatable(TimeGenerated:datetime \n,MANDT:string\n,AGR_NAME:string\n,LANGU:string\n,PROFILE:string\n,PTEXT:string\n,SystemID:string\n,Type:string\n)['1000-01-01T00:00:00Z','initialString','initialString','initialString','initialString','initialString','initialString','initialString'];\n\nlet T_ABAP_AGR_PROF_CL = (CWSQSAP.ABAP_AGR_PROF_CL | project \nTimeGenerated = column_ifexists('TimeGenerated', '1000-01-01T00:00:00Z')\n,MANDT = column_ifexists('MANDT_s', 'initialString')\n,AGR_NAME = column_ifexists('AGR_NAME_s', 'initialString')\n,LANGU = column_ifexists('LANGU_s', 'initialString')\n,PROFILE = column_ifexists('PROFILE_s', 'initialString')\n,PTEXT = column_ifexists('PTEXT_s', 'initialString')\n,SystemID = column_ifexists('SystemID_s', 'initialString')\n,Type = column_ifexists('Type', 'initialString')\n);\n\nT_ABAP_AGR_PROF_CL | union isfuzzy= true (D_ABAP_AGR_PROF_CL  | where TimeGenerated != '1000-01-01T00:00:00Z')",
        "SAPFunctionsSAP_AGR_TCODESQuery": "//generated function structure for custom log CWSQSAP.ABAP_AGR_TCODES_CL \n//generated on 2022-05-07 \n//Sentinel4SAP solution version 1.2.98 \nlet D_ABAP_AGR_TCODES_CL = datatable(TimeGenerated:datetime \n,MANDT:string\n,AGR_NAME:string\n,TYPE:string\n,TCODE:string\n,EXCLUDE:string\n,DIRECT:string\n,INHERITED:string\n,FOLDER:string\n,SystemID:string\n,Type:string\n)['1000-01-01T00:00:00Z','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString'];\n\nlet T_ABAP_AGR_TCODES_CL = (CWSQSAP.ABAP_AGR_TCODES_CL | project \nTimeGenerated = column_ifexists('TimeGenerated', '1000-01-01T00:00:00Z')\n,MANDT = column_ifexists('MANDT_s', 'initialString')\n,AGR_NAME = column_ifexists('AGR_NAME_s', 'initialString')\n,TYPE = column_ifexists('TYPE_s', 'initialString')\n,TCODE = column_ifexists('TCODE_s', 'initialString')\n,EXCLUDE = column_ifexists('EXCLUDE_s', 'initialString')\n,DIRECT = column_ifexists('DIRECT_s', 'initialString')\n,INHERITED = column_ifexists('INHERITED_s', 'initialString')\n,FOLDER = column_ifexists('FOLDER_s', 'initialString')\n,SystemID = column_ifexists('SystemID_s', 'initialString')\n,Type = column_ifexists('Type', 'initialString')\n);\n\nT_ABAP_AGR_TCODES_CL | union isfuzzy= true (D_ABAP_AGR_TCODES_CL  | where TimeGenerated != '1000-01-01T00:00:00Z')",
        "SAPFunctionsSAP_AGR_USERSQuery": "//generated function structure for custom log CWSQSAP.ABAP_AGR_USERS_CL \n//generated on 2022-05-07 \n//Sentinel4SAP solution version 1.2.98 \nlet D_ABAP_AGR_USERS_CL = datatable(TimeGenerated:datetime \n,MANDT:string\n,AGR_NAME:string\n,UNAME:string\n,FROM_DAT:string\n,TO_DAT:string\n,EXCLUDE:string\n,CHANGE_DAT:string\n,CHANGE_TIM:string\n,CHANGE_TST:string\n,ORG_FLAG:string\n,COL_FLAG:string\n,SystemID:string\n,Type:string\n)['1000-01-01T00:00:00Z','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString'];\n\nlet T_ABAP_AGR_USERS_CL = (CWSQSAP.ABAP_AGR_USERS_CL | project \nTimeGenerated = column_ifexists('TimeGenerated', '1000-01-01T00:00:00Z')\n,MANDT = column_ifexists('MANDT_s', 'initialString')\n,AGR_NAME = column_ifexists('AGR_NAME_s', 'initialString')\n,UNAME = column_ifexists('UNAME_s', 'initialString')\n,FROM_DAT = column_ifexists('FROM_DAT_s', 'initialString')\n,TO_DAT = column_ifexists('TO_DAT_s', 'initialString')\n,EXCLUDE = column_ifexists('EXCLUDE_s', 'initialString')\n,CHANGE_DAT = column_ifexists('CHANGE_DAT_s', 'initialString')\n,CHANGE_TIM = column_ifexists('CHANGE_TIM_s', 'initialString')\n,CHANGE_TST = column_ifexists('CHANGE_TST_s', 'initialString')\n,ORG_FLAG = column_ifexists('ORG_FLAG_s', 'initialString')\n,COL_FLAG = column_ifexists('COL_FLAG_s', 'initialString')\n,SystemID = column_ifexists('SystemID_s', 'initialString')\n,Type = column_ifexists('Type', 'initialString')\n);\n\nT_ABAP_AGR_USERS_CL | union isfuzzy= true (D_ABAP_AGR_USERS_CL  | where TimeGenerated != '1000-01-01T00:00:00Z')",
        "SAPFunctionsSAP_DEVACCESSQuery": "//generated function structure for custom log CWSQSAP.ABAP_DEVACCESS_CL \n//generated on 2022-05-07 \n//Sentinel4SAP solution version 1.2.98 \nlet D_ABAP_DEVACCESS_CL = datatable(TimeGenerated:datetime \n,UNAME:string\n,ACCESSKEY:string\n,SystemID:string\n,Type:string\n)['1000-01-01T00:00:00Z','initialString','initialString','initialString','initialString'];\n\nlet T_ABAP_DEVACCESS_CL = (CWSQSAP.ABAP_DEVACCESS_CL | project \nTimeGenerated = column_ifexists('TimeGenerated', '1000-01-01T00:00:00Z')\n,UNAME = column_ifexists('UNAME_s', 'initialString')\n,ACCESSKEY = column_ifexists('ACCESSKEY_s', 'initialString')\n,SystemID = column_ifexists('SystemID_s', 'initialString')\n,Type = column_ifexists('Type', 'initialString')\n);\n\nT_ABAP_DEVACCESS_CL | union isfuzzy= true (D_ABAP_DEVACCESS_CL  | where TimeGenerated != '1000-01-01T00:00:00Z')",
        "SAPFunctionsSAP_PAHIQuery": "//generated function structure for custom log CWSQSAP.ABAP_PAHI_CL \n//generated on 2022-05-07 \n//Sentinel4SAP solution version 1.2.98 \nlet D_ABAP_PAHI_CL = datatable(TimeGenerated:datetime \n,PARTYPE:string\n,HOSTNAME:string\n,SYSTEMID:string\n,PARDATE:string\n,PARNAME:string\n,PARSTATE:string\n,PARVALUE:string\n,SystemID:string\n,Type:string\n)['1000-01-01T00:00:00Z','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString'];\n\nlet T_ABAP_PAHI_CL = (CWSQSAP.ABAP_PAHI_CL | project \nTimeGenerated = column_ifexists('TimeGenerated', '1000-01-01T00:00:00Z')\n,PARTYPE = column_ifexists('PARTYPE_s', 'initialString')\n,HOSTNAME = column_ifexists('HOSTNAME_s', 'initialString')\n,SYSTEMID = column_ifexists('SYSTEMID_s', 'initialString')\n,PARDATE = column_ifexists('PARDATE_s', 'initialString')\n,PARNAME = column_ifexists('PARNAME_s', 'initialString')\n,PARSTATE = column_ifexists('PARSTATE_s', 'initialString')\n,PARVALUE = column_ifexists('PARVALUE_s', 'initialString')\n,SystemID = column_ifexists('SystemID_s', 'initialString')\n,Type = column_ifexists('Type', 'initialString')\n);\n\nT_ABAP_PAHI_CL | union isfuzzy= true (D_ABAP_PAHI_CL  | where TimeGenerated != '1000-01-01T00:00:00Z')",
        "SAPFunctionsSAP_USGRP_USERQuery": "//generated function structure for custom log CWSQSAP.ABAP_USGRP_USER_CL \n//generated on 2022-05-07 \n//Sentinel4SAP solution version 1.2.98 \nlet D_ABAP_USGRP_USER_CL = datatable(TimeGenerated:datetime \n,MANDT:string\n,BNAME:string\n,USERGROUP:string\n,FROM_DAT:string\n,TO_DAT:string\n,ORGFLAG:string\n,SystemID:string\n,Type:string\n)['1000-01-01T00:00:00Z','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString'];\n\nlet T_ABAP_USGRP_USER_CL = (CWSQSAP.ABAP_USGRP_USER_CL | project \nTimeGenerated = column_ifexists('TimeGenerated', '1000-01-01T00:00:00Z')\n,MANDT = column_ifexists('MANDT_s', 'initialString')\n,BNAME = column_ifexists('BNAME_s', 'initialString')\n,USERGROUP = column_ifexists('USERGROUP_s', 'initialString')\n,FROM_DAT = column_ifexists('FROM_DAT_s', 'initialString')\n,TO_DAT = column_ifexists('TO_DAT_s', 'initialString')\n,ORGFLAG = column_ifexists('ORGFLAG_s', 'initialString')\n,SystemID = column_ifexists('SystemID_s', 'initialString')\n,Type = column_ifexists('Type', 'initialString')\n);\n\nT_ABAP_USGRP_USER_CL | union isfuzzy= true (D_ABAP_USGRP_USER_CL  | where TimeGenerated != '1000-01-01T00:00:00Z')",
        "SAPFunctionsSAP_USR01Query": "//generated function structure for custom log CWSQSAP.ABAP_USR01_CL \n//generated on 2022-05-07 \n//Sentinel4SAP solution version 1.2.98 \nlet D_ABAP_USR01_CL = datatable(TimeGenerated:datetime \n,MANDT:string\n,BNAME:string\n,STCOD:string\n,SPLD:string\n,SPLG:string\n,SPDB:string\n,SPDA:string\n,DATFM:string\n,DCPFM:string\n,HDEST:string\n,HMAND:string\n,HNAME:string\n,MENON:string\n,MENUE:string\n,STRTT:string\n,LANGU:string\n,CATTKENNZ:string\n,TIMEFM:string\n,SystemID:string\n,Type:string\n)['1000-01-01T00:00:00Z','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString'];\n\nlet T_ABAP_USR01_CL = (CWSQSAP.ABAP_USR01_CL | project \nTimeGenerated = column_ifexists('TimeGenerated', '1000-01-01T00:00:00Z')\n,MANDT = column_ifexists('MANDT_s', 'initialString')\n,BNAME = column_ifexists('BNAME_s', 'initialString')\n,STCOD = column_ifexists('STCOD_s', 'initialString')\n,SPLD = column_ifexists('SPLD_s', 'initialString')\n,SPLG = column_ifexists('SPLG_s', 'initialString')\n,SPDB = column_ifexists('SPDB_s', 'initialString')\n,SPDA = column_ifexists('SPDA_s', 'initialString')\n,DATFM = column_ifexists('DATFM_s', 'initialString')\n,DCPFM = column_ifexists('DCPFM_s', 'initialString')\n,HDEST = column_ifexists('HDEST_s', 'initialString')\n,HMAND = column_ifexists('HMAND_s', 'initialString')\n,HNAME = column_ifexists('HNAME_s', 'initialString')\n,MENON = column_ifexists('MENON_s', 'initialString')\n,MENUE = column_ifexists('MENUE_s', 'initialString')\n,STRTT = column_ifexists('STRTT_s', 'initialString')\n,LANGU = column_ifexists('LANGU_s', 'initialString')\n,CATTKENNZ = column_ifexists('CATTKENNZ_s', 'initialString')\n,TIMEFM = column_ifexists('TIMEFM_s', 'initialString')\n,SystemID = column_ifexists('SystemID_s', 'initialString')\n,Type = column_ifexists('Type', 'initialString')\n);\n\nT_ABAP_USR01_CL | union isfuzzy= true (D_ABAP_USR01_CL  | where TimeGenerated != '1000-01-01T00:00:00Z')",
        "SAPFunctionsSAP_USR02Query": "//generated function structure for custom log CWSQSAP.ABAP_USR02_CL \n//generated on 2022-05-07 \n//Sentinel4SAP solution version 1.2.98 \nlet D_ABAP_USR02_CL = datatable(TimeGenerated:datetime \n,MANDT:string\n,BNAME:string\n,GLTGV:string\n,GLTGB:string\n,USTYP:string\n,CLASS:string\n,LOCNT:string\n,UFLAG:string\n,ACCNT:string\n,ANAME:string\n,ERDAT:string\n,TRDAT:string\n,LTIME:string\n,BCDA1:string\n,CODV1:string\n,BCDA2:string\n,CODV2:string\n,BCDA3:string\n,CODV3:string\n,BCDA4:string\n,CODV4:string\n,BCDA5:string\n,CODV5:string\n,VERSN:string\n,CODVN:string\n,TZONE:string\n,ZBVMASTER:string\n,PWDCHGDATE:string\n,PWDSTATE:string\n,RESERVED:string\n,PWDHISTORY:string\n,PWDLGNDATE:string\n,PWDSETDATE:string\n,PWDINITIAL:string\n,PWDLOCKDATE:string\n,PWDSALTEDHASH:string\n,SECURITY_POLICY:string\n,SystemID:string\n,Type:string\n)['1000-01-01T00:00:00Z','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString'];\n\nlet T_ABAP_USR02_CL = (CWSQSAP.ABAP_USR02_CL | project \nTimeGenerated = column_ifexists('TimeGenerated', '1000-01-01T00:00:00Z')\n,MANDT = column_ifexists('MANDT_s', 'initialString')\n,BNAME = column_ifexists('BNAME_s', 'initialString')\n,GLTGV = column_ifexists('GLTGV_s', 'initialString')\n,GLTGB = column_ifexists('GLTGB_s', 'initialString')\n,USTYP = column_ifexists('USTYP_s', 'initialString')\n,CLASS = column_ifexists('CLASS_s', 'initialString')\n,LOCNT = column_ifexists('LOCNT_s', 'initialString')\n,UFLAG = column_ifexists('UFLAG_s', 'initialString')\n,ACCNT = column_ifexists('ACCNT_s', 'initialString')\n,ANAME = column_ifexists('ANAME_s', 'initialString')\n,ERDAT = column_ifexists('ERDAT_s', 'initialString')\n,TRDAT = column_ifexists('TRDAT_s', 'initialString')\n,LTIME = column_ifexists('LTIME_s', 'initialString')\n,BCDA1 = column_ifexists('BCDA1_s', 'initialString')\n,CODV1 = column_ifexists('CODV1_s', 'initialString')\n,BCDA2 = column_ifexists('BCDA2_s', 'initialString')\n,CODV2 = column_ifexists('CODV2_s', 'initialString')\n,BCDA3 = column_ifexists('BCDA3_s', 'initialString')\n,CODV3 = column_ifexists('CODV3_s', 'initialString')\n,BCDA4 = column_ifexists('BCDA4_s', 'initialString')\n,CODV4 = column_ifexists('CODV4_s', 'initialString')\n,BCDA5 = column_ifexists('BCDA5_s', 'initialString')\n,CODV5 = column_ifexists('CODV5_s', 'initialString')\n,VERSN = column_ifexists('VERSN_s', 'initialString')\n,CODVN = column_ifexists('CODVN_s', 'initialString')\n,TZONE = column_ifexists('TZONE_s', 'initialString')\n,ZBVMASTER = column_ifexists('ZBVMASTER_s', 'initialString')\n,PWDCHGDATE = column_ifexists('PWDCHGDATE_s', 'initialString')\n,PWDSTATE = column_ifexists('PWDSTATE_s', 'initialString')\n,RESERVED = column_ifexists('RESERVED_s', 'initialString')\n,PWDHISTORY = column_ifexists('PWDHISTORY_s', 'initialString')\n,PWDLGNDATE = column_ifexists('PWDLGNDATE_s', 'initialString')\n,PWDSETDATE = column_ifexists('PWDSETDATE_s', 'initialString')\n,PWDINITIAL = column_ifexists('PWDINITIAL_s', 'initialString')\n,PWDLOCKDATE = column_ifexists('PWDLOCKDATE_s', 'initialString')\n,PWDSALTEDHASH = column_ifexists('PWDSALTEDHASH_s', 'initialString')\n,SECURITY_POLICY = column_ifexists('SECURITY_POLICY_s', 'initialString')\n,SystemID = column_ifexists('SystemID_s', 'initialString')\n,Type = column_ifexists('Type', 'initialString')\n);\n\nT_ABAP_USR02_CL | union isfuzzy= true (D_ABAP_USR02_CL  | where TimeGenerated != '1000-01-01T00:00:00Z')",
        "SAPFunctionsSAP_USR05Query": "//generated function structure for custom log CWSQSAP.ABAP_USR05_CL \n//generated on 2022-05-07 \n//Sentinel4SAP solution version 1.2.98 \nlet D_ABAP_USR05_CL = datatable(TimeGenerated:datetime \n,MANDT:string\n,BNAME:string\n,PARID:string\n,PARVA:string\n,SystemID:string\n,Type:string\n)['1000-01-01T00:00:00Z','initialString','initialString','initialString','initialString','initialString','initialString'];\n\nlet T_ABAP_USR05_CL = (CWSQSAP.ABAP_USR05_CL | project \nTimeGenerated = column_ifexists('TimeGenerated', '1000-01-01T00:00:00Z')\n,MANDT = column_ifexists('MANDT_s', 'initialString')\n,BNAME = column_ifexists('BNAME_s', 'initialString')\n,PARID = column_ifexists('PARID_s', 'initialString')\n,PARVA = column_ifexists('PARVA_s', 'initialString')\n,SystemID = column_ifexists('SystemID_s', 'initialString')\n,Type = column_ifexists('Type', 'initialString')\n);\n\nT_ABAP_USR05_CL | union isfuzzy= true (D_ABAP_USR05_CL  | where TimeGenerated != '1000-01-01T00:00:00Z')",
        "SAPFunctionsSAP_USR21Query": "//generated function structure for custom log CWSQSAP.ABAP_USR21_CL \n//generated on 2022-05-07 \n//Sentinel4SAP solution version 1.2.98 \nlet D_ABAP_USR21_CL = datatable(TimeGenerated:datetime \n,MANDT:string\n,BNAME:string\n,PERSNUMBER:string\n,ADDRNUMBER:string\n,KOSTL:string\n,START_MENU:string\n,IDADTYPE:string\n,RESPONSIBLE:string\n,TECHDESC:string\n,TEMPLATE_ORGTYPE:string\n,TEMPLATE_ORGADDR:string\n,SystemID:string\n,Type:string\n)['1000-01-01T00:00:00Z','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString'];\n\nlet T_ABAP_USR21_CL = (CWSQSAP.ABAP_USR21_CL | project \nTimeGenerated = column_ifexists('TimeGenerated', '1000-01-01T00:00:00Z')\n,MANDT = column_ifexists('MANDT_s', 'initialString')\n,BNAME = column_ifexists('BNAME_s', 'initialString')\n,PERSNUMBER = column_ifexists('PERSNUMBER_s', 'initialString')\n,ADDRNUMBER = column_ifexists('ADDRNUMBER_s', 'initialString')\n,KOSTL = column_ifexists('KOSTL_s', 'initialString')\n,START_MENU = column_ifexists('START_MENU_s', 'initialString')\n,IDADTYPE = column_ifexists('IDADTYPE_s', 'initialString')\n,RESPONSIBLE = column_ifexists('RESPONSIBLE_s', 'initialString')\n,TECHDESC = column_ifexists('TECHDESC_s', 'initialString')\n,TEMPLATE_ORGTYPE = column_ifexists('TEMPLATE_ORGTYPE_s', 'initialString')\n,TEMPLATE_ORGADDR = column_ifexists('TEMPLATE_ORGADDR_s', 'initialString')\n,SystemID = column_ifexists('SystemID_s', 'initialString')\n,Type = column_ifexists('Type', 'initialString')\n);\n\nT_ABAP_USR21_CL | union isfuzzy= true (D_ABAP_USR21_CL  | where TimeGenerated != '1000-01-01T00:00:00Z')",
        "SAPFunctionsSAP_UST04Query": "//generated function structure for custom log CWSQSAP.ABAP_UST04_CL \n//generated on 2022-05-07 \n//Sentinel4SAP solution version 1.2.98 \nlet D_ABAP_UST04_CL = datatable(TimeGenerated:datetime \n,MANDT:string\n,BNAME:string\n,PROFILE:string\n,SystemID:string\n,Type:string\n)['1000-01-01T00:00:00Z','initialString','initialString','initialString','initialString','initialString'];\n\nlet T_ABAP_UST04_CL = (CWSQSAP.ABAP_UST04_CL | project \nTimeGenerated = column_ifexists('TimeGenerated', '1000-01-01T00:00:00Z')\n,MANDT = column_ifexists('MANDT_s', 'initialString')\n,BNAME = column_ifexists('BNAME_s', 'initialString')\n,PROFILE = column_ifexists('PROFILE_s', 'initialString')\n,SystemID = column_ifexists('SystemID_s', 'initialString')\n,Type = column_ifexists('Type', 'initialString')\n);\n\nT_ABAP_UST04_CL | union isfuzzy= true (D_ABAP_UST04_CL  | where TimeGenerated != '1000-01-01T00:00:00Z')",
        "SAPFunctionsSAPAppLogQuery": "//generated function structure for custom log CWSQSAP.ABAPAppLog_CL \n//generated on 2022-05-07 \n//Sentinel4SAP solution version 1.2.98 \nlet D_ABAPAppLog_CL = datatable(TimeGenerated:datetime \n,ClientID:string\n,LogNumber:string\n,Object:string\n,SubObject:string\n,ExternalID:string\n,AppLogDateTime_t:datetime\n,User:string\n,TransactionCode:string\n,ProgramName:string\n,OperationMode:string\n,StandardText:string\n,CallbackType:string\n,CallbackProgram:string\n,CallbackRoutine:string\n,ProblemClass:string\n,UserChange:string\n,LogHandle:string\n,ContextDDIC:string\n,InternalMessageSerial:real\n,MessageType:string\n,MessageClass:string\n,MessageNumber:string\n,MessageText:string\n,LevelofDetail:string\n,SortCriterion:string\n,SystemID:string\n,SystemNumber:string\n,Instance:string\n,Host:string\n,Type:string\n)['1000-01-01T00:00:00Z','initialString','initialString','initialString','initialString','initialString','1000-01-01T00:00:00Z','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString',1.1111,'initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString'];\n\nlet T_ABAPAppLog_CL = (CWSQSAP.ABAPAppLog_CL | project \nTimeGenerated = column_ifexists('TimeGenerated', '1000-01-01T00:00:00Z')\n,ClientID = column_ifexists('ClientID_s', 'initialString')\n,LogNumber = column_ifexists('LogNumber_s', 'initialString')\n,Object = column_ifexists('Object_s', 'initialString')\n,SubObject = column_ifexists('SubObject_s', 'initialString')\n,ExternalID = column_ifexists('ExternalID_s', 'initialString')\n,AppLogDateTime_t = column_ifexists('AppLogDateTime_t', '1000-01-01T00:00:00Z')\n,User = column_ifexists('User_s', 'initialString')\n,TransactionCode = column_ifexists('TransactionCode_s', 'initialString')\n,ProgramName = column_ifexists('ProgramName_s', 'initialString')\n,OperationMode = column_ifexists('OperationMode_s', 'initialString')\n,StandardText = column_ifexists('StandardText_s', 'initialString')\n,CallbackType = column_ifexists('CallbackType_s', 'initialString')\n,CallbackProgram = column_ifexists('CallbackProgram_s', 'initialString')\n,CallbackRoutine = column_ifexists('CallbackRoutine_s', 'initialString')\n,ProblemClass = column_ifexists('ProblemClass_s', 'initialString')\n,UserChange = column_ifexists('UserChange_s', 'initialString')\n,LogHandle = column_ifexists('LogHandle_s', 'initialString')\n,ContextDDIC = column_ifexists('ContextDDIC_s', 'initialString')\n,InternalMessageSerial = column_ifexists('InternalMessageSerial_d', 1.1111)\n,MessageType = column_ifexists('MessageType_s', 'initialString')\n,MessageClass = column_ifexists('MessageClass_s', 'initialString')\n,MessageNumber = column_ifexists('MessageNumber_s', 'initialString')\n,MessageText = column_ifexists('MessageText_s', 'initialString')\n,LevelofDetail = column_ifexists('LevelofDetail_s', 'initialString')\n,SortCriterion = column_ifexists('SortCriterion_s', 'initialString')\n,SystemID = column_ifexists('SystemID_s', 'initialString')\n,SystemNumber = column_ifexists('SystemNumber_s', 'initialString')\n,Instance = column_ifexists('Instance_s', 'initialString')\n,Host = column_ifexists('Host_s', 'initialString')\n,Type = column_ifexists('Type', 'initialString')\n);\n\nT_ABAPAppLog_CL | union isfuzzy= true (D_ABAPAppLog_CL  | where TimeGenerated != '1000-01-01T00:00:00Z')",
        "SAPFunctionsSAPAuditLogQuery": "//generated function structure for custom log CWSQSAP.ABAPAuditLog_CL \n//generated on 2022-05-07 \n//Sentinel4SAP solution version 1.2.98 \nlet D_ABAPAuditLog_CL = datatable(TimeGenerated:datetime \n,SAL_DATE:string\n,SAL_TIME:string\n,UpdatedOn_t:datetime\n,AuditClassID:real\n,AlertSeverityText:string\n,SystemID:string\n,Instance:string\n,MonitoringObjectName:string\n,MonitorShortName:string\n,MessageText:string\n,MessageClass:string\n,MessageID:string\n,MessageContainerID:string\n,AlertValue:real\n,AlertSeverity:real\n,ClientID:string\n,User:string\n,Variable1:string\n,Variable2:string\n,Variable3:string\n,Variable4:string\n,TerminalIPv6:string\n,TransactionCode:string\n,ABAPProgramName:string\n,SAPProcesType:string\n,SAPWPName:string\n,Email:string\n,SystemNumber:string\n,Host:string\n,Type:string\n,Computer: string\n,TERM_IPV6: string \n)['1000-01-01T00:00:00Z','initialString','initialString','1000-01-01T00:00:00Z',1.1111,'initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString',1.1111,1.1111,'initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString'];\n\nlet T_ABAPAuditLog_CL = (CWSQSAP.ABAPAuditLog_CL | project \nTimeGenerated = column_ifexists('TimeGenerated', '1000-01-01T00:00:00Z')\n,SAL_DATE = strcat(column_ifexists('SAL_DATE_s', ''), column_ifexists('MSCDATE_s', ''))\n,SAL_TIME = strcat(column_ifexists('SAL_TIME_s', ''), column_ifexists('MSCTIME_s', ''))\n,UpdatedOn_t = column_ifexists('UpdatedOn_t', '1000-01-01T00:00:00Z')\n,AuditClassID = column_ifexists('AuditClassID_d', 1.1111)\n,AlertSeverityText = column_ifexists('AlertSeverityText_s', 'initialString')\n,SystemID = column_ifexists('SystemID_s', 'initialString')\n,Instance = column_ifexists('Instance_s', 'initialString')\n,MonitoringObjectName = column_ifexists('MonitoringObjectName_s', 'initialString')\n,MonitorShortName = column_ifexists('MonitorShortName_s', 'initialString')\n,MessageText = column_ifexists('MessageText_s', 'initialString')\n,MessageClass = column_ifexists('MessageClass_s', 'initialString')\n,MessageID = column_ifexists('MessageID_s', 'initialString')\n,MessageContainerID = column_ifexists('MessageContainerID_s', 'initialString')\n,AlertValue = column_ifexists('AlertValue_d', 1.1111)\n,AlertSeverity = column_ifexists('AlertSeverity_d', 1.1111)\n,ClientID = column_ifexists('ClientID_s', 'initialString')\n,User = column_ifexists('User_s', 'initialString')\n,Variable1 = column_ifexists('Variable1_s', 'initialString')\n,Variable2 = column_ifexists('Variable2_s', 'initialString')\n,Variable3 = column_ifexists('Variable3_s', 'initialString')\n,Variable4 = column_ifexists('Variable4_s', 'initialString')\n,TerminalIPv6 = column_ifexists('TerminalIPv6_s', 'initialString')\n,TransactionCode = column_ifexists('TransactionCode_s', 'initialString')\n,ABAPProgramName = column_ifexists('ABAPProgramName_s', 'initialString')\n,SAPProcesType = column_ifexists('SAPProcesType_s', 'initialString')\n,SAPWPName = column_ifexists('SAPWPName_s', 'initialString')\n,Email = column_ifexists('Email_s', 'initialString')\n,SystemNumber = column_ifexists('SystemNumber_s', 'initialString')\n,Host = column_ifexists('Host_s', 'initialString')\n,Type = column_ifexists('Type', 'initialString')\n,Computer= column_ifexists('Computer', 'initialString')\n,TERM_IPV6= column_ifexists('TERM_IPV6_s', 'initialString')\n| extend Email = iff(isempty(Email), User, Email)\n| extend Host = iff(isempty(Host), TerminalIPv6, Host)\n);\n\nT_ABAPAuditLog_CL | union isfuzzy= true (D_ABAPAuditLog_CL  | where TimeGenerated != '1000-01-01T00:00:00Z')",
        "SAPFunctionsSAPChangeDocsLogQuery": "//generated function structure for custom log CWSQSAP.ABAPChangeDocsLog_CL \n//generated on 2022-05-07 \n//Sentinel4SAP solution version 1.2.98 \nlet D_ABAPChangeDocsLog_CL = datatable(TimeGenerated:datetime \n,UDATE:string\n,UTIME:string\n,UpdatedOn_t:datetime\n,ClientID:string\n,ObjectClass:string\n,ObjectID:string\n,ChangeNumber:string\n,User:string\n,TransactionCode:string\n,PlannedChangeNum:string\n,ActualChangeNum:string\n,CreatedfromPlannedChange:string\n,TypeofChange_Header:string\n,Language:string\n,Version:string\n,TableName:string\n,ChangedTableKey:string\n,FieldName:string\n,TypeofChange_Item:string\n,FlagText:string\n,UOMOld:string\n,UOMNew:string\n,CurrencyKeyOld:string\n,CurrencyKeyNew:string\n,ValueOld:string\n,ValueNew:string\n,SystemID:string\n,SystemNumber:string\n,Instance:string\n,Host:string\n,Type:string\n)['1000-01-01T00:00:00Z','initialString','initialString','1000-01-01T00:00:00Z','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString'];\n\nlet T_ABAPChangeDocsLog_CL = (CWSQSAP.ABAPChangeDocsLog_CL | project \nTimeGenerated = column_ifexists('TimeGenerated', '1000-01-01T00:00:00Z')\n,UDATE = column_ifexists('UDATE_s', 'initialString')\n,UTIME = column_ifexists('UTIME_s', 'initialString')\n,UpdatedOn_t = column_ifexists('UpdatedOn_t', '1000-01-01T00:00:00Z')\n,ClientID = column_ifexists('ClientID_s', 'initialString')\n,ObjectClass = column_ifexists('ObjectClass_s', 'initialString')\n,ObjectID = column_ifexists('ObjectID_s', 'initialString')\n,ChangeNumber = column_ifexists('ChangeNumber_s', 'initialString')\n,User = column_ifexists('User_s', 'initialString')\n,TransactionCode = column_ifexists('TransactionCode_s', 'initialString')\n,PlannedChangeNum = column_ifexists('PlannedChangeNum_s', 'initialString')\n,ActualChangeNum = column_ifexists('ActualChangeNum_s', 'initialString')\n,CreatedfromPlannedChange = column_ifexists('CreatedfromPlannedChange_s', 'initialString')\n,TypeofChange_Header = column_ifexists('TypeofChange_Header_s', 'initialString')\n,Language = column_ifexists('Language_s', 'initialString')\n,Version = column_ifexists('Version_s', 'initialString')\n,TableName = column_ifexists('TableName_s', 'initialString')\n,ChangedTableKey = column_ifexists('ChangedTableKey_s', 'initialString')\n,FieldName = column_ifexists('FieldName_s', 'initialString')\n,TypeofChange_Item = column_ifexists('TypeofChange_Item_s', 'initialString')\n,FlagText = column_ifexists('FlagText_s', 'initialString')\n,UOMOld = column_ifexists('UOMOld_s', 'initialString')\n,UOMNew = column_ifexists('UOMNew_s', 'initialString')\n,CurrencyKeyOld = column_ifexists('CurrencyKeyOld_s', 'initialString')\n,CurrencyKeyNew = column_ifexists('CurrencyKeyNew_s', 'initialString')\n,ValueOld = column_ifexists('ValueOld_s', 'initialString')\n,ValueNew = column_ifexists('ValueNew_s', 'initialString')\n,SystemID = column_ifexists('SystemID_s', 'initialString')\n,SystemNumber = column_ifexists('SystemNumber_s', 'initialString')\n,Instance = column_ifexists('Instance_s', 'initialString')\n,Host = column_ifexists('Host_s', 'initialString')\n,Type = column_ifexists('Type', 'initialString')\n);\n\nT_ABAPChangeDocsLog_CL | union isfuzzy= true (D_ABAPChangeDocsLog_CL  | where TimeGenerated != '1000-01-01T00:00:00Z')",
        "SAPFunctionsSAPConnectorHealthQuery": "// function parameters:\r\n//// solution version check has moved to be handled by the \"Content hub\"\r\n//// let LatestSolutionVersion = '1.2.95';\r\nlet ThisSolutionVersion= '2.3.00';\r\n//// let LatestSolutionDateTime = todatetime(LatestSolutionDate);\r\nlet RedAgo = 21d; \r\nlet YellowAgo = 1d;\r\nlet GreenAgo= 2h;\r\nlet DeletionPatience= 30m;\r\nlet LatestAgentVersion = '${latestAgentVersion}';\r\nlet LatestSolutionVersion = '${latestSolutionVersion}';\r\nlet SystemRolesDictionary= dynamic({\"UP\": \"Unknown (Production)\", \"AH\": \"Agent Heartbeat\", \"P\": \"Production\", \"T\": \"Test\", \"C\": \"Customizing\", \"D\": \"Demo\", \"E\": \"Training/Education\", \"S\": \"SAP reference\"});\r\n// colors are there for the data connector UI\r\nlet colors = dynamic (['Green', 'Yellow', 'Red', 'Header', 'Unclear', 'Footer']);\r\n// prepare a template structure in case we are  missing the CWSQSAP.SAP_HeartBeat_CL table\r\nlet AgentHealthEmpty= datatable (Agent: string, SystemID: string, LastHealthSeen: datetime, LastDataSeen: datetime, TimeGenerated: datetime, LastConfigedOn: datetime, agent_id_s: string, AgentGUID: string, AgentName: string, KeyMode: string, SdkPath: string, VaultId: string, agent_ver_s: string, SncPath: string, SystemGUID: string, Action: string, WLItemID: string, CLientID: string, message_key_s: string, Message: string, ) ['Sentinel solution', 'Solution version check', '2021-03-01T00:00:00Z', '2021-03-01T00:00:00Z', '2021-03-01T00:00:00Z', '2021-03-01T00:00:00Z', 'Sentinel solution', '', '', '', '', '', '', '', '', '', '', '', '', ''];\r\n// get the configuration of the agents created by the data connector UI\r\nlet SAPAgentDetailsWL= (_GetWatchlist('SAPAgentDetails')\r\n| project-rename agent_id_s= SearchKey, LastConfigedOn= LastUpdatedTimeUTC , WLItemID= _DTItemId\r\n| extend system_id_s= tostring(column_ifexists('SystemID', '_')), AgentGUID= tostring(column_ifexists('AgentGUID', '')), SystemGUID=tostring(column_ifexists('SystemGUID', '')), WLItemID= tostring(WLItemID), AgentName= tostring(column_ifexists('AgentName', '')), VaultId= tostring(column_ifexists('VaultId', ''))\r\n// get last action per agent and system\r\n| summarize LastConfigedOn= arg_max(LastConfigedOn, *) by AgentGUID, SystemGUID);\r\n// combine the heartbeats and the watchlist data to produce a list of agents and system IDs.  \r\nlet AgentHealth = materialize((union isfuzzy=true AgentHealthEmpty, SAPAgentDetailsWL, CWSQSAP.SAP_HeartBeat_CL)\r\n| where TimeGenerated > ago(RedAgo) or isnull(TimeGenerated) or TimeGenerated == todatetime('2021-03-01T00:00:00Z')\r\n| extend LastHealthSeen = max_of(TimeGenerated, LastHealthSeen)\r\n// add agents from the SAPAgentDetails watchlist in case these are not yet sending data\r\n| extend Agent= iff(isnotempty(agent_id_s), agent_id_s,column_ifexists('agent_id_g','')), ClientID= column_ifexists('client_id_s', ''), system_guid_g= column_ifexists('SystemGUID','')\r\n| summarize Action= take_anyif(Action, isnotempty(Action)),  arg_max(LastHealthSeen, *), LastConfigedOn=max(LastConfigedOn), MessageKey= anyif(message_key_s, isnotempty(message_key_s) and TimeGenerated > ago(GreenAgo)) by Agent, system_id_s\r\n| extend SystemID = iff(system_id_s == 'N/A' or system_id_s == 'AGENT', 'AGENT', substring(system_id_s, 0, 3)), AgentVersion = agent_ver_s, LastConfigedOn=LastConfigedOn1, IsGUID= isnotnull(toguid(Agent)));\r\n//  find systems that have been converted to persistant GUIDs. their older IDs should be disregarded\r\nlet GUIDedSystems= AgentHealth | where IsGUID | summarize by SystemID | extend GUIDedSystem= true;\r\n// get the version per agent\r\nlet AgentsHeader = AgentHealth\r\n| summarize arg_max(LastHealthSeen, Agent, AgentVersion), AssociatedSystems= make_set_if(SystemID,Action==\"System Created\", 20) by Agent\r\n| project-keep Agent, AgentVersion, LastHealthSeen, AssociatedSystems\r\n| extend SystemID = 'Agent Version Check', AssociatedSystems= translate('[\"]','',tostring(AssociatedSystems));\r\n// AgentsHeader\r\n// prepare a template structure in case we are  missing all ABAP* tables\r\nlet AgentPotentialEmpty = datatable (PotentialAgent: string, SystemID_s: string, TimeGenerated: date)[];\r\n// agent potential- we are looking for SAP systems that send data but not heartbeats. a special case of very old agents that did not have heartbeats\r\nlet AgentPotential = AgentPotentialEmpty\r\n| union isfuzzy=true (SAPAuditLog | project TimeGenerated, SystemID_s= SystemdID)\r\n| project TimeGenerated, SystemID_s \r\n| where TimeGenerated > ago(RedAgo) \r\n| where isnotempty(SystemID_s) \r\n| summarize arg_max(TimeGenerated, SystemID_s) by SystemID_s\r\n| project SystemID_s, TimeGenerated\r\n| extend PotentialAgent = strcat(SystemID_s, ' ')\r\n| project-rename SystemID = SystemID_s\r\n, LastDataSeen = TimeGenerated;\r\n// helper function- handle values and texts for time spans\r\nlet FtimePassed = (DateTime: datetime, Occured: int = 1) {\r\ncase(\r\ndatetime_diff('Hour', now(), DateTime) < 0 or isnull(DateTime), bag_pack(strcat('{TimeSpan', tostring(Occured), '}'), 'is missing', strcat('{TimeScale', tostring(Occured), '}'), '')\r\n, datetime_diff('Hour', now(), DateTime) < 2, bag_pack(strcat('{TimeSpan', tostring(Occured), '}'), '1', strcat('{TimeScale', tostring(Occured), '}'), 'hour')\r\n, datetime_diff('Hour', now(), DateTime) < 24, bag_pack(strcat('{TimeSpan', tostring(Occured), '}'), tostring(datetime_diff('Hour', now(), DateTime)), strcat('{TimeScale', tostring(Occured), '}'), 'hours') \r\n, datetime_diff('Hour', now(), DateTime) < 48, bag_pack(strcat('{TimeSpan', tostring(Occured), '}'), '1', strcat('{TimeScale', tostring(Occured), '}'), 'day')\r\n, bag_pack(strcat('{TimeSpan', tostring(Occured), '}'), tostring(datetime_diff('Day', now(), DateTime)), strcat('{TimeScale', tostring(Occured), '}'), 'days'))\r\n};\r\n// helper function- determine statuses and details per SID\r\nlet FBaggedDetails = (Agent: string, LastDataSeen: datetime, LastHealthSeen: datetime, LastConfigedOn: datetime, LastHealthSeen4Agent: datetime, GreenAgo: timespan, YellowAgo: timespan, RedAgo: timespan, AgentVersion: string='0.0', SystemID: string='', MessageKey: string, Action: string) {\r\ncase(\r\n// helper function- to make judgment on the agent/ SID status/ version\r\n// handle deletions:\r\n// deleted and no hearbeat- that is OK!\r\n((Action == \"System Deleted\" or Action == \"Agent Deleted\") and (LastHealthSeen < ago(DeletionPatience) or isempty(LastHealthSeen) )),bag_pack('Details', strcat(Action, ' and no hearbeat observed'),'ExtendedDetails', 'The deletion is successful', 'Status', 'Remove', 'MessageCode', 'DeletionSuccess', 'Variables','')\r\n// deleted in the last DeletionPatience minutes and still heartbeat- warning!\r\n,((Action == \"System Deleted\" or Action == \"Agent Deleted\") and (LastConfigedOn + DeletionPatience) > LastHealthSeen  ),bag_pack('Details', strcat(Action, ' but heartbeat is still observed'),'ExtendedDetails', 'The deletion is still pending', 'Status', 'Yellow', 'MessageCode', 'DeletionPending', 'Variables','')\r\n// deleted more than DeletionPatience ago and still heartbeat- error!\r\n,((Action == \"System Deleted\" or Action == \"Agent Deleted\") and (LastConfigedOn + DeletionPatience) < LastHealthSeen ),bag_pack('Details', strcat(Action, ' but heartbeat is still observed'),'ExtendedDetails', 'The deletion has likely failed', 'Status', 'Red', 'MessageCode', 'DeletionFailed', 'Variables','')\r\n// PYRFC messages from Heartbeat cannot be good! \r\n,isnotempty(MessageKey), bag_pack('Details', strcat('error ', MessageKey, ' received from SAP system'),'ExtendedDetails', 'The agent reported an error received from SAP', 'Status', 'Red', 'MessageCode', MessageKey, 'Variables','') \r\n// UPAVLS - An upgrade is available for the Microsoft Sentinel for SAP solution. Current solution version {CurrentVersion}, latest version {LatestVersion}\r\n,(Agent == 'Sentinel solution' and strcmp(LatestSolutionVersion,ThisSolutionVersion) >0), bag_pack('Details', 'Solution update available','ExtendedDetails', 'An upgrade is available for the Microsoft Sentinel for SAP solution', 'Status', 'Remove', 'MessageCode', 'UPAVLS', 'Variables', bag_pack('{CurrentVersion}', ThisSolutionVersion, '{LatestVersion}', LatestSolutionVersion))   \r\n,Agent == 'Sentinel solution', bag_pack('Details', 'Current solution version is latest available','ExtendedDetails', 'The current solution version is the latest available', 'Status', 'Remove', 'MessageCode', 'UPNAVLS', 'Variables', bag_pack('{CurrentVersion}', ThisSolutionVersion))\r\n// agent version checks:\r\n// UPAVLA - An upgrade is available for the Microsoft Sentinel for SAP Agent. <br> Current Agent released date {CurrentVersion}, latest version relesed on {LatestVersion}.\r\n// Relevant only for heartbeat sending agents\r\n,(SystemID== 'AGENT' and isnotempty(AgentVersion) and strcmp(LatestAgentVersion, AgentVersion) > 0 ), bag_pack('Details', 'Agent update available', 'ExtendedDetails', 'An upgrade is available for the Microsoft Sentinel for SAP Agent', 'Status', 'Header', 'MessageCode', 'UPAVLA', 'Variables', bag_pack('{CurrentVersion}', AgentVersion, '{LatestVersion}', LatestAgentVersion)) \r\n// // UPNAVLA - The current agent's version is the latest available. <br>Current Version release data {CurrentVersion}.\r\n// ,(SystemID== 'AGENT' and isnotempty(AgentVersion) and strcmp(LatestAgentVersion, AgentVersion) < 0 ), bag_pack('Details', 'Current agent version is latest available', 'ExtendedDetails', 'The current agent version is the latest available', 'Status', 'Remove', 'MessageCode', 'UPNAVLA', 'Variables', bag_pack('{CurrentVersion}', AgentVersion)) \r\n// UPNAVLS - The current solution's version is the latest available. <br>Current Version release data {CurrentVersion}.\r\n// Agent Configuration checks:\r\n// ACIOK - Agent configuration is there (since GreenAgo) and so is heartbeat, remove this configuration check (Green)\r\n, SystemID== 'AGENT' and (isnotempty(LastConfigedOn) and (LastHealthSeen4Agent > ago(GreenAgo))), bag_pack('Details', 'Agent configuration is there', 'ExtendedDetails', strcat('Agent was configured ', FtimePassed(LastConfigedOn)['{TimeSpan1}'], ' ', FtimePassed(LastConfigedOn)['{TimeScale1}'], ' ago, and heartbeat sent since then'), 'Status', 'Green', 'MessageCode', 'ACIOK', 'Variables', FtimePassed(LastConfigedOn))\r\n// ACCUY - Agent configuration is there, and there is no heartbeat since (between green and yellow).- (Yellow, StatusCode= 1, )\r\n, ((SystemID== 'AGENT' and isnotempty(LastConfigedOn) and (max_of(LastHealthSeen4Agent, LastConfigedOn) > ago(YellowAgo)))), bag_pack('Details', 'Agent configuration is incomplete', 'ExtendedDetails', strcat('Agent was configured ', FtimePassed(LastConfigedOn)['{TimeSpan1}'], ' ', FtimePassed(LastConfigedOn)['{TimeScale1}'], ' ago, but no heartbeat was recieved since then. Please review configuration'), 'Status', 'Yellow', 'MessageCode', 'ACCUY', 'Variables', FtimePassed(LastConfigedOn))\r\n// ACCOY - Agent configuration is there, and there is no heartbeat since (between yellow and red).- (Red, StatusCode=2, )\r\n, (SystemID== 'AGENT' and isnotempty(LastConfigedOn) and max_of(LastHealthSeen4Agent, LastConfigedOn) < ago(YellowAgo)), bag_pack('Details', 'Agent configuration is incomplete', 'ExtendedDetails', strcat('Agent was configured ', FtimePassed(LastConfigedOn)['{TimeSpan1}'], ' ', FtimePassed(LastConfigedOn)['{TimeScale1}'], ' ago, but no heartbeat was recieved since then. Please review configuration'), 'Status', 'Red', 'MessageCode', 'ACCOY', 'Variables', FtimePassed(LastConfigedOn))\r\n// handle missing data or heartbeat at the systems ID level:\r\n// OKOK - HB recieved in the last {TimeSpan1}' ' {TimeScale1}.\r\n, ((SystemID != 'AGENT' and LastHealthSeen > ago(GreenAgo)) or (SystemID == 'AGENT' and LastHealthSeen4Agent > ago(GreenAgo))), bag_pack('Details', iff(SystemID == 'AGENT', 'Agent healthy','System healthy'), 'ExtendedDetails', strcat('Data or heartbeat recieved in the last ', FtimePassed(ago(GreenAgo))['{TimeSpan1}'], ' ', FtimePassed(ago(GreenAgo))['{TimeScale1}']), 'Status', 'Green', 'MessageCode', 'OKOK', 'Variables', FtimePassed(ago(GreenAgo)))\r\n// MDOG - missing data and hearbeat for over GreenAgo timespan - Missing data and heartbeat for over {TimeSpan1}' ' {TimeScale1}.  Check Connectivity.\r\n, ((SystemID != 'AGENT' and  LastHealthSeen > ago(YellowAgo)) or (SystemID == 'AGENT' and LastHealthSeen4Agent > ago(YellowAgo))), bag_pack('Details', strcat(iff(SystemID == 'AGENT', 'Agent ','System '), 'unreachable for over 2 hours'), 'ExtendedDetails', strcat('Missing data and heartbeat for over ', FtimePassed(ago(GreenAgo))['{TimeSpan1}'], ' ', FtimePassed(ago(GreenAgo))['{TimeScale1}']), 'Status', 'Yellow', 'MessageCode', 'MDOG', 'Variables', FtimePassed(ago(GreenAgo))) \r\n// MDOY - missing data and heartbeat for over YellowAgo timespan - Missing data and heartbeat for over {TimeSpan1}' ' {TimeScale1}.  Check Connectivity.\r\n, ((SystemID != 'AGENT' and LastHealthSeen > ago(RedAgo) or (SystemID == 'AGENT' and LastHealthSeen4Agent > ago(RedAgo)))), bag_pack('Details', strcat(iff(SystemID == 'AGENT', 'Agent ','System '), 'unreachable for over 24 hours'), 'ExtendedDetails', strcat('Missing data and heartbeat for over ', FtimePassed(ago(YellowAgo))['{TimeSpan1}'], ' ', FtimePassed(ago(YellowAgo))['{TimeScale1}']), 'Status', 'Red', 'MessageCode', 'MDOY', 'Variables', FtimePassed(ago(YellowAgo))) \r\n// UNCLEAR - fallback of all cases, 'Data Last Recieved %s ago, heartbeat last recieved %s ago' {Variable1, Variable2}\r\n, bag_pack('Details', 'Status unclear – check system', 'ExtendedDetails', strcat('Data last recieved ', FtimePassed(LastDataSeen)['{TimeSpan1}'], ' ', FtimePassed(LastDataSeen)['{TimeScale1}'], ' ago, heartbeat last recieved ', FtimePassed(LastHealthSeen, 2)['{TimeSpan2}'], ' ', FtimePassed(LastHealthSeen, 2)['{TimeScale2}'], ' ago'), 'Status', 'Unclear', 'MessageCode', 'UNCLEAR', 'Variables', bag_merge(FtimePassed(LastDataSeen), FtimePassed(DateTime= LastHealthSeen, Occured=2))))\r\n};\r\n// gather the heartbeat and configuration and add a line per agent for version check\r\nAgentHealth\r\n// remove the WL fields for now, as these are only there on some of the lines (agents only)\r\n| project-away AgentGUID, AgentName, KeyMode, SdkPath, VaultId, SncPath, WLItemID, Action, SystemGUID\r\n// | union (AgentsHeader | project Agent, AgentVersion, LastHealthSeen)\r\n// now join again with agentHeader to get the last heartbeat recieved from the agent and connected systems\r\n| join kind= leftouter (AgentsHeader\r\n| project Agent, LastHealthSeen4Agent= LastHealthSeen, AssociatedSystems, AgentVersion)\r\non Agent\r\n// SID health inferred from data coming in\r\n| join kind=fullouter AgentPotential on $left.SystemID == $right.SystemID\r\n| extend\r\nAgent = iff(isempty(Agent), PotentialAgent, Agent),\r\nLastSeen = max_of(LastHealthSeen, LastDataSeen)\r\n| extend SystemID = iff(SystemID == SystemID1, SystemID1, strcat(SystemID1, SystemID))\r\n| extend LastDataSeen = LastDataSeen1 // LastDataSeen1 is the real one coming from AgentPotential\r\n// get agent attributes from WL\r\n| join kind= leftouter  (((SAPAgentDetailsWL | where system_id_s == \"AGENT\") | union AgentHealthEmpty)| project AgentGUID, AgentName, KeyMode, SdkPath, VaultId, SncPath, AgentWLItemID= WLItemID, AgentAction= Action ) \r\non $left.Agent== $right.AgentGUID\r\n// get system attributes from WL\r\n| join kind= leftouter  (((SAPAgentDetailsWL | where system_id_s != \"AGENT\") | union AgentHealthEmpty)| project SystemWLItemID= WLItemID, SystemAction= Action, SystemGUID, system_id_s, SystemsAgentGUID= AgentGUID) \r\non $left.Agent== $right.SystemsAgentGUID, $left.system_guid_g== $right.SystemGUID\r\n| extend WLItemID= iff(SystemID==\"AGENT\", AgentWLItemID, SystemWLItemID)\r\n| extend Action= iff(SystemID==\"AGENT\", AgentAction, SystemAction)\r\n// disregard non-GUID-like rows for systems that have been upgraded to be GUID-like\r\n| lookup GUIDedSystems on SystemID\r\n| where IsGUID == true or (IsGUID == false and GUIDedSystem != true)\r\n// get the judgement from FBaggedDetails\r\n| extend BaggedDetails = FBaggedDetails(Agent, LastDataSeen, LastHealthSeen, LastConfigedOn, LastHealthSeen4Agent, GreenAgo, YellowAgo, RedAgo, AgentVersion, SystemID, MessageKey, Action)\r\n| evaluate bag_unpack(BaggedDetails)\r\n| where Status != 'Remove' // not everything is interesting\r\n| extend StatusCode = array_index_of(colors, Status)\r\n| extend SystemRoleCode= column_ifexists(\"sap_client_category_s\",\"UP\")\r\n| extend SystemRoleCode= iff(bag_has_key(SystemRolesDictionary,SystemRoleCode), SystemRoleCode, \"UP\")\r\n| extend SystemRole= tostring(SystemRolesDictionary[SystemRoleCode])\r\n// | extend SystemClient= iff(isempty(ClientID), SystemID, strcat(SystemID, '-', ClientID)) \r\n| where isnotempty(SystemID) or Agent == \"Sentinel solution\" // to allow for solution version check in\r\n| project-keep Agent, SystemID, MessageCode, Details, ExtendedDetails, LastSeen, Status, StatusCode, Variables, AgentGUID, AgentName, KeyMode, SdkPath, VaultId, SncPath, SystemRole, SystemRoleCode, WLItemID, Action, ClientID, SystemGUID, AssociatedSystems, MessageKey, Message, AgentVersion\r\n| order by StatusCode, Agent desc;",
        "SAPFunctionsSAPConnectorOverviewQuery": "union isfuzzy=true  ABAP*, CWSQSAP.SAP_HeartBeat_CL, SecurityAlert\r\n| where Type != 'SecurityAlert'\r\n| where TimeGenerated > ago(DaysAgo)\r\n| extend SystemID_s= column_ifexists('SystemID_s','No system found')\r\n| project TimeGenerated, SystemID_s, Type\r\n",
        "SAPFunctionsSAPCRLogQuery": "//generated function structure for custom log CWSQSAP.ABAPCRLog_CL \n//generated on 2022-10-13 \n//Sentinel4SAP solution version 2.0.30 \n\n// CWSQSAP.ABAPCRLog_CL is a custom log that held the change requests coming from S4S agents untill October 2022\nlet D_ABAPCRLog_CL = datatable(TimeGenerated:datetime \n,Request:string\n,Description:string\n,Category:string\n,ClientID:string\n,Owner:string\n,Status:string\n,ObjectType:string\n,ObjectName:string\n,TableName:string\n,ViewName:string\n,TableKey:string\n,SystemID:string\n,SystemNumber:string\n,Instance:string\n,Host:string\n,Type:string\n)['1000-01-01T00:00:00Z','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString'];\nlet T_ABAPCRLog_CL = (CWSQSAP.ABAPCRLog_CL | project \nTimeGenerated = column_ifexists('TimeGenerated', '1000-01-01T00:00:00Z')\n,Request = column_ifexists('Request_s', 'initialString')\n,Description = column_ifexists('Description_s', 'initialString')\n,Category = column_ifexists('Category', 'initialString')\n,ClientID = column_ifexists('ClientID_s', 'initialString')\n,Owner = column_ifexists('Owner_s', 'initialString')\n,Status = column_ifexists('Status_s', 'initialString')\n,ObjectType = column_ifexists('ObjectType_s', 'initialString')\n,ObjectName = column_ifexists('ObjectName_s', 'initialString')\n,TableName = column_ifexists('TableName_s', 'initialString')\n,ViewName = column_ifexists('ViewName_s', 'initialString')\n,TableKey = column_ifexists('TableKey_s', 'initialString')\n,SystemID = column_ifexists('SystemID_s', 'initialString')\n,SystemNumber = column_ifexists('SystemNumber_s', 'initialString')\n,Instance = column_ifexists('Instance_s', 'initialString')\n,Host = column_ifexists('Host_s', 'initialString')\n,Type = column_ifexists('Type', 'initialString')\n);\n// CWSQSAP.ABAPCRLogHeader_CL is a custom log that holds the change requests headers coming from S4S agents starting from October 2022\nlet D_ABAPCRLogHeader_CL = datatable(TimeGeneratedHeader:datetime \n, TimeGenerated: datetime\n,UpdatedOn: datetime \n,Request:string\n,Description:string\n,Category:string\n,ClientID:string\n,Owner:string\n,Status:string\n,SystemID:string\n,SystemNumber:string\n,Instance:string\n,Host:string\n,Type:string\n)['1000-01-01T00:00:00Z', '1000-01-01T00:00:00Z', '1000-01-01T00:00:00Z','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString'];\nlet T_CRHeader= CWSQSAP.ABAPCRLogHeader_CL\n| where TimeGenerated < now() \n// | project-rename TimeGeneratedHeader= TimeGenerated\n| project TimeGeneratedHeader = column_ifexists('TimeGenerated', todatetime('1000-01-01T00:00:00Z'))\n,Request = column_ifexists('Request_s', 'initialString')\n,Description = column_ifexists('Description_s', 'initialString')\n,Category = column_ifexists('Category', 'initialString')\n,ClientID = column_ifexists('ClientID_s', 'initialString')\n,Owner = column_ifexists('Owner_s', 'initialString')\n,Status = column_ifexists('Status_s', 'initialString')\n,SystemID = column_ifexists('SystemID_s', 'initialString')\n,SystemNumber = column_ifexists('SystemNumber_s', 'initialString')\n,Instance = column_ifexists('Instance_s', 'initialString')\n,Host = column_ifexists('Host_s', 'initialString')\n,Type = column_ifexists('Type', 'initialString')\n, UpdatedOn= column_ifexists('UpdatedOn_t', '1000-01-01T00:00:00Z');\n// CWSQSAP.ABAPCRLogLine_CL is a custom log that holds the change requests line items coming from S4S agents starting October 2022\nlet D_ABAPCRLogLine_CL = datatable(TimeGenerated:datetime \n,Request:string\n,ObjectType:string\n,ObjectName:string\n,TableName:string\n,ViewName:string\n,TableKey:string\n,SystemID:string\n)['1000-01-01T00:00:00Z','initialString','initialString','initialString','initialString','initialString','initialString','initialString'];\nlet T_CRLine= CWSQSAP.ABAPCRLogLine_CL\n| where TimeGenerated < now()\n| project-away TenantId, SourceSystem, Host_s, Instance_s, MG, ManagementGroupName, Type, _ResourceId\n| project TimeGenerated = column_ifexists('TimeGenerated', '1000-01-01T00:00:00Z')\n,Request = column_ifexists('Request_s', 'initialString')\n,ObjectType = column_ifexists('ObjectType_s', 'initialString')\n,ObjectName = column_ifexists('ObjectName_s', 'initialString')\n,TableName = column_ifexists('TableName_s', 'initialString')\n,ViewName = column_ifexists('ViewName_s', 'initialString')\n,TableKey = column_ifexists('TableKey_s', 'initialString')\n,SystemID = column_ifexists('SystemID_s', 'initialString');\n// create a view that details that \"stiches\" the CR header and line together\nlet T_CRLogVT = (T_CRHeader | union isfuzzy=true D_ABAPCRLogHeader_CL) | join kind=inner  (T_CRLine | union isfuzzy=true (D_ABAPCRLogLine_CL | project-away TimeGenerated)) on Request, SystemID\n| project-away Request1, SystemID1\n| where TimeGenerated != '1000-01-01T00:00:00Z'\n| where SystemID != 'initialString'\n| extend Type= \"ABAPCRLog_CL_VT\";\n// union the old agent data (CWSQSAP.ABAPCRLog_CL) with newer agents data (CWSQSAP.ABAPCRLogHeader_CL joined with CWSQSAP.ABAPCRLogLine_CL)\nT_ABAPCRLog_CL | union isfuzzy= true D_ABAPCRLog_CL , T_CRLogVT\n| where TimeGenerated != '1000-01-01T00:00:00Z'\n",
        "SAPFunctionsSAPFilesLogsQuery": "//generated function structure for custom log CWSQSAP.ABAPFilesLogs_CL \n//generated on 2022-05-07 \n//Sentinel4SAP solution version 1.2.98 \nlet D_ABAPFilesLogs_CL = datatable(TimeGenerated:datetime \n,Extracted:string\n,Type:string\n)['1000-01-01T00:00:00Z','initialString','initialString'];\n\nlet T_ABAPFilesLogs_CL = (CWSQSAP.ABAPFilesLogs_CL | project \nTimeGenerated = column_ifexists('TimeGenerated', '1000-01-01T00:00:00Z')\n,Extracted = column_ifexists('Extracted_s', 'initialString')\n,Type = column_ifexists('Type', 'initialString')\n);\n\nT_ABAPFilesLogs_CL | union isfuzzy= true (D_ABAPFilesLogs_CL  | where TimeGenerated != '1000-01-01T00:00:00Z')",
        "SAPFunctionsSAPHeartBeatQuery": "//generated function structure for custom log CWSQSAP.SAP_HeartBeat_CL \n//generated on 2022-12-07 \n//Sentinel4SAP solution version 2.0.33 \nlet SystemRolesDictionary= dynamic({\"unknown\":\"Production\", \"\":\"Production\", \"P\":\"Production\", \"T\": \"Test\", \"C\": \"Customizing\", \"D\": \"Demo\", \"E\": \"Training/Education\", \"S\":\"SAP reference\"});\nlet D_SAP_HeartBeat_CL = datatable(TimeGenerated:datetime \n,agent_id:string\n,agent_ver:string\n,host:string\n,system_id:string\n,push_timestamp:real\n,agent_timezone:string\n,sap_client_category: string \n,sap_rfc_dest: string \n,Type:string\n)['1000-01-01T00:00:00Z','initialString','initialString','initialString','initialString',1.1111,'initialString'\n,'initialString','initialString','initialString'];\nlet T_SAP_HeartBeat_CL = (CWSQSAP.SAP_HeartBeat_CL | project \nTimeGenerated = column_ifexists('TimeGenerated', '1000-01-01T00:00:00Z')\n,agent_id = column_ifexists('agent_id_s', column_ifexists('agent_id_g', 'initialString'))\n,agent_ver = column_ifexists('agent_ver_s', 'initialString')\n,host = column_ifexists('host_s', 'initialString')\n,system_id = column_ifexists('system_id_s', 'initialString')\n,push_timestamp = column_ifexists('push_timestamp_d', 1.1111)\n,agent_timezone = column_ifexists('agent_timezone_s', 'initialString')\n,Type = column_ifexists('Type', 'initialString')\n,sap_client_category= column_ifexists('sap_client_category_s','initialString')\n,sap_rfc_dest= column_ifexists('sap_rfc_dest','initialString')\n);\nT_SAP_HeartBeat_CL | union isfuzzy= true (D_SAP_HeartBeat_CL  | where TimeGenerated != '1000-01-01T00:00:00Z')\n| extend SystemRole= tostring(SystemRolesDictionary[sap_client_category])",
        "SAPFunctionsSAPJobLogQuery": "//generated function structure for custom log CWSQSAP.ABAPJobLog_CL \n//generated on 2022-05-07 \n//Sentinel4SAP solution version 1.2.98 \nlet D_ABAPJobLog_CL = datatable(TimeGenerated:datetime \n,Instance:string\n,UserReleaseInstance:string\n,JobName:string\n,JobCount:string\n,MessageText:string\n,SchedulingDateTime_t:datetime\n,StartDateTime_t:datetime\n,JobGroup:string\n,SchedulingUser:string\n,LastChangeByUser:string\n,ReleaseUser:string\n,BackgroundUserforAuthChecks:string\n,ClientID:string\n,WorkProcessNumber:real\n,WorkProcessID:real\n,BgdProcessingEvent:string\n,BgdEventParameters:string\n,TargetServer:string\n,JobClassification:string\n,JobPriority:real\n,MessageClass:string\n,MessageNumber:string\n,MessageType:string\n,ABAPProgram:string\n,GUIStatus:string\n,DynproNumber:string\n,SystemID:string\n,SystemNumber:string\n,Host:string\n,Type:string\n)['1000-01-01T00:00:00Z','initialString','initialString','initialString','initialString','initialString','1000-01-01T00:00:00Z','1000-01-01T00:00:00Z','initialString','initialString','initialString','initialString','initialString','initialString',1.1111,1.1111,'initialString','initialString','initialString','initialString',1.1111,'initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString'];\n\nlet T_ABAPJobLog_CL = (CWSQSAP.ABAPJobLog_CL | project \nTimeGenerated = column_ifexists('TimeGenerated', '1000-01-01T00:00:00Z')\n,Instance = column_ifexists('Instance_s', 'initialString')\n,UserReleaseInstance = column_ifexists('UserReleaseInstance_s', 'initialString')\n,JobName = column_ifexists('JobName_s', 'initialString')\n,JobCount = column_ifexists('JobCount_s', 'initialString')\n,MessageText = column_ifexists('MessageText_s', 'initialString')\n,SchedulingDateTime_t = column_ifexists('SchedulingDateTime_t', '1000-01-01T00:00:00Z')\n,StartDateTime_t = column_ifexists('StartDateTime_t', '1000-01-01T00:00:00Z')\n,JobGroup = column_ifexists('JobGroup_s', 'initialString')\n,SchedulingUser = column_ifexists('SchedulingUser_s', 'initialString')\n,LastChangeByUser = column_ifexists('LastChangeByUser_s', 'initialString')\n,ReleaseUser = column_ifexists('ReleaseUser_s', 'initialString')\n,BackgroundUserforAuthChecks = column_ifexists('BackgroundUserforAuthChecks_s', 'initialString')\n,ClientID = column_ifexists('ClientID_s', 'initialString')\n,WorkProcessNumber = column_ifexists('WorkProcessNumber_d', 1.1111)\n,WorkProcessID = column_ifexists('WorkProcessID_d', 1.1111)\n,BgdProcessingEvent = column_ifexists('BgdProcessingEvent_s', 'initialString')\n,BgdEventParameters = column_ifexists('BgdEventParameters_s', 'initialString')\n,TargetServer = column_ifexists('TargetServer_s', 'initialString')\n,JobClassification = column_ifexists('JobClassification_s', 'initialString')\n,JobPriority = column_ifexists('JobPriority_d', 1.1111)\n,MessageClass = column_ifexists('MessageClass_s', 'initialString')\n,MessageNumber = column_ifexists('MessageNumber_s', 'initialString')\n,MessageType = column_ifexists('MessageType_s', 'initialString')\n,ABAPProgram = column_ifexists('ABAPProgram_s', 'initialString')\n,GUIStatus = column_ifexists('GUIStatus_s', 'initialString')\n,DynproNumber = column_ifexists('DynproNumber_s', 'initialString')\n,SystemID = column_ifexists('SystemID_s', 'initialString')\n,SystemNumber = column_ifexists('SystemNumber_s', 'initialString')\n,Host = column_ifexists('Host_s', 'initialString')\n,Type = column_ifexists('Type', 'initialString')\n);\n\nT_ABAPJobLog_CL | union isfuzzy= true (D_ABAPJobLog_CL  | where TimeGenerated != '1000-01-01T00:00:00Z')",
        "SAPFunctionsSAPOS_GWQuery": "//generated function structure for custom log CWSQSAP.ABAPOS_GW_CL \n//generated on 2022-05-07 \n//Sentinel4SAP solution version 1.2.98 \nlet D_ABAPOS_GW_CL = datatable(TimeGenerated:datetime \n,System:string\n,Severity:string\n,MessageText:string\n,Type:string\n)['1000-01-01T00:00:00Z','initialString','initialString','initialString','initialString'];\n\nlet T_ABAPOS_GW_CL = (CWSQSAP.ABAPOS_GW_CL | project \nTimeGenerated = column_ifexists('TimeGenerated', '1000-01-01T00:00:00Z')\n,System = column_ifexists('System_s', 'initialString')\n,Severity = column_ifexists('Severity_s', 'initialString')\n,MessageText = column_ifexists('MessageText_s', 'initialString')\n,Type = column_ifexists('Type', 'initialString')\n);\n\nT_ABAPOS_GW_CL | union isfuzzy= true (D_ABAPOS_GW_CL  | where TimeGenerated != '1000-01-01T00:00:00Z')",
        "SAPFunctionsSAPOS_ICMQuery": "//generated function structure for custom log CWSQSAP.ABAPOS_ICM_CL \n//generated on 2022-05-07 \n//Sentinel4SAP solution version 1.2.98 \nlet D_ABAPOS_ICM_CL = datatable(TimeGenerated:datetime \n,System:string\n,Severity:string\n,MessageText:string\n,Type:string\n)['1000-01-01T00:00:00Z','initialString','initialString','initialString','initialString'];\n\nlet T_ABAPOS_ICM_CL = (CWSQSAP.ABAPOS_ICM_CL | project \nTimeGenerated = column_ifexists('TimeGenerated', '1000-01-01T00:00:00Z')\n,System = column_ifexists('System_s', 'initialString')\n,Severity = column_ifexists('Severity_s', 'initialString')\n,MessageText = column_ifexists('MessageText_s', 'initialString')\n,Type = column_ifexists('Type', 'initialString')\n);\n\nT_ABAPOS_ICM_CL | union isfuzzy= true (D_ABAPOS_ICM_CL  | where TimeGenerated != '1000-01-01T00:00:00Z')",
        "SAPFunctionsSAPOS_SyslogQuery": "//generated function structure for custom log CWSQSAP.ABAPOS_Syslog_CL \n//generated on 2022-05-07 \n//Sentinel4SAP solution version 1.2.98 \nlet D_ABAPOS_Syslog_CL = datatable(TimeGenerated:datetime \n,System:string\n,Client:string\n,User:string\n,MessageNumber:string\n,Text:string\n,Severity:string\n,TransactionCode:string\n,Type:string\n)['1000-01-01T00:00:00Z','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString'];\n\nlet T_ABAPOS_Syslog_CL = (CWSQSAP.ABAPOS_Syslog_CL | project \nTimeGenerated = column_ifexists('TimeGenerated', '1000-01-01T00:00:00Z')\n,System = column_ifexists('System_s', 'initialString')\n,Client = column_ifexists('Client_s', 'initialString')\n,User = column_ifexists('User_s', 'initialString')\n,MessageNumber = column_ifexists('MessageNumber_s', 'initialString')\n,Text = column_ifexists('Text_s', 'initialString')\n,Severity = column_ifexists('Severity_s', 'initialString')\n,TransactionCode = column_ifexists('TransactionCode_s', 'initialString')\n,Type = column_ifexists('Type', 'initialString')\n);\n\nT_ABAPOS_Syslog_CL | union isfuzzy= true (D_ABAPOS_Syslog_CL  | where TimeGenerated != '1000-01-01T00:00:00Z')",
        "SAPFunctionsSAPOS_WPQuery": "//generated function structure for custom log CWSQSAP.ABAPOS_WP_CL \n//generated on 2022-05-07 \n//Sentinel4SAP solution version 1.2.98 \nlet D_ABAPOS_WP_CL = datatable(TimeGenerated:datetime \n,System:string\n,Severity:string\n,MessageText:string\n,WPnumber:string\n,Type:string\n)['1000-01-01T00:00:00Z','initialString','initialString','initialString','initialString','initialString'];\n\nlet T_ABAPOS_WP_CL = (CWSQSAP.ABAPOS_WP_CL | project \nTimeGenerated = column_ifexists('TimeGenerated', '1000-01-01T00:00:00Z')\n,System = column_ifexists('System_s', 'initialString')\n,Severity = column_ifexists('Severity_s', 'initialString')\n,MessageText = column_ifexists('MessageText_s', 'initialString')\n,WPnumber = column_ifexists('WPnumber_s', 'initialString')\n,Type = column_ifexists('Type', 'initialString')\n);\n\nT_ABAPOS_WP_CL | union isfuzzy= true (D_ABAPOS_WP_CL  | where TimeGenerated != '1000-01-01T00:00:00Z')",
        "SAPFunctionsSAPSpoolLogQuery": "//generated function structure for custom log CWSQSAP.ABAPSpoolLog_CL \n//generated on 2022-05-07 \n//Sentinel4SAP solution version 1.2.98 \nlet D_ABAPSpoolLog_CL = datatable(TimeGenerated:datetime \n,ClientID:string\n,SpoolRequestNumber:string\n,SpoolRequestName:string\n,SpoolRequestSuffix1:string\n,SpoolRequestSuffix2:string\n,User:string\n,ExternalMode:string\n,SpoolRequestCompleted:string\n,TemseReadProtectionRule:string\n,TemseNumDeleteProtectionRule:string\n,TemseNumAddProtectionRule:string\n,TemseNumChangeProtectionRule:string\n,PrintImmediately:string\n,DeleteSpoolRequestAuto:string\n,AutoRereoute:string\n,OutputDevice:string\n,NumofCopies:string\n,Priority:string\n,FormatType:string\n,TemSeGeneralcounter:string\n,SpoolErrorStatus:string\n,TemSeObjectName:string\n,TemSeObjectPart:string\n,SpoolRequestTitle:string\n,DelFlag:string\n,PrintSAPCoverPage:string\n,PrintOSCoverPage:string\n,RecipientofSpoolRequest:string\n,Department:string\n,ArchiveType:string\n,ArchivingDevice:string\n,ArchiveStatus:string\n,ValueAuthCheck:string\n,SpoolRequestisALogForAnotherRequest:string\n,CountryKey:string\n,TelecommunicationsPartner:string\n,TelecommunicationsPartnerE:string\n,DocumentType:string\n,PrinterLongName:string\n,DeletedAt_t:datetime\n,SystemID:string\n,SystemNumber:string\n,Instance:string\n,Host:string\n,Type:string\n)['1000-01-01T00:00:00Z','initialString','1.1111','initialString','initialString','initialString','initialString','initialString','initialString','1.1111','1.1111','1.1111','1.1111','initialString','initialString','initialString','initialString','1.1111','1.1111','initialString','1.1111','initialString','initialString','1.1111','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','1000-01-01T00:00:00Z','initialString','initialString','initialString','initialString','initialString'];\n\nlet T_ABAPSpoolLog_CL = (CWSQSAP.ABAPSpoolLog_CL | project \nTimeGenerated = column_ifexists('TimeGenerated', '1000-01-01T00:00:00Z')\n,ClientID = column_ifexists('ClientID_s', 'initialString')\n,SpoolRequestNumber = strcat(column_ifexists('SpoolRequestNumber_d', '1.1111'),column_ifexists('SpoolRequestNumber_s', '1.1111'))\n,SpoolRequestName = column_ifexists('SpoolRequestName_s', 'initialString')\n,SpoolRequestSuffix1 = column_ifexists('SpoolRequestSuffix1_s', 'initialString')\n,SpoolRequestSuffix2 = column_ifexists('SpoolRequestSuffix2_s', 'initialString')\n,User = column_ifexists('User_s', 'initialString')\n,ExternalMode = column_ifexists('ExternalMode_s', 'initialString')\n,SpoolRequestCompleted = column_ifexists('SpoolRequestCompleted_s', 'initialString')\n,TemseReadProtectionRule = strcat(column_ifexists('TemseReadProtectionRule_d', '1.1111'),column_ifexists('TemseReadProtectionRule_s', '1.1111'))\n,TemseNumDeleteProtectionRule = strcat(column_ifexists('TemseNumDeleteProtectionRule_d', '1.1111'),column_ifexists('TemseNumDeleteProtectionRule_s', '1.1111'))\n,TemseNumAddProtectionRule = strcat(column_ifexists('TemseNumAddProtectionRule_d', '1.1111'), column_ifexists('TemseNumAddProtectionRule_s', '1.1111'))\n,TemseNumChangeProtectionRule = strcat(column_ifexists('TemseNumChangeProtectionRule_d', '1.1111'), column_ifexists('TemseNumChangeProtectionRule_s', '1.1111'))\n,PrintImmediately = column_ifexists('PrintImmediately_s', 'initialString')\n,DeleteSpoolRequestAuto = column_ifexists('DeleteSpoolRequestAuto_s', 'initialString')\n,AutoRereoute = column_ifexists('AutoRereoute_s', 'initialString')\n,OutputDevice = column_ifexists('OutputDevice_s', 'initialString')\n,NumofCopies = strcat(column_ifexists('NumofCopies_d', '1.1111'), column_ifexists('NumofCopies_s', '1.1111'))\n,Priority = strcat(column_ifexists('Priority_d', '1.1111'), column_ifexists('Priority_s', '1.1111'))\n,FormatType = column_ifexists('FormatType_s', 'initialString')\n,TemSeGeneralcounter = strcat(column_ifexists('TemSeGeneralcounter_d', '1.1111'), column_ifexists('TemSeGeneralcounter_s', '1.1111'))\n,SpoolErrorStatus = column_ifexists('SpoolErrorStatus_s', 'initialString')\n,TemSeObjectName = column_ifexists('TemSeObjectName_s', 'initialString')\n,TemSeObjectPart = strcat(column_ifexists('TemSeObjectPart_d', '1.1111'),column_ifexists('TemSeObjectPart_s', '1.1111'))\n,SpoolRequestTitle = column_ifexists('SpoolRequestTitle_s', 'initialString')\n,DelFlag = column_ifexists('DelFlag_s', 'initialString')\n,PrintSAPCoverPage = column_ifexists('PrintSAPCoverPage_s', 'initialString')\n,PrintOSCoverPage = column_ifexists('PrintOSCoverPage_s', 'initialString')\n,RecipientofSpoolRequest = column_ifexists('RecipientofSpoolRequest_s', 'initialString')\n,Department = column_ifexists('Department_s', 'initialString')\n,ArchiveType = column_ifexists('ArchiveType_s', 'initialString')\n,ArchivingDevice = column_ifexists('ArchivingDevice_s', 'initialString')\n,ArchiveStatus = column_ifexists('ArchiveStatus_s', 'initialString')\n,ValueAuthCheck = column_ifexists('ValueAuthCheck_s', 'initialString')\n,SpoolRequestisALogForAnotherRequest = column_ifexists('SpoolRequestisALogForAnotherRequest_s', 'initialString')\n,CountryKey = column_ifexists('CountryKey_s', 'initialString')\n,TelecommunicationsPartner = column_ifexists('TelecommunicationsPartner_s', 'initialString')\n,TelecommunicationsPartnerE = column_ifexists('TelecommunicationsPartnerE_s', 'initialString')\n,DocumentType = column_ifexists('DocumentType_s', 'initialString')\n,PrinterLongName = column_ifexists('PrinterLongName_s', 'initialString')\n,DeletedAt_t = column_ifexists('DeletedAt_t', '1000-01-01T00:00:00Z')\n,SystemID = column_ifexists('SystemID_s', 'initialString')\n,SystemNumber = column_ifexists('SystemNumber_s', 'initialString')\n,Instance = column_ifexists('Instance_s', 'initialString')\n,Host = column_ifexists('Host_s', 'initialString')\n,Type = column_ifexists('Type', 'initialString')\n);\n\nT_ABAPSpoolLog_CL | union isfuzzy= true (D_ABAPSpoolLog_CL  | where ClientID != 'initialString')",
        "SAPFunctionsSAPSpoolOutputLogQuery": "//generated function structure for custom log CWSQSAP.ABAPSpoolOutputLog_CL \n//generated on 2022-05-07 \n//Sentinel4SAP solution version 1.2.98 \nlet D_ABAPSpoolOutputLog_CL = datatable(TimeGenerated:datetime \n,SpoolRequestNumber:string\n,OutputRequestNumber:real\n,OutputDevice:string\n,FormatType:string\n,PhysicalFormatType:string\n,OutputRequestStatus:string\n,TemSeGeneralcounter:real\n,NumofCopies:real\n,StartPage:real\n,LastPage:real\n,User:string\n,SpoolNumberofOutputReqProcessed:real\n,SpoolNumberofOutputReqWithProblems:real\n,SpoolNumberofOutputReqWithErrors:real\n,HostSpoolerID:string\n,ClientID:string\n,Comment:string\n,PrintRequestSize:real\n,ErrorSpoolRequestNumber:real\n,Priority:real\n,ReasonforOutputRequest:string\n,Title:string\n,RecipientofSpoolRequest:string\n,Department:string\n,TelecommunicationsPartner:string\n,HostName:string\n,AppServer:string\n,CopyCount:real\n,CopyCounter:real\n,PrinterLongName:string\n,SystemID:string\n,SystemNumber:string\n,Instance:string\n,Host:string\n,Type:string\n)['1000-01-01T00:00:00Z',1.1111,1.1111,'initialString','initialString','initialString','initialString',1.1111,1.1111,1.1111,1.1111,'initialString',1.1111,1.1111,1.1111,'initialString','initialString','initialString',1.1111,1.1111,1.1111,'initialString','initialString','initialString','initialString','initialString','initialString','initialString',1.1111,1.1111,'initialString','initialString','initialString','initialString','initialString','initialString'];\n\nlet T_ABAPSpoolOutputLog_CL = (CWSQSAP.ABAPSpoolOutputLog_CL | project \nTimeGenerated = column_ifexists('TimeGenerated', '1000-01-01T00:00:00Z')\n,SpoolRequestNumber = strcat(column_ifexists('SpoolRequestNumber_d', '1.1111'),column_ifexists('SpoolRequestNumber_s', '1.1111'))\n,OutputRequestNumber = column_ifexists('OutputRequestNumber_d', 1.1111)\n,OutputDevice = column_ifexists('OutputDevice_s', 'initialString')\n,FormatType = column_ifexists('FormatType_s', 'initialString')\n,PhysicalFormatType = column_ifexists('PhysicalFormatType_s', 'initialString')\n,OutputRequestStatus = column_ifexists('OutputRequestStatus_s', 'initialString')\n,TemSeGeneralcounter = column_ifexists('TemSeGeneralcounter_d', 1.1111)\n,NumofCopies = column_ifexists('NumofCopies_d', 1.1111)\n,StartPage = column_ifexists('StartPage_d', 1.1111)\n,LastPage = column_ifexists('LastPage_d', 1.1111)\n,User = column_ifexists('User_s', 'initialString')\n,SpoolNumberofOutputReqProcessed = column_ifexists('SpoolNumberofOutputReqProcessed_d', 1.1111)\n,SpoolNumberofOutputReqWithProblems = column_ifexists('SpoolNumberofOutputReqWithProblems_d', 1.1111)\n,SpoolNumberofOutputReqWithErrors = column_ifexists('SpoolNumberofOutputReqWithErrors_d', 1.1111)\n,HostSpoolerID = column_ifexists('HostSpoolerID_s', 'initialString')\n,ClientID = column_ifexists('ClientID_s', 'initialString')\n,Comment = column_ifexists('Comment_s', 'initialString')\n,PrintRequestSize = column_ifexists('PrintRequestSize_d', 1.1111)\n,ErrorSpoolRequestNumber = column_ifexists('ErrorSpoolRequestNumber_d', 1.1111)\n,Priority = column_ifexists('Priority_d', 1.1111)\n,ReasonforOutputRequest = column_ifexists('ReasonforOutputRequest_s', 'initialString')\n,Title = column_ifexists('Title_s', 'initialString')\n,RecipientofSpoolRequest = column_ifexists('RecipientofSpoolRequest_s', 'initialString')\n,Department = column_ifexists('Department_s', 'initialString')\n,TelecommunicationsPartner = column_ifexists('TelecommunicationsPartner_s', 'initialString')\n,HostName = column_ifexists('HostName_s', 'initialString')\n,AppServer = column_ifexists('AppServer_s', 'initialString')\n,CopyCount = column_ifexists('CopyCount_d', 1.1111)\n,CopyCounter = column_ifexists('CopyCounter_d', 1.1111)\n,PrinterLongName = column_ifexists('PrinterLongName_s', 'initialString')\n,SystemID = column_ifexists('SystemID_s', 'initialString')\n,SystemNumber = column_ifexists('SystemNumber_s', 'initialString')\n,Instance = column_ifexists('Instance_s', 'initialString')\n,Host = column_ifexists('Host_s', 'initialString')\n,Type = column_ifexists('Type', 'initialString')\n);\n\nT_ABAPSpoolOutputLog_CL | union isfuzzy= true (D_ABAPSpoolOutputLog_CL  | where TimeGenerated != '1000-01-01T00:00:00Z')",
        "SAPFunctionsSAPTableDataLogQuery": "//generated function structure for custom log CWSQSAP.ABAPTableDataLog_CL \n//generated on 2022-05-07 \n//Sentinel4SAP solution version 1.2.98 \nlet D_ABAPTableDataLog_CL = datatable(TimeGenerated:datetime \n,DBLogID:string\n,LogKey:string\n,Host:string\n,UserName:string\n,TransactionCode:string\n,Program:string\n,OperationTypeSQL:string\n,VersionNumber:string\n,Language:string\n,TableName:string\n,TableField:string\n,OldValue:string\n,NewValue:string\n,SystemID:string\n,SystemNumber:string\n,Instance:string\n,Type:string\n)['1000-01-01T00:00:00Z','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString'];\n\nlet T_ABAPTableDataLog_CL = (CWSQSAP.ABAPTableDataLog_CL | project \nTimeGenerated = column_ifexists('TimeGenerated', '1000-01-01T00:00:00Z')\n,DBLogID = column_ifexists('DBLogID_s', 'initialString')\n,LogKey = column_ifexists('LogKey_s', 'initialString')\n,Host = column_ifexists('Host_s', 'initialString')\n,UserName = column_ifexists('UserName_s', 'initialString')\n,TransactionCode = column_ifexists('TransactionCode_s', 'initialString')\n,Program = column_ifexists('Program_s', 'initialString')\n,OperationTypeSQL = column_ifexists('OperationTypeSQL_s', 'initialString')\n,VersionNumber = column_ifexists('VersionNumber_s', 'initialString')\n,Language = column_ifexists('Language_s', 'initialString')\n,TableName = column_ifexists('TableName_s', 'initialString')\n,TableField = column_ifexists('TableField_s', 'initialString')\n,OldValue = column_ifexists('OldValue_s', 'initialString')\n,NewValue = column_ifexists('NewValue_s', 'initialString')\n,SystemID = column_ifexists('SystemID_s', 'initialString')\n,SystemNumber = column_ifexists('SystemNumber_s', 'initialString')\n,Instance = column_ifexists('Instance_s', 'initialString')\n,Type = column_ifexists('Type', 'initialString')\n);\n\nT_ABAPTableDataLog_CL | union isfuzzy= true (D_ABAPTableDataLog_CL  | where TimeGenerated != '1000-01-01T00:00:00Z')",
        "SAPFunctionsSAPUsersAuthorizationsQuery": "let UserMDTimeAgo = totimespan(toscalar(SAPGetParameters('UserMDLookBack')| project-keep ValueLow));\n\n// AGR_USERS- Assignment of roles to users\nlet agr_users_empty_view = datatable (\n    TimeGenerated: datetime,\n    TO_DAT_s: string,\n    AGR_NAME_s: string,\n    UNAME_s: string,\n    MANDT_s: string,\n    SystemID_s: string\n) [\n    datetime(1910-06-11), '', '', '', '', ''\n];\nlet AGR_USERS = materialize(agr_users_empty_view\n    | union isfuzzy=true CWSQSAP.ABAP_AGR_USERS_CL\n    | where TimeGenerated > ago(UserMDTimeAgo)\n    | where todatetime(TO_DAT_s) > ago(1d)\n    | project TimeGenerated \n        , TO_DAT_s\n        , AGR_NAME_s\n        , UNAME_s\n        , MANDT_s,\n        SystemID_s\n    | summarize arg_max(TimeGenerated, *)\n        by\n        TO_DAT_s\n        , AGR_NAME_s\n        , UNAME_s\n        , MANDT_s,\n        SystemID_s\n    );\n// AGR_AGRS- Roles in Composite Roles\nlet agr_agrs_empty_view = datatable (\n    TimeGenerated: datetime,\n    AGR_NAME_s: string,\n    CHILD_AGR_s: string,\n    MANDT_s: string,\n    SystemID_s: string\n) [\n    datetime(1910-06-11), '', '', '', ''\n];\nlet AGR_AGRS = (agr_agrs_empty_view\n    | union isfuzzy=true CWSQSAP.ABAP_AGR_AGRS_CL\n    | where TimeGenerated > ago(UserMDTimeAgo)\n    | project TimeGenerated \n    ,AGR_NAME_s\n    ,CHILD_AGR_s\n    ,MANDT_s\n    ,SystemID_s\n    | summarize arg_max(TimeGenerated, *)\n        by\n          AGR_NAME_s\n        , CHILD_AGR_s\n        , MANDT_s,\n        SystemID_s\n    );\n\n// AGR1251 - Authorization data for the activity group data\nlet agr_1251_empty_view = datatable (\n    TimeGenerated: datetime,\n    AGR_NAME_s: string,\n    OBJECT_s: string,\n    AUTH_s: string,\n    VARIANT_s: string,\n    FIELD_s: string,\n    LOW_s: string,\n    HIGH_s: string,\n    UNAME_s: string,\n    MANDT_s: string,\n    SystemID_s: string\n) [\n    datetime(1910-06-11), '', '', '', '', '', '', '', '', '', ''\n];\n\nlet AGR_1251 =  (agr_1251_empty_view\n    | union isfuzzy=true CWSQSAP.ABAP_AGR_1251_CL\n    | where TimeGenerated > ago(UserMDTimeAgo)\n    | project-keep \n        AGR_NAME_s\n        , OBJECT_s\n        , AUTH_s\n        , VARIANT_s\n        , FIELD_s\n        , LOW_s\n        , HIGH_s\n        , MANDT_s\n        , SystemID_s\n    | extend PackedAuth = pack('OBJECT', OBJECT_s, 'AUTH', AUTH_s, 'VARIANT', VARIANT_s, 'FIELD', FIELD_s, 'LOW', LOW_s, 'HIGH', HIGH_s)\n    | summarize \n    Authorizations = make_set(PackedAuth)\n    by AGR_NAME_s, MANDT_s, SystemID_s\n    );\n\n// query\n\nAGR_USERS \n| summarize\narg_max(TimeGenerated, UNAME_s, AGR_NAME_s, MANDT_s, SystemID_s)\nby UNAME_s, AGR_NAME_s, MANDT_s, SystemID_s\n// get the child roles as well\n| join kind= leftouter   (AGR_AGRS\n| where TimeGenerated > ago(UserMDTimeAgo))\non MANDT_s, SystemID_s, AGR_NAME_s\n// Role is the lowest level\n| extend Role = iff(isempty(CHILD_AGR_s), AGR_NAME_s, CHILD_AGR_s)\n| summarize\nby UNAME_s, MANDT_s, SystemID_s, Role\n\n// get Authorization data per role\n| join kind=leftouter hint.strategy=shuffle (AGR_1251) \non $left.Role == $right.AGR_NAME_s\n, $left.MANDT_s == $right.MANDT_s\n, $left.SystemID_s == $right.SystemID_s\n\n| summarize\n// arg_max(TimeGenerated, UNAME_s),\nroles = make_set(Role, 50),\nAuthorizations = make_set(Authorizations, 100)\nby UNAME_s, MANDT_s, SystemID_s\n\n| project User = UNAME_s,\nRoles = roles,\nAuthorizationDetails = Authorizations,\nClient = MANDT_s,\nSystemID = SystemID_s\n",
        "SAPFunctionsSAPWorkflowLogQuery": "//generated function structure for custom log CWSQSAP.ABAPWorkflowLog_CL \n//generated on 2022-05-07 \n//Sentinel4SAP solution version 1.2.98 \nlet D_ABAPWorkflowLog_CL = datatable(TimeGenerated:datetime \n,ClientID:string\n,WorkItemID:string\n,WorkflowAction:string\n,LogCounter:string\n,MethodUser:string\n,ExceptionforMethod:string\n,ErrorType:string\n,ApplicationArea:string\n,MessageNumber:string\n,MessageType:string\n,WIType:string\n,Creator:string\n,Language:string\n,WIText:string\n,TaskText:string\n,Status:string\n,CreationDateTime_t:datetime\n,ActualAgent:string\n,Address:string\n,UserCreated:string\n,CreatorAddress:string\n,SuperWI:string\n,CallbackFunction:string\n,TaskID:string\n,TopTaskID:string\n,Priority:string\n,TasksClassification:string\n,SimpleContainer:string\n,SystemID:string\n,SystemNumber:string\n,Instance:string\n,Host:string\n,Type:string\n)['1000-01-01T00:00:00Z','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','1000-01-01T00:00:00Z','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString'];\n\nlet T_ABAPWorkflowLog_CL = (CWSQSAP.ABAPWorkflowLog_CL | project \nTimeGenerated = column_ifexists('TimeGenerated', '1000-01-01T00:00:00Z')\n,ClientID = column_ifexists('ClientID_s', 'initialString')\n,WorkItemID = column_ifexists('WorkItemID_s', 'initialString')\n,WorkflowAction = column_ifexists('WorkflowAction_s', 'initialString')\n,LogCounter = column_ifexists('LogCounter_s', 'initialString')\n,MethodUser = column_ifexists('MethodUser_s', 'initialString')\n,ExceptionforMethod = column_ifexists('ExceptionforMethod_s', 'initialString')\n,ErrorType = column_ifexists('ErrorType_s', 'initialString')\n,ApplicationArea = column_ifexists('ApplicationArea_s', 'initialString')\n,MessageNumber = column_ifexists('MessageNumber_s', 'initialString')\n,MessageType = column_ifexists('MessageType_s', 'initialString')\n,WIType = column_ifexists('WIType_s', 'initialString')\n,Creator = column_ifexists('Creator_s', 'initialString')\n,Language = column_ifexists('Language_s', 'initialString')\n,WIText = column_ifexists('WIText_s', 'initialString')\n,TaskText = column_ifexists('TaskText_s', 'initialString')\n,Status = column_ifexists('Status_s', 'initialString')\n,CreationDateTime_t = column_ifexists('CreationDateTime_t', '1000-01-01T00:00:00Z')\n,ActualAgent = column_ifexists('ActualAgent_s', 'initialString')\n,Address = column_ifexists('Address_s', 'initialString')\n,UserCreated = column_ifexists('UserCreated_s', 'initialString')\n,CreatorAddress = column_ifexists('CreatorAddress_s', 'initialString')\n,SuperWI = column_ifexists('SuperWI_s', 'initialString')\n,CallbackFunction = column_ifexists('CallbackFunction_s', 'initialString')\n,TaskID = column_ifexists('TaskID_s', 'initialString')\n,TopTaskID = column_ifexists('TopTaskID_s', 'initialString')\n,Priority = column_ifexists('Priority_s', 'initialString')\n,TasksClassification = column_ifexists('TasksClassification_s', 'initialString')\n,SimpleContainer = column_ifexists('SimpleContainer_s', 'initialString')\n,SystemID = column_ifexists('SystemID_s', 'initialString')\n,SystemNumber = column_ifexists('SystemNumber_s', 'initialString')\n,Instance = column_ifexists('Instance_s', 'initialString')\n,Host = column_ifexists('Host_s', 'initialString')\n,Type = column_ifexists('Type', 'initialString')\n);\n\nT_ABAPWorkflowLog_CL | union isfuzzy= true (D_ABAPWorkflowLog_CL  | where TimeGenerated != '1000-01-01T00:00:00Z')",
        "CWSQIdentifierPrefix": "workspace(\"",
        "CWQSIdentifierSuffix": "\").",
        "CWSQSOCIdentifier": "[if(equals(coalesce(parameters('CWSQSOCIdentifier'),''),'') , '', concat(variables('CWSQIdentifierPrefix'), parameters('CWSQSOCIdentifier'),variables('CWQSIdentifierSuffix')))]",
        "CWSQSAPIdentifier": "[if(equals(coalesce(parameters('CWSQSAPIdentifier'),''),'') , '', concat(variables('CWSQIdentifierPrefix'), parameters('CWSQSAPIdentifier'),variables('CWQSIdentifierSuffix')))]",
        "TeamsChannelID": "TeamsChannelID",
        "_TeamsChannelID": "[variables('TeamsChannelID')]",
        "MessageID": "MessageID",
        "_MessageID": "[variables('MessageID')]",
        "AuditClassID": "AuditClassID",
        "_AuditClassID": "[variables('AuditClassID')]",
        "MissingMessageID": "MissingMessageID",
        "_MissingMessageID": "[variables('MissingMessageID')]"
    },
    "resources": [
        {
            "name": "pid-ee2d31a6-a2e0-4211-aa4a-6c9256ad6fc3-partnercenter",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": []
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('workbookTemplateSpecName1')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "Workbook"
            },
            "properties": {
                "description": "SAP Workbook with template",
                "displayName": "SAP workbook template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('workbookTemplateSpecName1'),'/',variables('workbookVersion1'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "Workbook"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('workbookTemplateSpecName1'))]"
            ],
            "properties": {
                "description": "SAP -Security Audit log and Initial AccessWorkbook Workbook with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('workbookVersion1')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Insights/workbooks",
                            "name": "[variables('workbookContentId1')]",
                            "location": "[parameters('workspace-location')]",
                            "kind": "shared",
                            "apiVersion": "2021-08-01",
                            "metadata": {
                                "description": "SAP -Security Audit log and Initial Access"
                            },
                            "properties": {
                                "displayName": "[parameters('workbook1-name')]",
                                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"<img src=\\\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/SAP/Workbooks/SAPVMIcon.svg\\\" width=\\\"100\\\"/>  SAP Security Audit log and Initial Access\\n---\\nThis workbook uses the following data sources:\\n* SAP Audit Log\\n* SAP User Master Data\\n* Sentinel Incidents and Alerts\\n* Azure AuditLogs (optional)\\n* Azure SignIn Activity (optional)\\n\\n\\nUse the parameters below to select subscription scope, timerange and relevant SAP systems. Note that this workbook supports a scenario where different workspaces are used for SAP and azure activity and sigin logs.\"},\"name\":\"text - 2\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"9a199167-2dde-49dd-8f01-23e9d1fa8151\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"InternalWSs\",\"type\":1,\"isRequired\":true,\"query\":\"SecurityIncident\\r\\n| take 1\\r\\n| parse IncidentUrl with * \\\"/workspaces/\\\" Workspace \\\"/\\\" *\\r\\n| project Workspace\",\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"7806fefd-432f-4828-9756-8c0be5c08d07\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"InternalSub\",\"type\":1,\"isRequired\":true,\"query\":\"where type =~ 'microsoft.operationalinsights/workspaces'\\r\\n| where name contains \\\"{InternalWSs}\\\"\\r\\n| take 10\\r\\n| project subscriptionId\",\"crossComponentResources\":[\"value::selected\"],\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\"},{\"id\":\"55d3ab63-6e1f-4d02-8d9e-2225526689c7\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Subscription\",\"label\":\"Subscriptions\",\"type\":6,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"where type =~ 'microsoft.operationalinsights/workspaces'\\r\\n| extend selected= iff(name contains \\\"{InternalWSs}\\\", true, false) \\r\\n| project subscriptionId, selected\\r\\n| summarize selected= max(selected) by subscriptionId\\r\\n\",\"crossComponentResources\":[\"value::all\"],\"typeSettings\":{\"additionalResourceOptions\":[\"value::50\"],\"showDefault\":false},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\"},{\"id\":\"4a62c5aa-0c4c-439a-9977-41cd19a40933\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"SAPWorkspace\",\"label\":\"SAP Workspace\",\"type\":5,\"isRequired\":true,\"isGlobal\":true,\"query\":\"where type =~ 'microsoft.operationalinsights/workspaces'\\r\\n| project value =id, label = name, selected = iff(name =~ '{InternalWSs}', true, false)\\r\\n| order by selected desc\\r\\n\",\"crossComponentResources\":[\"value::all\"],\"typeSettings\":{\"resourceTypeFilter\":{\"microsoft.securityinsightsarg/sentinel\":true,\"microsoft.operationalinsights/workspaces\":true},\"showDefault\":false},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\"},{\"id\":\"95a45501-31b5-4ea2-bcb3-eb208e0080e2\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"ADWorkspace\",\"label\":\"Azure audit and activity Workspace\",\"type\":5,\"description\":\"Use this selector when the Azure audit and signin logs are on a different workspace than the one SAP is on\",\"isRequired\":true,\"query\":\"//resources | where type =~ 'Microsoft.operationsmanagement/solutions' | where name contains //'SecurityInsights' | project id //= tostring(properties.workspaceResourceId)\\r\\n\\r\\nwhere type =~ 'microsoft.operationalinsights/workspaces'\\r\\n| project value =id, label = name, selected = iff(name =~ '{InternalWSs}', true, false)\\r\\n\\r\\n\\r\\n\",\"crossComponentResources\":[\"{Subscription}\"],\"typeSettings\":{\"showDefault\":false},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\"},{\"id\":\"9b44ff26-1821-49a8-be2e-31f643ebecba\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"DemoMode\",\"type\":10,\"isHiddenWhenLocked\":true,\"typeSettings\":{\"showDefault\":false},\"jsonData\":\"[{\\\"value\\\": \\\"true\\\", \\\"label\\\":\\\"Demo Mode\\\"},{\\\"value\\\": \\\"false\\\", \\\"label\\\":\\\"Default Mode\\\", \\\"selected\\\": true}]\"}],\"style\":\"above\",\"doNotRunWhenHidden\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"100\",\"name\":\"Select relevant workspaces\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"crossComponentResources\":[\"{SAPWorkspace}\"],\"parameters\":[{\"id\":\"a2f453a3-836c-4e70-8840-45a27f6ac30f\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"type\":4,\"description\":\"Select the time range that will be used for the query's\",\"value\":{\"durationMs\":1209600000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}]},\"label\":\"Time Range\"},{\"id\":\"4c106c4f-59b7-40bc-a501-cd6d463ba585\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"SystemRoles\",\"label\":\"System Roles\",\"type\":10,\"isRequired\":true,\"isGlobal\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"let EmptySystems= datatable ( SystemID: string, SystemID_s:string , SystemUsage: string, SystemRole: string, Count: long  )['All Systems', 'All Systems', 'All System Usage', 'All System Roles', 1];\\r\\nlet AuditSystems = union isfuzzy= true *ABAPAuditLog_CL, (EmptySystems| project SystemID, SystemID_s) | summarize by SystemID= SystemID_s;\\r\\nAuditSystems\\r\\n| lookup kind=inner (SAPSystems() | union isfuzzy=true EmptySystems) on SystemID\\r\\n| extend ranked= array_sum(to_utf8(SystemRole))\\r\\n| summarize Ranked= any(ranked) by SystemRole\\r\\n| order by Ranked desc\\r\\n| serialize Rank = row_number()\\r\\n| project value= SystemRole, label= strcat('💎', SystemRole), selected= iff(Rank==1, true, false)\\r\\n\",\"crossComponentResources\":[\"{SAPWorkspace}\"],\"typeSettings\":{\"showDefault\":false},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"1a31d436-bb4b-469f-94a8-5ad9aa018edd\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"SystemUsage\",\"label\":\"System Usage\",\"type\":10,\"isRequired\":true,\"isGlobal\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"let EmptySystems= datatable ( SystemID: string, SystemID_s:string , SystemUsage: string, SystemRole: string, Count: long  )['All Systems', 'All Systems', 'All Usage Types', 'All System Roles', 1];\\r\\nlet AuditSystems = union isfuzzy= true *ABAPAuditLog_CL, (EmptySystems| project SystemID, SystemID_s, SystemUsage) | summarize by SystemID= SystemID_s, SystemUsage;\\r\\nAuditSystems\\r\\n| lookup (SAPSystems(SelectedSystemRoles=dynamic(\\\"{SystemRoles}\\\"))) on SystemID\\r\\n| extend SystemUsage= strcat(SystemUsage, SystemUsage1)\\r\\n| extend ranked= array_sum(to_utf8(SystemUsage))\\r\\n| summarize Ranked= any(ranked) by SystemUsage\\r\\n| where isnotempty(SystemUsage)\\r\\n| order by Ranked desc\\r\\n| serialize Rank = row_number()\\r\\n//| where isnotempty(SystemUsage) or SystemID == 'All Systems'\\r\\n| project value= SystemUsage, label= strcat('🌐', SystemUsage), selected= iff(Rank==1, true, false)\\r\\n\\r\\n\",\"crossComponentResources\":[\"{SAPWorkspace}\"],\"typeSettings\":{\"showDefault\":false},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"b5ed6d2c-e44f-48ac-a535-af6f2d7ab53d\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Systems\",\"type\":2,\"isRequired\":true,\"isGlobal\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"let EmptySystems= datatable ( SystemID: string, SystemID_s:string , SystemUsage: string, SystemRole: string, Count: long  )['All Systems', 'All Systems', 'All System Usage', 'All System Roles', 1];\\r\\nlet AuditSystems = union isfuzzy= true *ABAPAuditLog_CL, (EmptySystems| project SystemID, SystemID_s, SystemRole) | summarize SystemRole= any(SystemRole) by SystemID= SystemID_s\\r\\n| extend ranked= array_sum(to_utf8(SystemID));\\r\\nAuditSystems\\r\\n| lookup (SAPSystems(SelectedSystemRoles=dynamic(\\\"{SystemRoles}\\\"), SelectedSystemUsage=dynamic(\\\"{SystemUsage}\\\")) ) on SystemID\\r\\n//| extend SystemRole = strcat(SystemRole, SystemRole1)\\r\\n| extend SystemRole = SystemRole1\\r\\n| where isnotempty(SystemRole)\\r\\n| summarize Ranked= any(ranked) by SystemID, SystemRole, SystemUsage\\r\\n| order by Ranked desc\\r\\n| serialize Rank = row_number()\\r\\n//| extend selected = iff(SystemID == 'All Systems', true, false)\\r\\n| project value= SystemID, label= strcat('🛡️', iff({DemoMode}, substring(hash_sha1(SystemID), 0, 3), SystemID))\\r\\n//, selected= iff(Rank==1, true, false)\\r\\n//| project value, label, Selected= true\\r\\n\\r\\n\\r\\n\\r\\n\",\"crossComponentResources\":[\"{SAPWorkspace}\"],\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"All Systems\",\"showDefault\":false},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"54afea69-d0fa-4c19-ba99-fc442a7004ae\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"NormallyFailingUsers\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"let FailedAuitClasses= dynamic([\\\"AU2\\\", \\\"AUL\\\", \\\"AU6\\\", \\\"AUM\\\"]); // \\\"Failed Dialog Logon\\\", \\\"Failed RFC call\\\", \\\"RFC/CPIC logon failed\\\", \\\"User Locked\\\"\\r\\nlet SelectedSystems= SAPSystems(SelectedSystemRoles=dynamic(\\\"{SystemRoles}\\\")\\r\\n, SelectedSystems=todynamic(\\\"[{Systems}]\\\")\\r\\n, SelectedSystemUsage= dynamic(\\\"{SystemUsage}\\\")) | project SystemID;\\r\\n//SelectedSystems\\r\\nSAPAuditLog\\r\\n| where SystemID in(SelectedSystems)\\r\\n| where  MessageID in (FailedAuitClasses)\\r\\n| where isnotempty( User)\\r\\n| make-series FailedCountArray= count() default=0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step 6h by User\\r\\n//, SystemID\\r\\n| extend FailedAnomalies= series_decompose_anomalies(FailedCountArray, Threshold=2, Test_point= 1)\\r\\n| where array_index_of(FailedAnomalies,1)>= 0\\r\\n| summarize  Users2Exclude= make_set(User)\\r\\n\\r\\n\\r\\n\",\"crossComponentResources\":[\"{SAPWorkspace}\"],\"isHiddenWhenLocked\":true,\"typeSettings\":{\"additionalResourceOptions\":[\"value::1\"],\"showDefault\":false},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"defaultValue\":\"value::1\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"4f7c4505-0fb3-409d-bb8a-bdcdc2a91a25\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"MainTabSelected\",\"type\":9,\"isRequired\":true,\"isGlobal\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"value\":[\"Logon Analysis\"],\"isHiddenWhenLocked\":true,\"jsonData\":\"[{ \\\"value\\\": \\\"Logon Analysis\\\",  \\\"selected\\\":true }]\"},{\"id\":\"c5116ed6-b0e1-496e-b9d9-6264a7d4a030\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"AzureSuspiciousUsers\",\"type\":2,\"description\":\"list of suspicious azure audit and login users\",\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"let SuspicousTestUsers= iff({DemoMode}, dynamic(['saptecops@microsoft.com'\\r\\n,'v-nagupta@microsoft.com']), dynamic([]));\\r\\nlet starttime = {TimeRange:start};\\r\\nlet endtime = {TimeRange:end};\\r\\nlet auditLookback = starttime - 14d;\\r\\n// User Granted Access and Grants others Access\\r\\n\\r\\nlet opName = dynamic([\\\"Add user\\\", \\\"Invite external user\\\"]);\\r\\n// Helper function to extract relevant fields from AuditLog events\\r\\nlet auditLogEvents = view (startTimeSpan: timespan, operation: dynamic) {\\r\\n    AuditLogs\\r\\n    | where TimeGenerated >= auditLookback\\r\\n    | where OperationName in~ (operation)\\r\\n    | extend ModProps = iff(TargetResources.[0].modifiedProperties != \\\"[]\\\", TargetResources.[0].modifiedProperties, todynamic(\\\"NoValues\\\"))\\r\\n    | extend IpAddress = iff(isnotempty(tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)), \\r\\n        tostring(parse_json(tostring(InitiatedBy.user)).ipAddress), tostring(parse_json(tostring(InitiatedBy.app)).ipAddress))\\r\\n    | extend InitiatedByFull = iff(isnotempty(tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)), \\r\\n        tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName), tostring(parse_json(tostring(InitiatedBy.app)).displayName))\\r\\n    | extend InitiatedBy = replace(\\\"_\\\", \\\"@\\\", tostring(split(InitiatedByFull, \\\"#\\\")[0]))\\r\\n    | extend TargetUserPrincipalName = tostring(TargetResources[0].userPrincipalName)\\r\\n    | extend TargetUserName = replace(\\\"_\\\", \\\"@\\\", tostring(split(TargetUserPrincipalName, \\\"#\\\")[0]))\\r\\n    | extend TargetResourceName = case(\\r\\n        isempty(tostring(TargetResources.[0].displayName)), TargetUserPrincipalName,\\r\\n        isnotempty(tostring(TargetResources.[0].displayName)) and tostring(TargetResources.[0].displayName) startswith \\\"upn:\\\", tolower(tostring(TargetResources.[0].displayName)),\\r\\n        tolower(tostring(TargetResources.[0].displayName))\\r\\n        )\\r\\n    | extend TargetUserName = replace(\\\"_\\\", \\\"@\\\", tostring(split(TargetUserPrincipalName, \\\"#\\\")[0]))\\r\\n    | extend TargetUserName = iff(isempty(TargetUserName), tostring(split(split(TargetResourceName, \\\",\\\")[0], \\\" \\\")[1]), TargetUserName) \\r\\n    | mvexpand ModProps\\r\\n    | extend\\r\\n        PropertyName = tostring(ModProps.displayName),\\r\\n        newValue = replace('\\\\\\\"', '', tostring(ModProps.newValue));\\r\\n};\\r\\n// Assigning time for First TargetUserName that was added\\r\\nlet FirstAdd = auditLogEvents(auditLookback, opName)  \\r\\n    | project FirstAddTimeUtc = TimeGenerated, Type, FirstInitiatedBy = InitiatedBy, IpAddress, FirstTargetUserName = TargetUserName, FirstTargetResourceName = TargetResourceName, \\r\\n        FirstOperationName = OperationName, FirstPropertyName = PropertyName, FirstnewValue = newValue, FirstCorrelationId = CorrelationId, FirstId = Id;\\r\\n// Assigning time for second TargetUserName that was added, which will allow us to see if a first TargetUserName added in is the Initiated by on the second in the later join\\r\\nlet SecondAdd = auditLogEvents(auditLookback, opName)  \\r\\n    | project SecondAddTimeUtc = TimeGenerated, Type, SecondInitiatedBy = InitiatedBy, IpAddress, SecondTargetUserName = TargetUserName, SecondTargetResourceName = TargetResourceName, \\r\\n        SecondOperationName = OperationName, SecondPropertyName = PropertyName, SecondnewValue = newValue, SecondCorrelationId = CorrelationId, SecondId = Id;\\r\\n//  Joining the FirstAdd with SecondAdd where the FirstAdd TargetUserName value matches the SecondAdd InitiatedBy.  This shows the new user adding a user.\\r\\nlet NewUserAddsUser = FirstAdd\\r\\n    | join SecondAdd on $left.FirstTargetUserName == $right.SecondInitiatedBy\\r\\n    // we only want items where the FirstAddTimeUtc is before the SecondAddTimeUtc\\r\\n    | where FirstAddTimeUtc < SecondAddTimeUtc\\r\\n;\\r\\n// Build out some of the properties for context\\r\\nlet UserGrantedGrants=(NewUserAddsUser\\r\\n| extend\\r\\n    FirstnewValue = split(FirstnewValue, \\\";\\\"),\\r\\n    SecondnewValue = split(SecondnewValue, \\\";\\\")\\r\\n| extend PropertyUpdate = pack(FirstPropertyName, FirstnewValue, SecondPropertyName, SecondnewValue, \\\"FirstCorrelationId\\\", FirstCorrelationId, \\\"FirstId\\\", FirstId, \\\"SecondCorrelationId\\\", SecondCorrelationId, \\\"SecondId\\\", SecondId)\\r\\n| summarize PropertyUpdateSet = make_bag(PropertyUpdate)\\r\\n    by FirstAddTimeUtc, FirstInitiatedBy, FirstTargetUserName, SecondAddTimeUtc, SecondInitiatedBy, SecondTargetUserName, \\r\\n    IpAddress, FirstTargetResourceName, SecondTargetResourceName, FirstOperationName, SecondOperationName\\r\\n| extend\\r\\n    timestamp = FirstAddTimeUtc,\\r\\n    AccountCustomEntity = FirstInitiatedBy,\\r\\n    HostCustomEntity = FirstTargetResourceName,\\r\\n    IPCustomEntity = IpAddress\\r\\n    | extend UserPrincipalName= SecondTargetUserName)\\r\\n    | extend Risk= 'User Granted Access and Grants others Access';\\r\\n\\r\\n// Anomalous sign-in location by user account and authenticating application - with sign-in details\\r\\nlet AnomalSiginLocAuth= (SigninLogs \\r\\n| where TimeGenerated  > starttime\\r\\n| extend  locationString= strcat(tostring(LocationDetails[\\\"countryOrRegion\\\"]), \\\"/\\\", \\r\\ntostring(LocationDetails[\\\"state\\\"]), \\\"/\\\", tostring(LocationDetails[\\\"city\\\"]), \\\";\\\") \\r\\n| project TimeGenerated, AppDisplayName , UserPrincipalName, locationString \\r\\n// Create time series \\r\\n| make-series dLocationCount = dcount(locationString) on TimeGenerated step 1d \\r\\nby UserPrincipalName, AppDisplayName \\r\\n// Compute best fit line for each entry \\r\\n| extend (RSquare,Slope,Variance,RVariance,Interception,LineFit)=series_fit_line(dLocationCount) \\r\\n// Chart the 3 most interesting lines  \\r\\n// A 0-value slope corresponds to an account being completely stable over time for a given Azure Active Directory application\\r\\n| top 3 by Slope desc  \\r\\n// Extract the set of locations for each top user:\\r\\n| join kind=inner (SigninLogs\\r\\n| extend  locationString= strcat(tostring(LocationDetails[\\\"countryOrRegion\\\"]), \\\"/\\\", \\r\\ntostring(LocationDetails[\\\"state\\\"]), \\\"/\\\", tostring(LocationDetails[\\\"city\\\"]), \\\";\\\")\\r\\n| summarize locationList = makeset(locationString), threeDayWindowLocationCount=dcount(locationString) by AppDisplayName, UserPrincipalName, \\r\\ntimerange=bin(TimeGenerated, 3d)) on AppDisplayName, UserPrincipalName\\r\\n| order by UserPrincipalName, timerange asc\\r\\n| project timerange, AppDisplayName , UserPrincipalName, threeDayWindowLocationCount, locationList \\r\\n| order by AppDisplayName, UserPrincipalName, timerange asc\\r\\n| extend timestamp = timerange, AccountCustomEntity = UserPrincipalName)\\r\\n| extend Risk= 'Anomalous sign-in location by user account and authenticating application';\\r\\n\\r\\n\\r\\n// Failed service logon attempt by user account with available AuditData\\r\\nlet failLimit = 10;\\r\\nlet ipLimit = 3;\\r\\nlet failedSignins = SigninLogs\\r\\n| where TimeGenerated between(starttime..endtime)\\r\\n| where ResultType != \\\"0\\\" and AppDisplayName != \\\"Windows Sign In\\\"\\r\\n| extend UserPrincipalName = tolower(UserPrincipalName)\\r\\n| extend CityState = strcat(tostring(LocationDetails.city),\\\"|\\\", tostring(LocationDetails.state))\\r\\n| extend Result = strcat(ResultType,\\\"-\\\",ResultDescription)\\r\\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), DistinctIPAddressCount = dcount(IPAddress), IPAddresses = makeset(IPAddress),\\r\\nCityStates = makeset(CityState), DistinctResultCount = dcount(Result), Results = makeset(Result), AppDisplayNames = makeset(AppDisplayName),\\r\\nFailedLogonCount = count() by Type, OperationName, Category, UserPrincipalName = tolower(UserPrincipalName), ClientAppUsed, Location, CorrelationId\\r\\n| project Type, StartTimeUtc, EndTimeUtc, OperationName, Category, UserPrincipalName, AppDisplayNames, DistinctIPAddressCount, IPAddresses, DistinctResultCount,\\r\\nResults, FailedLogonCount, Location, CityStates\\r\\n| where FailedLogonCount >= failLimit or DistinctIPAddressCount >= ipLimit\\r\\n| extend Activity = pack(\\\"IPAddresses\\\", IPAddresses, \\\"AppDisplayNames\\\", AppDisplayNames, \\\"Results\\\", Results, \\\"Location\\\", Location, \\\"CityStates\\\", CityStates)\\r\\n| project Type, StartTimeUtc, EndTimeUtc, OperationName, Category, UserPrincipalName, FailedLogonCount, DistinctIPAddressCount, DistinctResultCount, Activity\\r\\n| extend AccountCustomEntity = UserPrincipalName;\\r\\nlet accountMods = AuditLogs | where TimeGenerated >= auditLookback\\r\\n| where Category == \\\"UserManagement\\\" or Category == \\\"GroupManagement\\\"\\r\\n| extend ModProps = TargetResources.[0].modifiedProperties\\r\\n| extend InitiatedBy = case(\\r\\nisnotempty(tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)), tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName),\\r\\nisnotempty(tostring(parse_json(tostring(InitiatedBy.app)).displayName)), tostring(parse_json(tostring(InitiatedBy.app)).displayName),\\r\\n\\\"\\\")\\r\\n| extend UserPrincipalName = tolower(tostring(TargetResources.[0].userPrincipalName))\\r\\n| mvexpand ModProps\\r\\n| extend PropertyName = tostring(ModProps.displayName), oldValue = tostring(ModProps.oldValue), newValue = tostring(ModProps.newValue)\\r\\n| extend ModifiedProps = pack(\\\"PropertyName\\\",PropertyName,\\\"oldValue\\\",oldValue,\\\"newValue\\\",newValue)\\r\\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), Activity = make_bag(ModifiedProps) by Type, InitiatedBy, UserPrincipalName, Category, OperationName, CorrelationId, Id\\r\\n| extend AccountCustomEntity = UserPrincipalName;\\r\\n// Gather only Audit data for UserPrincipalNames that we have Audit data for\\r\\nlet accountNameOnly = failedSignins | project UserPrincipalName;\\r\\nlet auditMods = accountNameOnly\\r\\n| join kind= innerunique (\\r\\naccountMods\\r\\n) on UserPrincipalName;\\r\\nlet availableAudits = auditMods | project UserPrincipalName;\\r\\nlet signinsWithAudit = availableAudits\\r\\n| join kind= innerunique (\\r\\nfailedSignins\\r\\n) on UserPrincipalName;\\r\\n// Union the Current Signin failures so we do not lose them with the Auditing data we do have\\r\\nlet activity = (union isfuzzy=true\\r\\nsigninsWithAudit, auditMods)\\r\\n| order by StartTimeUtc, UserPrincipalName;\\r\\n\\r\\nlet FailedServiceLogon= (activity\\r\\n| project StartTimeUtc, EndTimeUtc, DataType = Type, Category, OperationName, UserPrincipalName, InitiatedBy, Activity, FailedLogonCount, DistinctIPAddressCount, DistinctResultCount, CorrelationId, Id\\r\\n| order by UserPrincipalName, StartTimeUtc\\r\\n| extend timestamp = StartTimeUtc, AccountCustomEntity = UserPrincipalName)\\r\\n| extend Risk= 'Failed service logon attempt by user account with available AuditData';\\r\\n\\r\\nUserGrantedGrants | union AnomalSiginLocAuth, FailedServiceLogon\\r\\n| summarize UserPrincipalNames= makeset(UserPrincipalName, 500), FirstInitiatedBys= makeset(FirstInitiatedBy, 500), FirstTargetUserNames= makeset(FirstTargetUserName, 500), SecondInitiatedBys= makeset(SecondInitiatedBy, 500), SecondTargetUserNames= makeset(SecondTargetUserName, 500)\\r\\n| project SuspiciousUsers= set_union(UserPrincipalNames, FirstInitiatedBys, FirstTargetUserNames, SecondInitiatedBys, SecondTargetUserNames, SuspicousTestUsers)\\r\\n\",\"crossComponentResources\":[\"{ADWorkspace}\"],\"isHiddenWhenLocked\":true,\"typeSettings\":{\"additionalResourceOptions\":[\"value::1\"],\"showDefault\":false},\"defaultValue\":\"value::1\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"}],\"style\":\"above\",\"doNotRunWhenHidden\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - Copy\"},{\"type\":1,\"content\":{\"json\":\"You are currently running in demo mode. System IDs and fields containing personally identifiable information are anonymized.\",\"style\":\"upsell\"},\"conditionalVisibility\":{\"parameterName\":\"DemoMode\",\"comparison\":\"isNotEqualTo\",\"value\":\"false\"},\"name\":\"text - 10\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"SAPSystems(SelectedSystemRoles=dynamic(\\\"{SystemRoles}\\\")\\r\\n, SelectedSystems=todynamic(\\\"[{Systems}]\\\")\\r\\n, SelectedSystemUsage= dynamic(\\\"{SystemUsage}\\\")) \\r\\n| project SystemID\\r\\n| extend SystemID= iff({DemoMode}, substring(hash_sha1(SystemID), 0, 3), SystemID)\\r\\n| summarize Systems= makeset(SystemID,50)\\r\\n| project text= strcat(\\\"\\\", \\\"Selected SAP Systems: \\\", translate('\\\"[]', ' ', tostring(Systems)))\\r\\n\",\"size\":4,\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"card\",\"textSettings\":{\"style\":\"markdown\"}},\"conditionalVisibility\":{\"parameterName\":\"Systems\",\"comparison\":\"isNotEqualTo\",\"value\":\"'All Systems'\"},\"name\":\"query - 10\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let SystemsConfiguration= (SAPAuditLog| summarize Count= count() by SystemID) | lookup SAPSystems() on SystemID\\r\\n| extend SystemID= iff({DemoMode}, substring(hash_sha1(SystemID), 0, 3), SystemID);\\r\\nSystemsConfiguration\\r\\n| where isempty(SystemRole) or isempty( SystemUsage)\\r\\n| summarize Systems= make_set(SystemID, 50), EventsMissed= sum(Count)\\r\\n| where  array_length( Systems)> 0\\r\\n| extend Description1 = strcat('⚠️',  \\\"**The following SAP \\\",iff(array_length( Systems)> 1, \\\"Systems are not\\\", \\\"System is not\\\"),\\\" condigured properly in sentinel: \\\", iff(array_length( Systems)> 1,Systems, Systems[0]),\\\".** <br>\\\")\\r\\n| extend Description2 = strcat(\\\"Please update the 'SAP - Systems' watchlist to include these systems and ensure proper security coverage\\\",\\\". <br>\\\")\\r\\n| extend Description3 = strcat(\\\"Number of events not covered is \\\", EventsMissed,\\\".\\\")\\r\\n| project strcat(Description1, Description2, Description3)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\",\"size\":4,\"noDataMessage\":\"All SAP Systems are Configured Properly in Sentinel\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"card\",\"textSettings\":{\"style\":\"markdown\"}},\"name\":\"ConfigChecker\"},{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"tabStyle\":\"bigger\",\"links\":[{\"id\":\"3a13be26-b92f-43fb-ac8b-593fadff36e6\",\"cellValue\":\"MainTabSelected\",\"linkTarget\":\"parameter\",\"linkLabel\":\"📉 Logon analysis report\",\"subTarget\":\"Logon Analysis\",\"preText\":\"Logon analysis\",\"style\":\"link\",\"icon\":\"Sev2\",\"tabWidth\":\"200\"},{\"id\":\"a997c6cd-4d82-4fd5-b128-a16fbfd0e421\",\"cellValue\":\"MainTabSelected\",\"linkTarget\":\"parameter\",\"linkLabel\":\"📉 Audit log alerts  report\",\"subTarget\":\"Audit Log Alerts\",\"preText\":\"Audit log alerts\",\"style\":\"link\",\"icon\":\"Sev2\"}]},\"customWidth\":\"100\",\"name\":\"tabs main\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"----\\n## Logon Analysis\\n\\nLogon activities of the SAP landscape\"},\"name\":\"text - 10\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let SelectedSystems= SAPSystems(SelectedSystemRoles=dynamic(\\\"{SystemRoles}\\\")\\r\\n, SelectedSystems=todynamic(\\\"[{Systems}]\\\")\\r\\n, SelectedSystemUsage= dynamic(\\\"{SystemUsage}\\\")) | project SystemID;\\r\\n//SelectedSystems\\r\\nSAPAuditLog\\r\\n| where SystemID in(SelectedSystems)\\r\\n| where MessageClass contains_cs \\\"Logon\\\"\\r\\n| summarize UniqueUsers= dcount(User) by SystemID\\r\\n//| order by UniqueUsers desc\\r\\n| top-nested 18 of SystemID with others=\\\"Other Systems\\\" by UniqueUsers= sum(UniqueUsers)\\r\\n| join (SAPAuditLog\\r\\n| where SystemID in(SelectedSystems)\\r\\n| where MessageClass contains_cs \\\"Logon\\\"\\r\\n| make-series TrendList = dcount(User) on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, 4h) by SystemID \\r\\n) on SystemID\\r\\n| extend SystemID= iff({DemoMode}, substring(hash_sha1(SystemID), 0, 3), SystemID)\\r\\n| extend Systemlabel= strcat('🛡️', SystemID)\\r\\n\\r\\n\\r\\n\",\"size\":1,\"title\":\"Unique User Logons Per System\",\"timeContextFromParameter\":\"TimeRange\",\"showRefreshButton\":true,\"exportFieldName\":\"series\",\"exportParameterName\":\"Systems\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"Systemlabel\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"UniqueUsers\",\"formatter\":12,\"formatOptions\":{\"palette\":\"blue\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"secondaryContent\":{\"columnMatch\":\"TrendList\",\"formatter\":9,\"formatOptions\":{\"palette\":\"blue\"}},\"showBorder\":false,\"sortCriteriaField\":\"UniqueUsers\",\"size\":\"auto\"},\"graphSettings\":{\"type\":0,\"topContent\":{\"columnMatch\":\"SearchKey\",\"formatter\":1},\"centerContent\":{\"columnMatch\":\"DummyJoinField\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"chartSettings\":{\"xAxis\":\"SystemID\",\"yAxis\":[\"UniqueUsers\"],\"group\":\"SystemID\",\"createOtherGroup\":10,\"ySettings\":{\"numberFormatSettings\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"useGrouping\":true}}}}},\"name\":\"UniqueUsers\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let SelectedSystems= SAPSystems(SelectedSystemRoles=dynamic(\\\"{SystemRoles}\\\")\\n, SelectedSystems=todynamic(\\\"[{Systems}]\\\")\\n, SelectedSystemUsage= dynamic(\\\"{SystemUsage}\\\")) | project SystemID;\\n//SelectedSystems\\nSAPAuditLog\\n| where SystemID in(SelectedSystems)\\n| where MessageClass contains_cs \\\"Logon\\\"\\n| summarize Count= count() by MessageClass, User, TimeGenerated= bin(TimeGenerated, 4h)\\n| summarize UniqueUsers= dcount(User), Count= sum(Count) by MessageClass, TimeGenerated\\n\",\"size\":1,\"aggregation\":3,\"showAnalytics\":true,\"title\":\"Login types trend\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{SAPWorkspace}\"],\"visualization\":\"areachart\",\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"ResultText\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"dcount_CorrelationId\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"chartSettings\":{\"xAxis\":\"TimeGenerated\",\"yAxis\":[\"UniqueUsers\"],\"group\":\"MessageClass\",\"showLegend\":true}},\"customWidth\":\"50\",\"name\":\"query - 4\",\"styleSettings\":{\"maxWidth\":\"100%\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let SuccessAuitClasses= dynamic([\\\"AU1\\\", \\\"AUK\\\", \\\"AU5\\\"]); // \\\"User logged on\\\", \\\"Successful RFC\\\", \\\"RFC/CPIC logon\\\"\\nlet FailedAuitClasses= dynamic([\\\"AU2\\\", \\\"AUL\\\", \\\"AU6\\\", \\\"AUM\\\"]); // \\\"Failed Dialog Logon\\\", \\\"Failed RFC call\\\", \\\"RFC/CPIC logon failed\\\", \\\"User Locked\\\"\\nlet SelectedSystems= SAPSystems(SelectedSystemRoles=dynamic(\\\"{SystemRoles}\\\")\\n, SelectedSystems=todynamic(\\\"[{Systems}]\\\")\\n, SelectedSystemUsage= dynamic(\\\"{SystemUsage}\\\")) | project SystemID;\\n//SelectedSystems\\nSAPAuditLog\\n| where SystemID in(SelectedSystems)\\n| where  MessageID in (array_concat(SuccessAuitClasses, FailedAuitClasses))\\n| summarize Count= count() by MessageID, User, TimeGenerated= bin(TimeGenerated, 4h)\\n| extend Status= iff( SuccessAuitClasses has MessageID, \\\"Success\\\", \\\"Failure\\\")\\n| summarize UniqueUsers= dcount(User), Count= sum(Count) by Status, TimeGenerated\\n| order by Status asc\",\"size\":1,\"aggregation\":3,\"showAnalytics\":true,\"title\":\"Logon failures Vs. success by unique users- trend\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{SAPWorkspace}\"],\"visualization\":\"areachart\",\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"ResultText\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"dcount_CorrelationId\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"chartSettings\":{\"xAxis\":\"TimeGenerated\",\"yAxis\":[\"UniqueUsers\"],\"group\":\"Status\",\"createOtherGroup\":2,\"showLegend\":true}},\"customWidth\":\"50\",\"name\":\"Failure Trends\",\"styleSettings\":{\"maxWidth\":\"100%\"}}]},\"name\":\"Logon Analysis Buttom\"}],\"exportParameters\":true},\"conditionalVisibility\":{\"parameterName\":\"MainTabSelected\",\"comparison\":\"isEqualTo\",\"value\":\"'Logon Analysis'\"},\"name\":\"Group Signin Logs\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"expandable\":true,\"expanded\":true,\"items\":[{\"type\":1,\"content\":{\"json\":\"----\\n## Logon Failures\\n\\nAn overview of failed logon attempts. \\n\\n### Anomaly detection- filtering out noisy failed logon attempts\\nWe use anomaly detection methods to determine which users fail to logon frequently, e.g., failures related to a scheduled job running with out-of-date user credentials.\\n\\nYou have the option to restrict out repeated failures, by selecting the \\\"⚠️Anomalous only\\\" option, allowing you to focus on those out of the ordinary failed logon attempts.\\n\\n### Logon failure rate\\nDefined as the proportion of unique users that failed to logon out of the entire logon population (failed + succeeded).\\nIn this section, you get a look into the logon failure rate per SAP system. \\n\\nSelecting a system will detail all relevant failed logon attempts, respecting the selection made using the \\\"Failed logons\\\" crieria (\\\"All\\\" or \\\"⚠️Anomalous only\\\" ).\"},\"customWidth\":\"50\",\"name\":\"text - 10\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"e98b7063-b2c7-443b-9613-6364fbded3c7\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"FailedLogons\",\"label\":\"Failed logons\",\"type\":10,\"isRequired\":true,\"isGlobal\":true,\"typeSettings\":{\"showDefault\":false},\"jsonData\":\"[{ \\\"value\\\": [\\\"Anomalous logon failures\\\", \\\"Frequent logon failures\\\"], \\\"label\\\": \\\"All\\\" , \\\"selected\\\":true }, { \\\"value\\\": \\\"Anomalous logon failures\\\", \\\"label\\\": \\\"⚠️Anomalous only\\\"}]\",\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"formHorizontal\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"35\",\"name\":\"parameters - Anomaly failed logons\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Logon failure anomalies\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let FailedAuitClasses= dynamic([\\\"AU2\\\", \\\"AUL\\\", \\\"AU6\\\", \\\"AUM\\\"]);\\r\\nlet SelectedSystems= SAPSystems(SelectedSystemRoles=dynamic(\\\"{SystemRoles}\\\")\\r\\n, SelectedSystems=todynamic(\\\"[{Systems}]\\\")\\r\\n, SelectedSystemUsage= dynamic(\\\"{SystemUsage}\\\")) | project SystemID;\\r\\n//SelectedSystems\\r\\nSAPAuditLog\\r\\n| where SystemID in(SelectedSystems)\\r\\n| where MessageID in (FailedAuitClasses)\\r\\n| summarize UniqueUsers= dcount(User) by SystemID\\r\\n//| order by UniqueUsers desc\\r\\n| top-nested 18 of SystemID with others=\\\"Other Systems\\\" by UniqueUsers= sum(UniqueUsers)\\r\\n| join (SAPAuditLog\\r\\n| where SystemID in(SelectedSystems)\\r\\n| where MessageID in (FailedAuitClasses)\\r\\n| make-series FailedCountArray = dcount(User) on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, 4h) by SystemID \\r\\n| extend FailedAnomalies= series_decompose_anomalies(FailedCountArray, Threshold=2, Test_point= 1)\\r\\n| extend FailedAnomaly= array_index_of(FailedAnomalies,1)>= 0\\r\\n| extend Anomaly = iff(FailedAnomaly, 'Anomalous logon failures', 'Frequent logon failures')\\r\\n| where  (\\\"{FailedLogons}\\\") contains Anomaly\\r\\n) on SystemID\\r\\n| extend SystemID= iff({DemoMode}, substring(hash_sha1(SystemID), 0, 3), SystemID)\\r\\n| extend Systemlabel= strcat('🛡️', SystemID)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\",\"size\":1,\"title\":\"Unique User failed logons per SAP system\",\"showRefreshButton\":true,\"exportFieldName\":\"series\",\"exportParameterName\":\"Systems\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{SAPWorkspace}\"],\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"Systemlabel\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"UniqueUsers\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"secondaryContent\":{\"columnMatch\":\"FailedCountArray\",\"formatter\":9,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"},\"missingSparkDataOption\":\"Average\"}},\"showBorder\":false,\"sortCriteriaField\":\"UniqueUsers\",\"size\":\"auto\"},\"graphSettings\":{\"type\":0,\"topContent\":{\"columnMatch\":\"SearchKey\",\"formatter\":1},\"centerContent\":{\"columnMatch\":\"DummyJoinField\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"chartSettings\":{\"xAxis\":\"SystemID\",\"yAxis\":[\"UniqueUsers\"],\"group\":\"SystemID\",\"createOtherGroup\":10,\"ySettings\":{\"numberFormatSettings\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"useGrouping\":true}}}}},\"name\":\"UniqueUsers - Failed\"},{\"type\":1,\"content\":{\"json\":\"\\r\\n<svg width=\\\"69.018px\\\" height=\\\"69.018px\\\" viewBox=\\\"-1.63 0 69.018 69.018\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\r\\n\\r\\n    <path d=\\\"m 307.17101,380.86847 -33.37955,40.03036 33.37955,28.9875 32.37565,-29.11299 -32.37565,-39.90487 z m -0.62744,18.00739 c 2.73032,0 4.95674,2.22642 4.95674,4.95673 0,1.21954 -0.46013,2.33784 -1.19213,3.19992 l 7.34099,8.53312 c 0.82348,-0.61334 1.84323,-0.94115 2.94895,-0.94115 2.73031,0 4.95673,2.22642 4.95673,4.95673 0,2.73032 -2.22642,4.894 -4.95673,4.894 -1.60917,0 -2.98736,-0.75469 -3.8901,-1.94505 l -5.7724,5.08222 c 0.3421,0.67225 0.56469,1.39006 0.56469,2.19603 0,2.73031 -2.22642,4.95673 -4.95674,4.95673 -2.73032,0 -4.95674,-2.22642 -4.95674,-4.95673 0,-1.10578 0.3905,-2.12545 1.0039,-2.94895 l -4.3293,-3.95284 c -0.90291,0.97384 -2.20639,1.56859 -3.63913,1.56859 -2.73031,0 -4.95673,-2.16368 -4.95673,-4.894 0,-2.73031 2.22642,-4.95673 4.95673,-4.95673 0.61433,0 1.21416,0.10902 1.75682,0.31371 l 6.39984,-7.90568 c -0.732,-0.86208 -1.19213,-1.98038 -1.19213,-3.19992 0,-2.73031 2.22642,-4.95673 4.95674,-4.95673 z m -2.38425,9.28604 -6.21161,7.78019 c 0.98663,0.90381 1.63133,2.19564 1.63133,3.63912 0,0.68259 -0.12629,1.29085 -0.37646,1.88231 l 4.58028,4.26656 c 0.78902,-0.53305 1.73684,-0.87841 2.76071,-0.87841 1.39702,0 2.67729,0.57417 3.57638,1.50584 l 5.83515,-5.20771 c -0.17548,-0.50687 -0.25098,-1.00205 -0.25098,-1.56859 0,-0.9751 0.26557,-1.93201 0.75292,-2.69797 l -7.59196,-8.72134 c -0.69492,0.37264 -1.47782,0.62743 -2.32151,0.62743 -0.86275,0 -1.67827,-0.23897 -2.38425,-0.62743 z\\\" fill=\\\"#00bcf2\\\" transform=\\\"translate(-273.791 -380.868)\\\"/>\\r\\n\\r\\n</svg>\\r\\n\\r\\n### SAP and Active Directory are better together\\r\\nThe following analysis puts together SAP audit alerts with active directory risk indicators.\\r\\nClick on a user below to search for related Sentinel incidetns and Active directory and sigin logs related indications.\\r\\n\\r\\nIf you have the active directory data reside a different log analytics from the one used for the SAP data- make sure you **select the relevant subscriptions and workspaces** using the parameters at the top of this workbook.\\r\\n\\r\\n#### Anomalous logon failures\\r\\nFailed logons are given with anomaly indicators⚠️. Azure active directoty indications are marked with ⛔. Select a line to search for related Sentinel security incidents and active directory risk report (where available.) \\r\\n\\r\\n\"},\"name\":\"text - 4\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let FailedAuitClasses= dynamic([\\\"AU2\\\", \\\"AUL\\\", \\\"AU6\\\", \\\"AUM\\\"]); // \\\"Failed Dialog Logon\\\", \\\"Failed RFC call\\\", \\\"RFC/CPIC logon failed\\\", \\\"User Locked\\\"\\r\\nlet UsersEmail= SAPUsersEmail\\r\\n| summarize Email= make_set_if(Email,  Email contains_cs \\\"@\\\", 10)[0] by User;\\r\\nlet UsersEventCount= (SecurityAlert\\r\\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, Entities), NumberOfUpdates = count() by SystemAlertId\\r\\n    | mv-expand todynamic(Entities)\\r\\n    | where Entities[\\\"Type\\\"] =~ \\\"account\\\"\\r\\n    | where isnotempty( Entities[\\\"Name\\\"]) and isnotempty( Entities[\\\"UPNSuffix\\\"])\\r\\n    | project UserPrincipalName = strcat(tolower(Entities[\\\"Name\\\"]), \\\"@\\\", tolower(Entities[\\\"UPNSuffix\\\"])), AlertID= SystemAlertId\\r\\n    | join kind=inner (SecurityIncident | mv-expand AlertID= AlertIds to typeof(string ) | project AlertID, IncidentName) on AlertID\\r\\n| summarize IncidentCount= dcount(IncidentName, 2) , AlertCount= dcount(AlertID, 2) by Email= UserPrincipalName);\\r\\nlet NormallyFailingUsers= todynamic(\\\"\\\"{NormallyFailingUsers}\\\"\\\");\\r\\nlet RiskyADUsers= todynamic(\\\"\\\"{AzureSuspiciousUsers}\\\"\\\");\\r\\nlet SelectedSystems= SAPSystems(SelectedSystemRoles=dynamic(\\\"{SystemRoles}\\\")\\r\\n, SelectedSystems=todynamic(\\\"[{Systems}]\\\")\\r\\n, SelectedSystemUsage= dynamic(\\\"{SystemUsage}\\\")) | project SystemID;\\r\\nSAPAuditLog\\r\\n| where SystemID in(SelectedSystems)\\r\\n| where  MessageID in (FailedAuitClasses)\\r\\n| where isnotempty( User)\\r\\n| make-series FailedCountArray= count() default=0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step 6h by User\\r\\n| extend FailedAnomalies= series_decompose_anomalies(FailedCountArray, Threshold=2, Test_point= 1)\\r\\n| extend FailedAnomaly= array_index_of(FailedAnomalies,1)>= 0\\r\\n| extend Anomaly = iff(FailedAnomaly, 'Anomalous logon failures', 'Frequent logon failures')\\r\\n| where  (\\\"{FailedLogons}\\\") contains Anomaly\\r\\n| project User\\r\\n, FailedCountArray, FailedAnomalies, TimeGenerated, Anomaly\\r\\n| extend AnomalousFailedLogon = iff(User in(NormallyFailingUsers), 'Anomalous logon failures', 'Frequent logon failures')\\r\\n| lookup UsersEmail on User\\r\\n//| extend Email = iff(isempty(Email), User, Email)\\r\\n| extend Email = iff(isempty(Email), iff({DemoMode}, 'pdemo@seccxpninja.onmicrosoft.com', User), tolower(Email))\\r\\n| extend RiskyADUser = iff(Email in(RiskyADUsers), 'High risk AD user', '')\\r\\n| extend UserAnom= iff({DemoMode}, substring(hash_sha1(User), 0, 12), User)\\r\\n| extend EmailAnom= iff({DemoMode}, strcat(substring(hash_sha1(User), 0, 12), '@seccxpninja.onmicrosoft.com' ), Email)\\r\\n| project User, UserAnom, FailedCountArray, FailedAnomalies, Anomaly, EmailAnom, Email, RiskyADUser\\r\\n| lookup UsersEventCount on Email\\r\\n| order by RiskyADUser desc, IncidentCount desc, User asc\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Anomalous logon failures- select a line to search for related events\",\"timeContextFromParameter\":\"TimeRange\",\"showRefreshButton\":true,\"exportedParameters\":[{\"fieldName\":\"Email\",\"parameterName\":\"EntityToCheck\",\"defaultValue\":\" \"},{\"fieldName\":\"EmailAnom\",\"parameterName\":\"AnomEntityToCheck\",\"parameterType\":1,\"defaultValue\":\" \"}],\"showExportToExcel\":true,\"exportToExcelOptions\":\"all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{SAPWorkspace}\"],\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"User\",\"formatter\":5},{\"columnMatch\":\"UserAnom\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"representation\":\"Person\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"FailedCountArray\",\"formatter\":9,\"formatOptions\":{\"min\":0,\"max\":200,\"palette\":\"greenRed\",\"compositeBarSettings\":{\"labelText\":\"\"}},\"tooltipFormat\":{\"tooltip\":\"{0}\"}},{\"columnMatch\":\"FailedAnomalies\",\"formatter\":10,\"formatOptions\":{\"min\":0,\"max\":1,\"palette\":\"greenRed\"},\"tooltipFormat\":{\"tooltip\":\"{0}\"}},{\"columnMatch\":\"Anomaly\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"Anomalous logon failures\",\"representation\":\"2\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Frequent logon failures\",\"representation\":\"Noisy\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"more\",\"text\":\"{0}{1}\"}],\"customColumnWidthSetting\":\"28ch\"}},{\"columnMatch\":\"EmailAnom\",\"formatter\":1,\"formatOptions\":{\"workbookContext\":{\"componentIdSource\":\"workbook\",\"resourceIdsSource\":\"default\",\"templateIdSource\":\"static\",\"templateId\":\"/providers/Microsoft.Insights/workbooks/c4862201-6476-4ffa-909d-791c7d159b54\",\"typeSource\":\"static\",\"type\":\"sentinel\",\"gallerySource\":\"static\",\"gallery\":\"Sentinel\",\"locationSource\":\"default\"}}},{\"columnMatch\":\"Email\",\"formatter\":5},{\"columnMatch\":\"RiskyADUser\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"High risk AD user\",\"representation\":\"disabled\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"Blank\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"IncidentCount\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"0\",\"representation\":\"Blank\",\"text\":\"{0}{1}\"},{\"operator\":\"<\",\"thresholdValue\":\"5\",\"representation\":\"2\",\"text\":\"{0}{1}\"},{\"operator\":\"<\",\"thresholdValue\":\"10\",\"representation\":\"3\",\"text\":\"{0}{1}\"},{\"operator\":\">=\",\"thresholdValue\":\"10\",\"representation\":\"4\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"Blank\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"AlertCount\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"representation\":\"Blank\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"0\",\"representation\":\"Blank\",\"text\":\"{0}{1}\"},{\"operator\":\"<\",\"thresholdValue\":\"5\",\"representation\":\"2\",\"text\":\"{0}{1}\"},{\"operator\":\"<\",\"thresholdValue\":\"10\",\"representation\":\"3\",\"text\":\"{0}{1}\"},{\"operator\":\">=\",\"thresholdValue\":\"10\",\"representation\":\"critical\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"TimeGenerated\",\"formatter\":5},{\"columnMatch\":\"AnomalousFailedLogon\",\"formatter\":5},{\"columnMatch\":\"FailedAnomaly\",\"formatter\":5}],\"filter\":true,\"labelSettings\":[{\"columnId\":\"UserAnom\",\"label\":\"User\"},{\"columnId\":\"FailedCountArray\",\"label\":\"Failed attempts timeline\"},{\"columnId\":\"FailedAnomalies\",\"label\":\"Anomalies timeline\"},{\"columnId\":\"EmailAnom\",\"label\":\"Email\"},{\"columnId\":\"RiskyADUser\",\"label\":\"AD risk ind.\"},{\"columnId\":\"IncidentCount\",\"label\":\"Incidents\"},{\"columnId\":\"AlertCount\",\"label\":\"Alerts\"}]}},\"customWidth\":\"100\",\"showPin\":false,\"name\":\"Anomalous logon failures with AD risk indications\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let EntityToCheck= \\\"{EntityToCheck}\\\";\\r\\nlet EmptySet= datatable(AlertName:string) [\\\"No incidents found\\\"];\\r\\nSecurityIncident\\r\\n| summarize arg_max(TimeGenerated,CreatedTime,Status, Severity, Owner, AdditionalData, IncidentUrl, Comments, Classification,ClassificationReason, ClassificationComment,Labels, Title, AlertIds) by IncidentNumber\\r\\n| where array_length(AlertIds) > 0\\r\\n| extend Tactics = todynamic(AdditionalData.tactics)\\r\\n| extend Owner = todynamic(Owner.assignedTo), IncidentCreated = format_datetime(CreatedTime,'yy-MM-dd HH:mm')\\r\\n| extend Product = todynamic((parse_json(tostring(AdditionalData.alertProductNames))[0]))\\r\\n| extend Tags = extract_all('labelName\\\":\\\"(.*?)\\\"',tostring(Labels))\\r\\n| extend Owner = case(tostring(Owner)==\\\"\\\", \\\"Unassigned\\\",tostring(Owner)), Products = strcat_array(AdditionalData.alertProductNames, \\\", \\\"), Alerts = tostring(AdditionalData.alertsCount), Bookmarks = tostring(AdditionalData.bookmarksCount), Comments = tostring(AdditionalData.commentsCount), Tactics = strcat_array(AdditionalData.tactics, \\\", \\\"), Labels = strcat_array(Tags, \\\", \\\")\\r\\n| mv-expand AlertIds to typeof(string)\\r\\n| join kind=inner \\r\\n(SecurityAlert | search Entities:EntityToCheck\\r\\n| summarize arg_max(TimeGenerated,AlertName, Description, AlertType, Entities) by SystemAlertId) on $left.AlertIds == $right.SystemAlertId\\r\\n| extend HoursAgo= datetime_diff('Hour',now(), TimeGenerated)\\r\\n| project AlertName, IncidentUrl, HoursAgo, TimeGenerated, Status, Severity, Owner, Entities, User= \\\"{EntityToCheck}\\\"\\r\\n| order by TimeGenerated\\r\\n\\r\\n\",\"size\":1,\"title\":\"Incidents/ alerts overiew for user {AnomEntityToCheck}\",\"noDataMessage\":\"Couldn't find any incidents/ alerts for user\",\"noDataMessageStyle\":2,\"showExportToExcel\":true,\"exportToExcelOptions\":\"all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{SAPWorkspace}\"],\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"AlertName\",\"formatter\":1},{\"columnMatch\":\"IncidentUrl\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"Url\",\"linkLabel\":\"Go to incident\"}},{\"columnMatch\":\"HoursAgo\",\"formatter\":5},{\"columnMatch\":\"TimeGenerated\",\"formatter\":6,\"dateFormat\":{\"formatName\":\"shortDateTimePattern\"}},{\"columnMatch\":\"Severity\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"High\",\"representation\":\"Sev0\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Medium\",\"representation\":\"Sev2\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Low\",\"representation\":\"1\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"Unavailable\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"Entities\",\"formatter\":5}],\"labelSettings\":[{\"columnId\":\"AlertName\",\"label\":\"Alert name\"},{\"columnId\":\"IncidentUrl\",\"label\":\"Incident URL\"},{\"columnId\":\"TimeGenerated\",\"label\":\"Created on\"}]}},\"customWidth\":\"100\",\"conditionalVisibility\":{\"parameterName\":\"EntityToCheck\",\"comparison\":\"isNotEqualTo\",\"value\":\" \"},\"showPin\":true,\"name\":\"query - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let starttime = todatetime({TimeRange:start});\\r\\nlet endtime = todatetime({TimeRange:end});\\r\\nlet lookback = totimespan((endtime-starttime)*7);\\r\\n\\r\\nlet auditLookback = starttime - 14d;\\r\\n\\r\\n// User Granted Access and Grants others Access\\r\\n\\r\\nlet opName = dynamic([\\\"Add user\\\", \\\"Invite external user\\\"]);\\r\\n// Helper function to extract relevant fields from AuditLog events\\r\\nlet auditLogEvents = view (startTimeSpan: timespan, operation: dynamic) {\\r\\n    AuditLogs\\r\\n    | where TimeGenerated >= auditLookback\\r\\n    | where OperationName in~ (operation)\\r\\n    | extend ModProps = iff(TargetResources.[0].modifiedProperties != \\\"[]\\\", TargetResources.[0].modifiedProperties, todynamic(\\\"NoValues\\\"))\\r\\n    | extend IpAddress = iff(isnotempty(tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)), \\r\\n        tostring(parse_json(tostring(InitiatedBy.user)).ipAddress), tostring(parse_json(tostring(InitiatedBy.app)).ipAddress))\\r\\n    | extend InitiatedByFull = iff(isnotempty(tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)), \\r\\n        tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName), tostring(parse_json(tostring(InitiatedBy.app)).displayName))\\r\\n    | extend InitiatedBy = replace(\\\"_\\\", \\\"@\\\", tostring(split(InitiatedByFull, \\\"#\\\")[0]))\\r\\n    | extend TargetUserPrincipalName = tostring(TargetResources[0].userPrincipalName)\\r\\n    | extend TargetUserName = replace(\\\"_\\\", \\\"@\\\", tostring(split(TargetUserPrincipalName, \\\"#\\\")[0]))\\r\\n    | extend TargetResourceName = case(\\r\\n        isempty(tostring(TargetResources.[0].displayName)), TargetUserPrincipalName,\\r\\n        isnotempty(tostring(TargetResources.[0].displayName)) and tostring(TargetResources.[0].displayName) startswith \\\"upn:\\\", tolower(tostring(TargetResources.[0].displayName)),\\r\\n        tolower(tostring(TargetResources.[0].displayName))\\r\\n        )\\r\\n    | extend TargetUserName = replace(\\\"_\\\", \\\"@\\\", tostring(split(TargetUserPrincipalName, \\\"#\\\")[0]))\\r\\n    | extend TargetUserName = iff(isempty(TargetUserName), tostring(split(split(TargetResourceName, \\\",\\\")[0], \\\" \\\")[1]), TargetUserName) \\r\\n    | mvexpand ModProps\\r\\n    | extend\\r\\n        PropertyName = tostring(ModProps.displayName),\\r\\n        newValue = replace('\\\\\\\"', '', tostring(ModProps.newValue));\\r\\n};\\r\\n// Assigning time for First TargetUserName that was added\\r\\nlet FirstAdd = auditLogEvents(auditLookback, opName)  \\r\\n    | project FirstAddTimeUtc = TimeGenerated, Type, FirstInitiatedBy = InitiatedBy, IpAddress, FirstTargetUserName = TargetUserName, FirstTargetResourceName = TargetResourceName, \\r\\n        FirstOperationName = OperationName, FirstPropertyName = PropertyName, FirstnewValue = newValue, FirstCorrelationId = CorrelationId, FirstId = Id;\\r\\n// Assigning time for second TargetUserName that was added, which will allow us to see if a first TargetUserName added in is the Initiated by on the second in the later join\\r\\nlet SecondAdd = auditLogEvents(auditLookback, opName)  \\r\\n    | project SecondAddTimeUtc = TimeGenerated, Type, SecondInitiatedBy = InitiatedBy, IpAddress, SecondTargetUserName = TargetUserName, SecondTargetResourceName = TargetResourceName, \\r\\n        SecondOperationName = OperationName, SecondPropertyName = PropertyName, SecondnewValue = newValue, SecondCorrelationId = CorrelationId, SecondId = Id;\\r\\n//  Joining the FirstAdd with SecondAdd where the FirstAdd TargetUserName value matches the SecondAdd InitiatedBy.  This shows the new user adding a user.\\r\\nlet NewUserAddsUser = FirstAdd\\r\\n    | join SecondAdd on $left.FirstTargetUserName == $right.SecondInitiatedBy\\r\\n    // we only want items where the FirstAddTimeUtc is before the SecondAddTimeUtc\\r\\n    | where FirstAddTimeUtc < SecondAddTimeUtc\\r\\n;\\r\\n// Build out some of the properties for context\\r\\nlet UserGrantedGrants=(NewUserAddsUser\\r\\n| extend\\r\\n    FirstnewValue = split(FirstnewValue, \\\";\\\"),\\r\\n    SecondnewValue = split(SecondnewValue, \\\";\\\")\\r\\n| extend PropertyUpdate = pack(FirstPropertyName, FirstnewValue, SecondPropertyName, SecondnewValue, \\\"FirstCorrelationId\\\", FirstCorrelationId, \\\"FirstId\\\", FirstId, \\\"SecondCorrelationId\\\", SecondCorrelationId, \\\"SecondId\\\", SecondId)\\r\\n| summarize PropertyUpdateSet = make_bag(PropertyUpdate)\\r\\n    by FirstAddTimeUtc, FirstInitiatedBy, FirstTargetUserName, SecondAddTimeUtc, SecondInitiatedBy, SecondTargetUserName, \\r\\n    IpAddress, FirstTargetResourceName, SecondTargetResourceName, FirstOperationName, SecondOperationName\\r\\n| extend\\r\\n    timestamp = FirstAddTimeUtc,\\r\\n    AccountCustomEntity = FirstInitiatedBy,\\r\\n    HostCustomEntity = FirstTargetResourceName,\\r\\n    IPCustomEntity = IpAddress\\r\\n    | extend UserPrincipalName= SecondTargetUserName)\\r\\n    | extend Risk= 'User Granted Access and Grants others Access';\\r\\n\\r\\n// Anomalous sign-in location by user account and authenticating application - with sign-in details\\r\\nlet AnomalSiginLocAuth= (SigninLogs \\r\\n| where TimeGenerated  > starttime\\r\\n| extend  locationString= strcat(tostring(LocationDetails[\\\"countryOrRegion\\\"]), \\\"/\\\", \\r\\ntostring(LocationDetails[\\\"state\\\"]), \\\"/\\\", tostring(LocationDetails[\\\"city\\\"]), \\\";\\\") \\r\\n| project TimeGenerated, AppDisplayName , UserPrincipalName, locationString \\r\\n// Create time series \\r\\n| make-series dLocationCount = dcount(locationString) on TimeGenerated step 1d \\r\\nby UserPrincipalName, AppDisplayName \\r\\n// Compute best fit line for each entry \\r\\n| extend (RSquare,Slope,Variance,RVariance,Interception,LineFit)=series_fit_line(dLocationCount) \\r\\n// Chart the 3 most interesting lines  \\r\\n// A 0-value slope corresponds to an account being completely stable over time for a given Azure Active Directory application\\r\\n| top 3 by Slope desc  \\r\\n// Extract the set of locations for each top user:\\r\\n| join kind=inner (SigninLogs\\r\\n| extend  locationString= strcat(tostring(LocationDetails[\\\"countryOrRegion\\\"]), \\\"/\\\", \\r\\ntostring(LocationDetails[\\\"state\\\"]), \\\"/\\\", tostring(LocationDetails[\\\"city\\\"]), \\\";\\\")\\r\\n| summarize locationList = makeset(locationString), threeDayWindowLocationCount=dcount(locationString) by AppDisplayName, UserPrincipalName, \\r\\ntimerange=bin(TimeGenerated, 3d)) on AppDisplayName, UserPrincipalName\\r\\n| order by UserPrincipalName, timerange asc\\r\\n| project timerange, AppDisplayName , UserPrincipalName, threeDayWindowLocationCount, locationList \\r\\n| order by AppDisplayName, UserPrincipalName, timerange asc\\r\\n| extend timestamp = timerange, AccountCustomEntity = UserPrincipalName)\\r\\n| extend Risk= 'Anomalous sign-in location by user account and authenticating application';\\r\\n\\r\\n\\r\\n// Failed service logon attempt by user account with available AuditData\\r\\nlet failLimit = 10;\\r\\nlet ipLimit = 3;\\r\\nlet failedSignins = SigninLogs\\r\\n| where TimeGenerated between(starttime..endtime)\\r\\n| where ResultType != \\\"0\\\" and AppDisplayName != \\\"Windows Sign In\\\"\\r\\n| extend UserPrincipalName = tolower(UserPrincipalName)\\r\\n| extend CityState = strcat(tostring(LocationDetails.city),\\\"|\\\", tostring(LocationDetails.state))\\r\\n| extend Result = strcat(ResultType,\\\"-\\\",ResultDescription)\\r\\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), DistinctIPAddressCount = dcount(IPAddress), IPAddresses = makeset(IPAddress),\\r\\nCityStates = makeset(CityState), DistinctResultCount = dcount(Result), Results = makeset(Result), AppDisplayNames = makeset(AppDisplayName),\\r\\nFailedLogonCount = count() by Type, OperationName, Category, UserPrincipalName = tolower(UserPrincipalName), ClientAppUsed, Location, CorrelationId\\r\\n| project Type, StartTimeUtc, EndTimeUtc, OperationName, Category, UserPrincipalName, AppDisplayNames, DistinctIPAddressCount, IPAddresses, DistinctResultCount,\\r\\nResults, FailedLogonCount, Location, CityStates\\r\\n| where FailedLogonCount >= failLimit or DistinctIPAddressCount >= ipLimit\\r\\n| extend Activity = pack(\\\"IPAddresses\\\", IPAddresses, \\\"AppDisplayNames\\\", AppDisplayNames, \\\"Results\\\", Results, \\\"Location\\\", Location, \\\"CityStates\\\", CityStates)\\r\\n| project Type, StartTimeUtc, EndTimeUtc, OperationName, Category, UserPrincipalName, FailedLogonCount, DistinctIPAddressCount, DistinctResultCount, Activity\\r\\n| extend AccountCustomEntity = UserPrincipalName;\\r\\nlet accountMods = AuditLogs | where TimeGenerated >= auditLookback\\r\\n| where Category == \\\"UserManagement\\\" or Category == \\\"GroupManagement\\\"\\r\\n| extend ModProps = TargetResources.[0].modifiedProperties\\r\\n| extend InitiatedBy = case(\\r\\nisnotempty(tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)), tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName),\\r\\nisnotempty(tostring(parse_json(tostring(InitiatedBy.app)).displayName)), tostring(parse_json(tostring(InitiatedBy.app)).displayName),\\r\\n\\\"\\\")\\r\\n| extend UserPrincipalName = tolower(tostring(TargetResources.[0].userPrincipalName))\\r\\n| mvexpand ModProps\\r\\n| extend PropertyName = tostring(ModProps.displayName), oldValue = tostring(ModProps.oldValue), newValue = tostring(ModProps.newValue)\\r\\n| extend ModifiedProps = pack(\\\"PropertyName\\\",PropertyName,\\\"oldValue\\\",oldValue,\\\"newValue\\\",newValue)\\r\\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), Activity = make_bag(ModifiedProps) by Type, InitiatedBy, UserPrincipalName, Category, OperationName, CorrelationId, Id\\r\\n| extend AccountCustomEntity = UserPrincipalName, timestamp= StartTimeUtc;\\r\\n// Gather only Audit data for UserPrincipalNames that we have Audit data for\\r\\nlet accountNameOnly = failedSignins | project UserPrincipalName;\\r\\nlet auditMods = accountNameOnly\\r\\n| join kind= innerunique (\\r\\naccountMods\\r\\n) on UserPrincipalName;\\r\\nlet availableAudits = auditMods | project UserPrincipalName;\\r\\nlet signinsWithAudit = availableAudits\\r\\n| join kind= innerunique (\\r\\nfailedSignins\\r\\n) on UserPrincipalName;\\r\\n// Union the Current Signin failures so we do not lose them with the Auditing data we do have\\r\\nlet activity = (union isfuzzy=true\\r\\nsigninsWithAudit, auditMods)\\r\\n| order by StartTimeUtc, UserPrincipalName;\\r\\n\\r\\nlet FailedServiceLogon= (activity\\r\\n| project StartTimeUtc, EndTimeUtc, DataType = Type, Category, OperationName, UserPrincipalName, InitiatedBy, Activity, FailedLogonCount, DistinctIPAddressCount, DistinctResultCount, CorrelationId, Id\\r\\n| order by UserPrincipalName, StartTimeUtc\\r\\n| extend timestamp = StartTimeUtc, AccountCustomEntity = UserPrincipalName)\\r\\n| extend Risk= 'Failed service logon attempt by user account with available AuditData';\\r\\n\\r\\nUserGrantedGrants | union AnomalSiginLocAuth, FailedServiceLogon\\r\\n| where UserPrincipalName =~ \\\"{EntityToCheck}\\\" or FirstInitiatedBy=~ \\\"{EntityToCheck}\\\" or FirstTargetUserName=~ \\\"{EntityToCheck}\\\" or SecondInitiatedBy=~ \\\"{EntityToCheck}\\\" or SecondTargetUserName=~ \\\"{EntityToCheck}\\\"\\r\\n| project Risk, timestamp, ExtendedDetails= pack_all(true)\\r\\n| order by Risk\\r\\n\",\"size\":1,\"title\":\"Azure audit and sigin risks for user {AnomEntityToCheck}\",\"noDataMessage\":\"No Azure AD and SignIns anomalies found\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{ADWorkspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"$gen_group\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"155ch\"}},{\"columnMatch\":\"Risk\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"300ch\"}},{\"columnMatch\":\"timestamp\",\"formatter\":6,\"dateFormat\":{\"formatName\":\"shortDateTimePattern\"}},{\"columnMatch\":\"ExtendedDetails\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"300ch\"}},{\"columnMatch\":\"$gen_group\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"155ch\"}}],\"filter\":true,\"hierarchySettings\":{\"treeType\":1,\"groupBy\":[\"Risk\",\"ExtendedDetails\"],\"expandTopLevel\":false},\"labelSettings\":[{\"columnId\":\"timestamp\",\"label\":\"Date and time\"},{\"columnId\":\"ExtendedDetails\",\"label\":\"Extended details\"}]}},\"customWidth\":\"100\",\"conditionalVisibility\":{\"parameterName\":\"EntityToCheck\",\"comparison\":\"isNotEqualTo\",\"value\":\" \"},\"name\":\"Azure AD risks\"}]},\"name\":\"Logon failure anomalies\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let NormallyFailingUsers= todynamic(\\\"\\\"{NormallyFailingUsers}\\\"\\\");\\nlet SuccessAuitClasses= dynamic([\\\"AU1\\\", \\\"AUK\\\", \\\"AU5\\\"]); // \\\"User logged on\\\", \\\"Successful RFC\\\", \\\"RFC/CPIC logon\\\"\\nlet FailedAuitClasses= dynamic([\\\"AU2\\\", \\\"AUL\\\", \\\"AU6\\\", \\\"AUM\\\"]); // \\\"Failed Dialog Logon\\\", \\\"Failed RFC call\\\", \\\"RFC/CPIC logon failed\\\", \\\"User Locked\\\"\\nlet SelectedSystems= SAPSystems(SelectedSystemRoles=dynamic(\\\"{SystemRoles}\\\")\\n, SelectedSystems=todynamic(\\\"[{Systems}]\\\")\\n, SelectedSystemUsage= dynamic(\\\"{SystemUsage}\\\")) | project SystemID, SystemRole;\\n//SelectedSystems\\nSAPAuditLog\\n| where  MessageID in (array_concat(SuccessAuitClasses, FailedAuitClasses))\\n| summarize Count= count() by MessageID, User, SystemID\\n| lookup SelectedSystems on SystemID\\n| extend Status= iff( SuccessAuitClasses has MessageID, \\\"Success\\\", \\\"Failure\\\")\\n| extend SystemRole= iff(isempty(SystemRole), '⚠️Misconfigured Systems',SystemRole)\\n| extend Anomaly = iff(User in(NormallyFailingUsers), 'Anomalous logon failures', 'Frequent logon failures')\\n| where  (\\\"{FailedLogons}\\\") contains Anomaly\\n| summarize UniqueUsersSucess= dcountif(User, Status == \\\"Success\\\", 1), CountSuccess= sumif(Count, Status == \\\"Success\\\"),\\n            UniqueUsersFail= dcountif(User, Status == \\\"Failure\\\", 1), CountFail= sumif(Count, Status == \\\"Failure\\\")\\nby SystemID, SystemRole\\n| extend UniqueFailRate= 100.0*UniqueUsersFail/(UniqueUsersSucess+UniqueUsersFail)\\n| extend CountFailRate= 100.0*CountFail/(CountSuccess+CountFail)\\n| extend SystemID2= iff({DemoMode}, substring(hash_sha1(SystemID), 0, 3), SystemID)\\n\\n\",\"size\":3,\"showAnalytics\":true,\"title\":\"Logon failure rate per system- click on a cell for a detailed report\",\"timeContextFromParameter\":\"TimeRange\",\"timeBrushParameterName\":\"BrushedTimeRange\",\"timeBrushExportOnlyWhenBrushed\":true,\"exportedParameters\":[{\"fieldName\":\"SystemID\",\"parameterName\":\"SystemIDFromHive\",\"defaultValue\":\"'All Systems'\"},{\"fieldName\":\"SystemID2\",\"parameterName\":\"SystemID2FromHive\",\"parameterType\":1,\"defaultValue\":\"'All Systems'\"}],\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{SAPWorkspace}\"],\"visualization\":\"graph\",\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"ResultText\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"dcount_CorrelationId\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"graphSettings\":{\"type\":2,\"topContent\":{\"columnMatch\":\"SystemID2\",\"formatter\":12,\"formatOptions\":{\"palette\":\"blue\"}},\"centerContent\":{\"columnMatch\":\"UniqueUsersFail\",\"formatter\":1,\"tooltipFormat\":{\"tooltip\":\"Number of unique failing users {0}\"}},\"bottomContent\":{\"columnMatch\":\"UniqueFailRate\",\"formatter\":1,\"tooltipFormat\":{\"tooltip\":\"Rate of logon failure {0} %\"}},\"hivesContent\":{\"columnMatch\":\"SystemRole\",\"formatter\":12,\"formatOptions\":{\"palette\":\"blue\"}},\"nodeIdField\":\"SystemID\",\"sourceIdField\":\"SystemRole\",\"targetIdField\":\"SystemID\",\"graphOrientation\":3,\"showOrientationToggles\":false,\"staticNodeSize\":70,\"colorSettings\":{\"nodeColorField\":\"UniqueFailRate\",\"type\":4,\"heatmapPalette\":\"greenRed\"},\"groupByField\":\"SystemRole\",\"hivesMargin\":5},\"chartSettings\":{\"xAxis\":\"TimeGenerated\",\"yAxis\":[\"Count\"],\"group\":\"MessageClass\",\"showLegend\":true},\"mapSettings\":{\"locInfo\":\"LatLong\",\"sizeSettings\":\"UniqueUsers\",\"sizeAggregation\":\"Sum\",\"legendMetric\":\"UniqueUsers\",\"legendAggregation\":\"Sum\",\"itemColorSettings\":{\"type\":\"heatmap\",\"colorAggregation\":\"Sum\",\"nodeColorField\":\"UniqueUsers\",\"heatmapPalette\":\"greenRed\"}}},\"customWidth\":\"64\",\"name\":\"SuccessFailurebyRole\",\"styleSettings\":{\"maxWidth\":\"100\",\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let NormallyFailingUsers= todynamic(\\\"\\\"{NormallyFailingUsers}\\\"\\\");\\r\\nlet DataTypes = materialize(SAPGetDataTypes());\\r\\nlet FailedAuitClasses= dynamic([\\\"AU2\\\", \\\"AUL\\\", \\\"AU6\\\", \\\"AUM\\\"]); // \\\"Failed Dialog Logon\\\", \\\"Failed RFC call\\\", \\\"RFC/CPIC logon failed\\\", \\\"User Locked\\\"\\r\\nSAPAuditLog\\r\\n| where  MessageID in (FailedAuitClasses)\\r\\n| where SystemID == \\\"{SystemIDFromHive}\\\"\\r\\n| summarize Count= count(), MessageText= any(MessageText) by MessageID, User, SystemID, TimeGenerated= startofday(bin(TimeGenerated, 1d)), LogonTypes= Variable1, Reasons= Variable2, LogonMethods= Variable3\\r\\n| extend Anomaly = iff(User in(NormallyFailingUsers), 'Anomalous logon failures', 'Frequent logon failures')\\r\\n| where  (\\\"{FailedLogons}\\\") contains Anomaly\\r\\n| lookup (DataTypes | where DataType == \\\"LogonFailureCause\\\"| project Key, LogonFailureCause= Value) on $left.Reasons == $right.Key\\r\\n| lookup (DataTypes | where DataType == \\\"LogonType\\\"| project Key, LogonType= Value) on $left.LogonTypes == $right.Key\\r\\n| lookup (DataTypes | where DataType == \\\"LogonMethod\\\"| project Key, LogonMethod= Value) on $left.LogonMethods == $right.Key\\r\\n| extend User= iff({DemoMode}, substring(hash_sha1(User), 0, 12), User)\\r\\n| project User, LogonType, LogonMethod, LogonFailureCause, Details= strcat(\\\"User \\\", User, \\\" has failed to logon by \\\", LogonMethod, \\\". A \\\", LogonType, \\\" has failed for \\\", LogonFailureCause )\\r\\n, Count, FormattedDate= format_datetime(TimeGenerated, 'yy-MM-dd')\\r\\n| extend CountPerDay= strcat(Count, ' Times on ', FormattedDate)\\r\\n\\r\\n\\r\\n\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Failed logons for system {SystemID2FromHive}\",\"noDataMessage\":\"Click on a system from the hive to see failed logons\",\"noDataMessageStyle\":2,\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"exportToExcelOptions\":\"all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{SAPWorkspace}\"],\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"$gen_group\",\"formatter\":1,\"formatOptions\":{\"customColumnWidthSetting\":\"200ch\"}},{\"columnMatch\":\"User\",\"formatter\":5},{\"columnMatch\":\"LogonType\",\"formatter\":5},{\"columnMatch\":\"LogonMethod\",\"formatter\":5},{\"columnMatch\":\"LogonFailureCause\",\"formatter\":5},{\"columnMatch\":\"Details\",\"formatter\":1,\"formatOptions\":{\"customColumnWidthSetting\":\"150ch\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"Count\",\"formatter\":0,\"formatOptions\":{\"aggregation\":\"Sum\"}},{\"columnMatch\":\"TimeGenerated\",\"formatter\":6,\"formatOptions\":{\"customColumnWidthSetting\":\"15ch\"},\"dateFormat\":{\"formatName\":\"shortDatePattern\"}}],\"filter\":true,\"hierarchySettings\":{\"treeType\":1,\"groupBy\":[\"Details\",\"CountPerDay\"],\"expandTopLevel\":false},\"labelSettings\":[{\"columnId\":\"Details\",\"label\":\"Details\"}]}},\"customWidth\":\"35\",\"conditionalVisibility\":{\"parameterName\":\"SystemIDFromHive\",\"comparison\":\"isNotEqualTo\",\"value\":\"'All Systems'\"},\"name\":\"FailedbyUsersperSystem\"}]},\"customWidth\":\"100\",\"name\":\"group failed logons Drill\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Logon failures trends\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let DataTypes = materialize(SAPGetDataTypes());\\nlet SelectedSystems= SAPSystems(SelectedSystemRoles=dynamic(\\\"{SystemRoles}\\\")\\n, SelectedSystems=todynamic(\\\"[{Systems}]\\\")\\n, SelectedSystemUsage= dynamic(\\\"{SystemUsage}\\\")) | project SystemID;\\nlet NormallyFailingUsers= todynamic(\\\"\\\"{NormallyFailingUsers}\\\"\\\");\\nlet FailedAuitClasses= dynamic([\\\"AU2\\\", \\\"AUL\\\", \\\"AU6\\\", \\\"AUM\\\"]); // \\\"Failed Dialog Logon\\\", \\\"Failed RFC call\\\", \\\"RFC/CPIC logon failed\\\", \\\"User Locked\\\"\\nSAPAuditLog\\n| where SystemID in(SelectedSystems)\\n| where  MessageID in (FailedAuitClasses)\\n| extend TimeGenerated= bin(TimeGenerated, 4h)\\n| extend Anomaly = iff(User in(NormallyFailingUsers), 'Anomalous logon failures', 'Frequent logon failures')\\n| where  (\\\"{FailedLogons}\\\") contains Anomaly\\n| summarize UniqueUsers= dcount(User), Count= count() by TimeGenerated, LogonTypes= Variable1, Reasons= Variable2, LogonMethods= Variable3\\n| lookup (DataTypes | where DataType == \\\"LogonFailureCause\\\"| project Key, LogonFailureCause= Value) on $left.Reasons == $right.Key\\n| lookup (DataTypes | where DataType == \\\"LogonType\\\"| project Key, LogonType= Value) on $left.LogonTypes == $right.Key\\n| lookup (DataTypes | where DataType == \\\"LogonMethod\\\"| project Key, LogonMethod= Value) on $left.LogonMethods == $right.Key\\n| project TimeGenerated, LogonFailureCause, LogonType, LogonMethod, Count, UniqueUsers\\n\",\"size\":1,\"aggregation\":3,\"showAnalytics\":true,\"title\":\"Login failure by cause\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{SAPWorkspace}\"],\"visualization\":\"areachart\",\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"ResultText\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"dcount_CorrelationId\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"chartSettings\":{\"xAxis\":\"TimeGenerated\",\"yAxis\":[\"UniqueUsers\"],\"group\":\"LogonFailureCause\"}},\"customWidth\":\"100\",\"name\":\"Login failures\",\"styleSettings\":{\"maxWidth\":\"100%\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let DataTypes = materialize(SAPGetDataTypes());\\nlet SelectedSystems= SAPSystems(SelectedSystemRoles=dynamic(\\\"{SystemRoles}\\\")\\n, SelectedSystems=todynamic(\\\"[{Systems}]\\\")\\n, SelectedSystemUsage= dynamic(\\\"{SystemUsage}\\\")) | project SystemID;\\nlet NormallyFailingUsers= todynamic(\\\"\\\"{NormallyFailingUsers}\\\"\\\");\\nlet FailedAuitClasses= dynamic([\\\"AU2\\\", \\\"AUL\\\", \\\"AU6\\\", \\\"AUM\\\"]); // \\\"Failed Dialog Logon\\\", \\\"Failed RFC call\\\", \\\"RFC/CPIC logon failed\\\", \\\"User Locked\\\"\\nSAPAuditLog\\n| where SystemID in(SelectedSystems)\\n| where  MessageID in (FailedAuitClasses)\\n| extend TimeGenerated= bin(TimeGenerated, 4h)\\n| extend Anomaly = iff(User in(NormallyFailingUsers), 'Anomalous logon failures', 'Frequent logon failures')\\n| where  (\\\"{FailedLogons}\\\") contains Anomaly\\n| summarize UniqueUsers= dcount(User), Count= count() by TimeGenerated, LogonTypes= Variable1, Reasons= Variable2, LogonMethods= Variable3\\n| lookup (DataTypes | where DataType == \\\"LogonFailureCause\\\"| project Key, LogonFailureCause= Value) on $left.Reasons == $right.Key\\n| lookup (DataTypes | where DataType == \\\"LogonType\\\"| project Key, LogonType= Value) on $left.LogonTypes == $right.Key\\n| lookup (DataTypes | where DataType == \\\"LogonMethod\\\"| project Key, LogonMethod= Value) on $left.LogonMethods == $right.Key\\n| project TimeGenerated, LogonFailureCause, LogonType, LogonMethod, Count, UniqueUsers\\n\",\"size\":1,\"aggregation\":3,\"showAnalytics\":true,\"title\":\"Login failure by type\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{SAPWorkspace}\"],\"visualization\":\"areachart\",\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"ResultText\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"dcount_CorrelationId\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"chartSettings\":{\"xAxis\":\"TimeGenerated\",\"yAxis\":[\"UniqueUsers\"],\"group\":\"LogonType\"}},\"customWidth\":\"100\",\"name\":\"Login failures by type\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let DataTypes = materialize(SAPGetDataTypes());\\nlet SelectedSystems= SAPSystems(SelectedSystemRoles=dynamic(\\\"{SystemRoles}\\\")\\n, SelectedSystems=todynamic(\\\"[{Systems}]\\\")\\n, SelectedSystemUsage= dynamic(\\\"{SystemUsage}\\\")) | project SystemID;\\nlet NormallyFailingUsers= todynamic(\\\"\\\"{NormallyFailingUsers}\\\"\\\");\\nlet FailedAuitClasses= dynamic([\\\"AU2\\\", \\\"AUL\\\", \\\"AU6\\\", \\\"AUM\\\"]); // \\\"Failed Dialog Logon\\\", \\\"Failed RFC call\\\", \\\"RFC/CPIC logon failed\\\", \\\"User Locked\\\"\\nSAPAuditLog\\n| where SystemID in(SelectedSystems)\\n| where  MessageID in (FailedAuitClasses)\\n| extend Anomaly = iff(User in(NormallyFailingUsers), 'Anomalous logon failures', 'Frequent logon failures')\\n| where  (\\\"{FailedLogons}\\\") contains Anomaly\\n| extend TimeGenerated= bin(TimeGenerated, 4h)\\n| summarize UniqueUsers= dcount(User), Count= count() by TimeGenerated, LogonTypes= Variable1, Reasons= Variable2, LogonMethods= Variable3\\n| lookup (DataTypes | where DataType == \\\"LogonFailureCause\\\"| project Key, LogonFailureCause= Value) on $left.Reasons == $right.Key\\n| lookup (DataTypes | where DataType == \\\"LogonType\\\"| project Key, LogonType= Value) on $left.LogonTypes == $right.Key\\n| lookup (DataTypes | where DataType == \\\"LogonMethod\\\"| project Key, LogonMethod= Value) on $left.LogonMethods == $right.Key\\n| project TimeGenerated, LogonFailureCause, LogonType, LogonMethod, Count, UniqueUsers\\n\",\"size\":1,\"aggregation\":3,\"showAnalytics\":true,\"title\":\"Login failure by method\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{SAPWorkspace}\"],\"visualization\":\"areachart\",\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"ResultText\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"dcount_CorrelationId\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"chartSettings\":{\"xAxis\":\"TimeGenerated\",\"yAxis\":[\"UniqueUsers\"],\"group\":\"LogonMethod\"}},\"customWidth\":\"100\",\"name\":\"Login failures by method\"}]},\"name\":\"group failues trends\"}]},\"conditionalVisibility\":{\"parameterName\":\"MainTabSelected\",\"comparison\":\"isEqualTo\",\"value\":\"'Logon Analysis'\"},\"name\":\"Group Logon Failures\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"expandable\":true,\"expanded\":true,\"items\":[{\"type\":1,\"content\":{\"json\":\"----\\n## Audit Log Alerts\\n\\nAn overview of the SAP Audit log events which are watched for. Configuration is based on the \\\"SAP Dynamic Audit Log Monitor Configuration\\\" watchlist. [ Click here for more information ](https://docs.microsoft.com/en-us/azure/sentinel/sap/deployment-solution-configuration#configuring-the-sap-audit-log-monitoring-analytics-rules)\\n### Anomaly detection- filtering out noisy automation activities\\nWe use anomaly detection methods to determine which alerts are caused by automation, allowing us to focus on the events which are anomalous. For the following analysis, we have the \\\"⚠️Anomalous only\\\" option selected by default, meaning the events which are examinedt answer one of the conditions below:\\n1. Events marked as \\\"Deteministic\\\" in the \\\"SAP Dynamic Audit Log Monitor Configuration\\\" watchlist, and have crossed relevant thresholds and exclusion rules.\\n2. Events marked as \\\"AnomaliesOnly\\\" in the \\\"SAP Dynamic Audit Log Monitor Configuration\\\" watchlist, have crossed relevant thresholds and exclusion rules and flagged as anomalous by the algorithm. \\n\\nSetting the the \\\"Audit event types\\\" parameter to \\\"All\\\" will include all audit events, including such that were determined as normal by the anomaly detector.\\n\"},\"name\":\"text - 10\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"e98b7063-b2c7-443b-9613-6364fbded3c7\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"AuditEventsType\",\"label\":\"Audit event types\",\"type\":10,\"isRequired\":true,\"isGlobal\":true,\"typeSettings\":{\"showDefault\":false},\"jsonData\":\"[{ \\\"value\\\": \\\"Anomalous audit event\\\", \\\"label\\\": \\\"⚠️Anomalous only\\\", \\\"selected\\\":true}, { \\\"value\\\": [\\\"Anomalous audit event\\\", \\\"Normal audit event\\\"], \\\"label\\\": \\\"All\\\" }]\",\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"formHorizontal\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"35\",\"name\":\"parameters - Anomaly failed logons\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"** Alert severity trends per System ID **\\r\\n\\r\\n📈High severity\\r\\n〽️ Mediun severity\\r\\n\"},\"name\":\"text - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"\\r\\nlet SelectedSystems= SAPSystems(SelectedSystemRoles=dynamic(\\\"{SystemRoles}\\\")\\r\\n, SelectedSystems=todynamic(\\\"[{Systems}]\\\")\\r\\n, SelectedSystemUsage= dynamic(\\\"{SystemUsage}\\\")) | project SystemID;\\r\\nlet TimeStep= 4h;\\r\\nlet SelectedSeverities=  dynamic([\\\"High\\\", \\\"Medium\\\"]);//can also do//let SelectedSeverities =  dynamic([\\\"All Severities\\\"])\\r\\nlet SelectedRuleTypes= dynamic([ \\\"Deterministic\\\", \\\"AnomaliesOnly\\\"]); // Rule only goes for deterministic alerting\\r\\nlet AuditConfiguration= materialize(SAPAuditLogConfiguration(SelectedSeverities= SelectedSeverities, SelectedRuleTypes= SelectedRuleTypes)\\r\\n| where SystemID in(SelectedSystems)\\r\\n| project MessageID, SystemID, RolesTagsToExclude, Severity, Threshold, RuleType, MessageText, CategoryName);\\r\\n// get special users for exclusion and in-focus analysis\\r\\nlet SAPUsersGottenVIP = (SAPUsersGetVIP | project User = SAPUser, TagsList, SpecialFocusTagged);\\r\\nlet SAPUserRolesAndProfiles = (SAPUsersAssignments | project-keep User, SystemID, DirectRoles, ChildRoles, Profiles | summarize RolesAndProfiles = make_set(array_concat(DirectRoles, ChildRoles, Profiles), 120) by User, SystemID);\\r\\nSAPAuditLog\\r\\n| where SystemID in(SelectedSystems)\\r\\n| where isnotempty( User)\\r\\n| where AlertSeverityText != \\\"Low\\\"\\r\\n| where MessageID in ((AuditConfiguration | summarize count() by MessageID))\\r\\n| lookup kind=inner (AuditConfiguration| project SystemID, MessageID, Severity, Threshold  ) on\\r\\n$left.MessageID == $right.MessageID\\r\\n,$left.SystemID == $right.SystemID\\r\\n| where SelectedSeverities contains Severity\\r\\n| make-series AuditEventsCounts= count() default=0 on TimeGenerated from startofday({TimeRange:start}) to {TimeRange:end} \\r\\nstep TimeStep by SystemID, MessageID, User, Threshold\\r\\n| extend crossedThreshold= series_greater(AuditEventsCounts, repeat(Threshold* TimeStep/1h, array_length(AuditEventsCounts)) )\\r\\n| where array_sum(crossedThreshold) > 0\\r\\n| extend crossedThreshold = array_iif(crossedThreshold,repeat(1, array_length(AuditEventsCounts)) , repeat(0, array_length(AuditEventsCounts)))\\r\\n| lookup SAPUsersGottenVIP on User\\r\\n| lookup SAPUserRolesAndProfiles on User, SystemID\\r\\n| lookup (AuditConfiguration | project-keep SystemID, MessageID, RuleType, RolesTagsToExclude, MessageText, CategoryName, Severity) on MessageID, SystemID\\r\\n| extend RolesProfilesAndTags = array_concat(RolesAndProfiles, TagsList)\\r\\n| extend TagsIntersect = set_intersect(split(RolesTagsToExclude,\\\";\\\"), RolesProfilesAndTags)\\r\\n| extend IntersectionSize = array_length(TagsIntersect)\\r\\n// keep only non-excluded users that are not under \\\"Special Focus\\\"\\r\\n| where IntersectionSize == 0 or isempty(IntersectionSize) or SpecialFocusTagged == true\\r\\n| extend Anomalies= series_decompose_anomalies(AuditEventsCounts, Threshold=4, Test_point= 1)\\r\\n| extend Anomaly= array_index_of(Anomalies,1)>= 0\\r\\n| extend AnomalSeriesIndicator = iff(RuleType==\\\"Deterministic\\\", \\\"Deterministic threshold crossed\\\", iff(Anomaly, 'Anomalous audit event', 'Normal audit event'))\\r\\n| extend UserMessageSystemCount= 1\\r\\n| mv-expand Anomalies to typeof(double), TimeGenerated to typeof(datetime), crossedThreshold to typeof(int )\\r\\n| where (crossedThreshold > 0) and (( RuleType==\\\"Deterministic\\\") or ( RuleType== \\\"AnomaliesOnly\\\" and (Anomalies > 0 or \\\"{AuditEventsType}\\\" contains \\\"All\\\")))\\r\\n| extend AnomalPointIndicator = iff(RuleType==\\\"Deterministic\\\", \\\"Deterministic threshold crossed\\\", \\\"Anomalous audit event\\\")\\r\\n| make-series  AlertCountsHigh= countif(Severity == \\\"High\\\") default=0, AlertCountsMedium= countif(Severity == \\\"Medium\\\") default=0 on TimeGenerated from startofday({TimeRange:start}) to {TimeRange:end} \\r\\nstep TimeStep by SystemID\\r\\n| extend SystemID= iff({DemoMode}, substring(hash_sha1(SystemID), 0, 3), SystemID)\\r\\n| extend Systemlabel= strcat('🛡️', SystemID)\\r\\n//| extend left= \\\"High\\\"\\r\\n//| extend right= \\\"Medium\\\"\\r\\n\\r\\n\\r\\n\",\"size\":1,\"showAnalytics\":true,\"title\":\"Alert severity trends per System ID\",\"timeContextFromParameter\":\"TimeRange\",\"showRefreshButton\":true,\"exportFieldName\":\"series\",\"exportParameterName\":\"Systems\",\"showExportToExcel\":true,\"exportToExcelOptions\":\"all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{SAPWorkspace}\"],\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"Systemlabel\",\"formatter\":1},\"subtitleContent\":{\"columnMatch\":\"AlertCountsHigh\",\"formatter\":9,\"formatOptions\":{\"palette\":\"red\",\"linkColumn\":\"AlertCountsHigh\",\"linkTarget\":\"GenericDetails\",\"linkIsContextBlade\":true},\"tooltipFormat\":{\"tooltip\":\"High severity alerts\"}},\"secondaryContent\":{\"columnMatch\":\"AlertCountsMedium\",\"formatter\":9,\"formatOptions\":{\"palette\":\"yellow\",\"compositeBarSettings\":{\"labelText\":\"\",\"columnSettings\":[{\"columnName\":\"AlertCountsHigh\",\"color\":\"red\"},{\"columnName\":\"AlertCountsMedium\",\"color\":\"yellow\"}]}},\"tooltipFormat\":{\"tooltip\":\"Medium severity alerts {0}\"}},\"showBorder\":false,\"sortCriteriaField\":\"AlertCountsHigh\",\"sortOrderField\":2,\"size\":\"auto\"},\"graphSettings\":{\"type\":0,\"topContent\":{\"columnMatch\":\"SearchKey\",\"formatter\":1},\"centerContent\":{\"columnMatch\":\"DummyJoinField\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"chartSettings\":{\"xAxis\":\"SystemID\",\"yAxis\":[\"UniqueUsers\"],\"group\":\"SystemID\",\"createOtherGroup\":10,\"ySettings\":{\"numberFormatSettings\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"useGrouping\":true}}}}},\"name\":\"Severity trends\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let UsersEmail= SAPUsersEmail\\r\\n| summarize Email= make_set_if(Email,  Email contains_cs \\\"@\\\", 10)[0] by User;\\r\\nlet UsersEventCount= (SecurityAlert\\r\\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, Entities), NumberOfUpdates = count() by SystemAlertId\\r\\n    | mv-expand todynamic(Entities)\\r\\n    | where Entities[\\\"Type\\\"] =~ \\\"account\\\"\\r\\n    | where isnotempty( Entities[\\\"Name\\\"]) and isnotempty( Entities[\\\"UPNSuffix\\\"])\\r\\n    | project UserPrincipalName = strcat(tolower(Entities[\\\"Name\\\"]), \\\"@\\\", tolower(Entities[\\\"UPNSuffix\\\"])), AlertID= SystemAlertId\\r\\n    | join kind=inner (SecurityIncident | mv-expand AlertID= AlertIds to typeof(string ) | project AlertID, IncidentName) on AlertID\\r\\n| summarize IncidentCount= dcount(IncidentName, 2) , AlertCount= dcount(AlertID, 2) by Email= UserPrincipalName);\\r\\nlet RiskyADUsers= todynamic(\\\"\\\"{AzureSuspiciousUsers}\\\"\\\");\\r\\nlet SelectedSystems= SAPSystems(SelectedSystemRoles=dynamic(\\\"{SystemRoles}\\\")\\r\\n, SelectedSystems=todynamic(\\\"[{Systems}]\\\")\\r\\n, SelectedSystemUsage= dynamic(\\\"{SystemUsage}\\\")) | project SystemID;\\r\\nlet TimeStep= 4h;\\r\\nlet SelectedSeverities=  dynamic([\\\"High\\\", \\\"Medium\\\"]);//can also do//let SelectedSeverities =  dynamic([\\\"All Severities\\\"])\\r\\nlet SelectedRuleTypes= dynamic([ \\\"Deterministic\\\", \\\"AnomaliesOnly\\\"]); // Rule only goes for deterministic alerting\\r\\nlet AuditConfiguration= materialize(SAPAuditLogConfiguration(SelectedSeverities= SelectedSeverities, SelectedRuleTypes= SelectedRuleTypes)\\r\\n| where SystemID in(SelectedSystems)\\r\\n| project MessageID, SystemID, RolesTagsToExclude, Severity, Threshold, RuleType, MessageText, CategoryName);\\r\\n// get special users for exclusion and in-focus analysis\\r\\nlet SAPUsersGottenVIP = (SAPUsersGetVIP | project User = SAPUser, TagsList, SpecialFocusTagged);\\r\\nlet SAPUserRolesAndProfiles = (SAPUsersAssignments | project-keep User, SystemID, DirectRoles, ChildRoles, Profiles | summarize RolesAndProfiles = make_set(array_concat(DirectRoles, ChildRoles, Profiles), 120) by User, SystemID);\\r\\nSAPAuditLog\\r\\n| where SystemID in(SelectedSystems)\\r\\n| where isnotempty( User)\\r\\n| where AlertSeverityText != \\\"Low\\\"\\r\\n| where MessageID in ((AuditConfiguration | summarize count() by MessageID))\\r\\n| lookup kind=inner (AuditConfiguration| project SystemID, MessageID, Severity, Threshold  ) on\\r\\n$left.MessageID == $right.MessageID\\r\\n,$left.SystemID == $right.SystemID\\r\\n| where SelectedSeverities contains Severity\\r\\n| make-series AuditEventsCounts= count() default=0 on TimeGenerated from startofday({TimeRange:start}) to {TimeRange:end} \\r\\nstep TimeStep by SystemID, MessageID, User, Threshold\\r\\n| extend crossedThreshold= series_greater(AuditEventsCounts, repeat(Threshold* TimeStep/1h, array_length(AuditEventsCounts)) )\\r\\n| where array_sum(crossedThreshold) > 0\\r\\n| extend crossedThreshold = array_iif(crossedThreshold,repeat(1, array_length(AuditEventsCounts)) , repeat(0, array_length(AuditEventsCounts)))\\r\\n| lookup SAPUsersGottenVIP on User\\r\\n| lookup SAPUserRolesAndProfiles on User, SystemID\\r\\n| lookup (AuditConfiguration | project-keep SystemID, MessageID, RuleType, RolesTagsToExclude, MessageText, CategoryName, Severity) on MessageID, SystemID\\r\\n| extend RolesProfilesAndTags = array_concat(RolesAndProfiles, TagsList)\\r\\n| extend TagsIntersect = set_intersect(split(RolesTagsToExclude,\\\";\\\"), RolesProfilesAndTags)\\r\\n| extend IntersectionSize = array_length(TagsIntersect)\\r\\n// keep only non-excluded users that are not under \\\"Special Focus\\\"\\r\\n| where IntersectionSize == 0 or isempty(IntersectionSize) or SpecialFocusTagged == true\\r\\n| extend Anomalies= series_decompose_anomalies(AuditEventsCounts, Threshold=4, Test_point= 1)\\r\\n| extend Anomaly= array_index_of(Anomalies,1)>= 0\\r\\n| extend AnomalSeriesIndicator = iff(RuleType==\\\"Deterministic\\\", \\\"Deterministic threshold crossed\\\", iff(Anomaly, 'Anomalous audit event', 'Normal audit event'))\\r\\n| extend UserMessageSystemCount= 1\\r\\n| mv-expand Anomalies to typeof(double), TimeGenerated to typeof(datetime), crossedThreshold to typeof(int )\\r\\n| where (crossedThreshold > 0) and (( RuleType==\\\"Deterministic\\\") or ( RuleType== \\\"AnomaliesOnly\\\" and (Anomalies > 0 or \\\"{AuditEventsType}\\\" contains \\\"All\\\")))\\r\\n| extend AnomalPointIndicator = iff(RuleType==\\\"Deterministic\\\", \\\"Deterministic threshold crossed\\\", \\\"Anomalous audit event\\\")\\r\\n| make-series  AlertCountsHigh= countif(Severity == \\\"High\\\") default=0, AlertCountsMedium= countif(Severity == \\\"Medium\\\") default=0 on TimeGenerated from startofday({TimeRange:start}) to {TimeRange:end} \\r\\nstep TimeStep by User\\r\\n| lookup UsersEmail on User\\r\\n| extend Email = iff(isempty(Email), User, Email)\\r\\n| extend Email = iff(isempty(Email), iff({DemoMode}, 'pdemo@seccxpninja.onmicrosoft.com', User), tolower(Email))\\r\\n| extend RiskyADUser = iff(Email in(RiskyADUsers), 'High risk AD user', '')\\r\\n| extend SumOfHigh = array_sum(AlertCountsHigh)*2 + array_sum(AlertCountsMedium)\\r\\n| order by RiskyADUser desc, SumOfHigh desc\\r\\n| extend UserAnom= iff({DemoMode}, substring(hash_sha1(User), 0, 12), User)\\r\\n| extend EmailAnom= iff({DemoMode}, strcat(substring(hash_sha1(User), 0, 12), '@seccxpninja.onmicrosoft.com' ), Email)\\r\\n| project User, UserAnom, AlertCountsHigh , AlertCountsMedium, EmailAnom, Email, RiskyADUser\\r\\n| lookup UsersEventCount on Email\\r\\n| order by RiskyADUser desc, IncidentCount desc, User asc\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Audit trend per user- select a line to see more details\",\"timeContextFromParameter\":\"TimeRange\",\"showRefreshButton\":true,\"exportedParameters\":[{\"fieldName\":\"User\",\"parameterName\":\"SAPUserToCheck\",\"defaultValue\":\" \"},{\"fieldName\":\"Email\",\"parameterName\":\"EntityToCheck\",\"parameterType\":1,\"defaultValue\":\" \"},{\"fieldName\":\"EmailAnom\",\"parameterName\":\"EntityToCheckAnom\",\"parameterType\":1,\"defaultValue\":\" \"}],\"showExportToExcel\":true,\"exportToExcelOptions\":\"all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{SAPWorkspace}\"],\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"User\",\"formatter\":5},{\"columnMatch\":\"UserAnom\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"representation\":\"Person\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"AlertCountsHigh\",\"formatter\":9,\"formatOptions\":{\"palette\":\"red\"}},{\"columnMatch\":\"AlertCountsMedium\",\"formatter\":9,\"formatOptions\":{\"palette\":\"yellow\"}},{\"columnMatch\":\"EmailAnom\",\"formatter\":1,\"formatOptions\":{\"workbookContext\":{\"componentIdSource\":\"workbook\",\"resourceIdsSource\":\"default\",\"templateIdSource\":\"static\",\"templateId\":\"/providers/Microsoft.Insights/workbooks/c4862201-6476-4ffa-909d-791c7d159b54\",\"typeSource\":\"static\",\"type\":\"sentinel\",\"gallerySource\":\"static\",\"gallery\":\"Sentinel\",\"locationSource\":\"default\"}}},{\"columnMatch\":\"Email\",\"formatter\":5},{\"columnMatch\":\"RiskyADUser\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"High risk AD user\",\"representation\":\"disabled\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"Blank\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"IncidentCount\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"0\",\"representation\":\"Blank\",\"text\":\"{0}{1}\"},{\"operator\":\"<\",\"thresholdValue\":\"5\",\"representation\":\"2\",\"text\":\"{0}{1}\"},{\"operator\":\"<\",\"thresholdValue\":\"10\",\"representation\":\"3\",\"text\":\"{0}{1}\"},{\"operator\":\">=\",\"thresholdValue\":\"10\",\"representation\":\"4\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"Blank\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"AlertCount\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"0\",\"representation\":\"Blank\",\"text\":\"{0}{1}\"},{\"operator\":\"<\",\"thresholdValue\":\"5\",\"representation\":\"2\",\"text\":\"{0}{1}\"},{\"operator\":\"<\",\"thresholdValue\":\"10\",\"representation\":\"3\",\"text\":\"{0}{1}\"},{\"operator\":\">=\",\"thresholdValue\":\"10\",\"representation\":\"critical\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"Blank\",\"text\":\"{0}{1}\"}]}}],\"filter\":true,\"labelSettings\":[{\"columnId\":\"UserAnom\",\"label\":\"User\"},{\"columnId\":\"AlertCountsHigh\",\"label\":\"High severity\"},{\"columnId\":\"AlertCountsMedium\",\"label\":\"Medium severity\"},{\"columnId\":\"EmailAnom\",\"label\":\"Email\"},{\"columnId\":\"RiskyADUser\",\"label\":\"AD risk ind.\"},{\"columnId\":\"IncidentCount\",\"label\":\"Incident Count\"},{\"columnId\":\"AlertCount\",\"label\":\"Alert Count\"}]}},\"customWidth\":\"64\",\"showPin\":false,\"name\":\"Audit \",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let EntityToCheck= \\\"{EntityToCheck}\\\";\\r\\nlet EmptySet= datatable(AlertName:string) [\\\"No incidents found\\\"];\\r\\nSecurityIncident\\r\\n| summarize arg_max(TimeGenerated,CreatedTime,Status, Severity, Owner, AdditionalData, IncidentUrl, Comments, Classification,ClassificationReason, ClassificationComment,Labels, Title, AlertIds) by IncidentNumber\\r\\n| where array_length(AlertIds) > 0\\r\\n| extend Tactics = todynamic(AdditionalData.tactics)\\r\\n| extend Owner = todynamic(Owner.assignedTo), IncidentCreated = format_datetime(CreatedTime,'yy-MM-dd HH:mm')\\r\\n| extend Product = todynamic((parse_json(tostring(AdditionalData.alertProductNames))[0]))\\r\\n| extend Tags = extract_all('labelName\\\":\\\"(.*?)\\\"',tostring(Labels))\\r\\n| extend Owner = case(tostring(Owner)==\\\"\\\", \\\"Unassigned\\\",tostring(Owner)), Products = strcat_array(AdditionalData.alertProductNames, \\\", \\\"), Alerts = tostring(AdditionalData.alertsCount), Bookmarks = tostring(AdditionalData.bookmarksCount), Comments = tostring(AdditionalData.commentsCount), Tactics = strcat_array(AdditionalData.tactics, \\\", \\\"), Labels = strcat_array(Tags, \\\", \\\")\\r\\n| mv-expand AlertIds to typeof(string)\\r\\n| join kind=inner \\r\\n(SecurityAlert | search Entities:EntityToCheck\\r\\n| summarize arg_max(TimeGenerated,AlertName, Description, AlertType, Entities) by SystemAlertId) on $left.AlertIds == $right.SystemAlertId\\r\\n| extend HoursAgo= datetime_diff('Hour',now(), TimeGenerated)\\r\\n| project AlertName, IncidentUrl, HoursAgo, TimeGenerated, Status, Severity, Owner, Entities, User= \\\"{EntityToCheckAnom}\\\"\\r\\n| order by TimeGenerated\\r\\n\\r\\n\\r\\n\",\"size\":1,\"title\":\"Incidents/ alerts overiew for user {EntityToCheckAnom}\",\"noDataMessage\":\"Couldn't find any incidents/ alerts for user\",\"noDataMessageStyle\":2,\"showExportToExcel\":true,\"exportToExcelOptions\":\"all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{SAPWorkspace}\"],\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"AlertName\",\"formatter\":1},{\"columnMatch\":\"IncidentUrl\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"Url\",\"linkLabel\":\"Go to incident\"}},{\"columnMatch\":\"HoursAgo\",\"formatter\":5},{\"columnMatch\":\"TimeGenerated\",\"formatter\":6,\"dateFormat\":{\"formatName\":\"shortDateTimePattern\"}},{\"columnMatch\":\"Severity\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"High\",\"representation\":\"Sev0\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Medium\",\"representation\":\"Sev2\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Low\",\"representation\":\"1\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"Unavailable\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"Entities\",\"formatter\":5}],\"labelSettings\":[{\"columnId\":\"AlertName\",\"label\":\"Alert name\"},{\"columnId\":\"IncidentUrl\",\"label\":\"Incident URL\"},{\"columnId\":\"TimeGenerated\",\"label\":\"Created on\"}]}},\"customWidth\":\"70\",\"conditionalVisibility\":{\"parameterName\":\"EntityToCheck\",\"comparison\":\"isNotEqualTo\",\"value\":\" \"},\"showPin\":true,\"name\":\"query - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let starttime = todatetime({TimeRange:start});\\r\\nlet endtime = todatetime({TimeRange:end});\\r\\nlet lookback = totimespan((endtime-starttime)*7);\\r\\n\\r\\nlet auditLookback = starttime - 14d;\\r\\n\\r\\n// User Granted Access and Grants others Access\\r\\n\\r\\nlet opName = dynamic([\\\"Add user\\\", \\\"Invite external user\\\"]);\\r\\n// Helper function to extract relevant fields from AuditLog events\\r\\nlet auditLogEvents = view (startTimeSpan: timespan, operation: dynamic) {\\r\\n    AuditLogs\\r\\n    | where TimeGenerated >= auditLookback\\r\\n    | where OperationName in~ (operation)\\r\\n    | extend ModProps = iff(TargetResources.[0].modifiedProperties != \\\"[]\\\", TargetResources.[0].modifiedProperties, todynamic(\\\"NoValues\\\"))\\r\\n    | extend IpAddress = iff(isnotempty(tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)), \\r\\n        tostring(parse_json(tostring(InitiatedBy.user)).ipAddress), tostring(parse_json(tostring(InitiatedBy.app)).ipAddress))\\r\\n    | extend InitiatedByFull = iff(isnotempty(tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)), \\r\\n        tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName), tostring(parse_json(tostring(InitiatedBy.app)).displayName))\\r\\n    | extend InitiatedBy = replace(\\\"_\\\", \\\"@\\\", tostring(split(InitiatedByFull, \\\"#\\\")[0]))\\r\\n    | extend TargetUserPrincipalName = tostring(TargetResources[0].userPrincipalName)\\r\\n    | extend TargetUserName = replace(\\\"_\\\", \\\"@\\\", tostring(split(TargetUserPrincipalName, \\\"#\\\")[0]))\\r\\n    | extend TargetResourceName = case(\\r\\n        isempty(tostring(TargetResources.[0].displayName)), TargetUserPrincipalName,\\r\\n        isnotempty(tostring(TargetResources.[0].displayName)) and tostring(TargetResources.[0].displayName) startswith \\\"upn:\\\", tolower(tostring(TargetResources.[0].displayName)),\\r\\n        tolower(tostring(TargetResources.[0].displayName))\\r\\n        )\\r\\n    | extend TargetUserName = replace(\\\"_\\\", \\\"@\\\", tostring(split(TargetUserPrincipalName, \\\"#\\\")[0]))\\r\\n    | extend TargetUserName = iff(isempty(TargetUserName), tostring(split(split(TargetResourceName, \\\",\\\")[0], \\\" \\\")[1]), TargetUserName) \\r\\n    | mvexpand ModProps\\r\\n    | extend\\r\\n        PropertyName = tostring(ModProps.displayName),\\r\\n        newValue = replace('\\\\\\\"', '', tostring(ModProps.newValue));\\r\\n};\\r\\n// Assigning time for First TargetUserName that was added\\r\\nlet FirstAdd = auditLogEvents(auditLookback, opName)  \\r\\n    | project FirstAddTimeUtc = TimeGenerated, Type, FirstInitiatedBy = InitiatedBy, IpAddress, FirstTargetUserName = TargetUserName, FirstTargetResourceName = TargetResourceName, \\r\\n        FirstOperationName = OperationName, FirstPropertyName = PropertyName, FirstnewValue = newValue, FirstCorrelationId = CorrelationId, FirstId = Id;\\r\\n// Assigning time for second TargetUserName that was added, which will allow us to see if a first TargetUserName added in is the Initiated by on the second in the later join\\r\\nlet SecondAdd = auditLogEvents(auditLookback, opName)  \\r\\n    | project SecondAddTimeUtc = TimeGenerated, Type, SecondInitiatedBy = InitiatedBy, IpAddress, SecondTargetUserName = TargetUserName, SecondTargetResourceName = TargetResourceName, \\r\\n        SecondOperationName = OperationName, SecondPropertyName = PropertyName, SecondnewValue = newValue, SecondCorrelationId = CorrelationId, SecondId = Id;\\r\\n//  Joining the FirstAdd with SecondAdd where the FirstAdd TargetUserName value matches the SecondAdd InitiatedBy.  This shows the new user adding a user.\\r\\nlet NewUserAddsUser = FirstAdd\\r\\n    | join SecondAdd on $left.FirstTargetUserName == $right.SecondInitiatedBy\\r\\n    // we only want items where the FirstAddTimeUtc is before the SecondAddTimeUtc\\r\\n    | where FirstAddTimeUtc < SecondAddTimeUtc\\r\\n;\\r\\n// Build out some of the properties for context\\r\\nlet UserGrantedGrants=(NewUserAddsUser\\r\\n| extend\\r\\n    FirstnewValue = split(FirstnewValue, \\\";\\\"),\\r\\n    SecondnewValue = split(SecondnewValue, \\\";\\\")\\r\\n| extend PropertyUpdate = pack(FirstPropertyName, FirstnewValue, SecondPropertyName, SecondnewValue, \\\"FirstCorrelationId\\\", FirstCorrelationId, \\\"FirstId\\\", FirstId, \\\"SecondCorrelationId\\\", SecondCorrelationId, \\\"SecondId\\\", SecondId)\\r\\n| summarize PropertyUpdateSet = make_bag(PropertyUpdate)\\r\\n    by FirstAddTimeUtc, FirstInitiatedBy, FirstTargetUserName, SecondAddTimeUtc, SecondInitiatedBy, SecondTargetUserName, \\r\\n    IpAddress, FirstTargetResourceName, SecondTargetResourceName, FirstOperationName, SecondOperationName\\r\\n| extend\\r\\n    timestamp = FirstAddTimeUtc,\\r\\n    AccountCustomEntity = FirstInitiatedBy,\\r\\n    HostCustomEntity = FirstTargetResourceName,\\r\\n    IPCustomEntity = IpAddress\\r\\n    | extend UserPrincipalName= SecondTargetUserName)\\r\\n    | extend Risk= 'User Granted Access and Grants others Access';\\r\\n\\r\\n// Anomalous sign-in location by user account and authenticating application - with sign-in details\\r\\nlet AnomalSiginLocAuth= (SigninLogs \\r\\n| where TimeGenerated  > starttime\\r\\n| extend  locationString= strcat(tostring(LocationDetails[\\\"countryOrRegion\\\"]), \\\"/\\\", \\r\\ntostring(LocationDetails[\\\"state\\\"]), \\\"/\\\", tostring(LocationDetails[\\\"city\\\"]), \\\";\\\") \\r\\n| project TimeGenerated, AppDisplayName , UserPrincipalName, locationString \\r\\n// Create time series \\r\\n| make-series dLocationCount = dcount(locationString) on TimeGenerated step 1d \\r\\nby UserPrincipalName, AppDisplayName \\r\\n// Compute best fit line for each entry \\r\\n| extend (RSquare,Slope,Variance,RVariance,Interception,LineFit)=series_fit_line(dLocationCount) \\r\\n// Chart the 3 most interesting lines  \\r\\n// A 0-value slope corresponds to an account being completely stable over time for a given Azure Active Directory application\\r\\n| top 3 by Slope desc  \\r\\n// Extract the set of locations for each top user:\\r\\n| join kind=inner (SigninLogs\\r\\n| extend  locationString= strcat(tostring(LocationDetails[\\\"countryOrRegion\\\"]), \\\"/\\\", \\r\\ntostring(LocationDetails[\\\"state\\\"]), \\\"/\\\", tostring(LocationDetails[\\\"city\\\"]), \\\";\\\")\\r\\n| summarize locationList = makeset(locationString), threeDayWindowLocationCount=dcount(locationString) by AppDisplayName, UserPrincipalName, \\r\\ntimerange=bin(TimeGenerated, 3d)) on AppDisplayName, UserPrincipalName\\r\\n| order by UserPrincipalName, timerange asc\\r\\n| project timerange, AppDisplayName , UserPrincipalName, threeDayWindowLocationCount, locationList \\r\\n| order by AppDisplayName, UserPrincipalName, timerange asc\\r\\n| extend timestamp = timerange, AccountCustomEntity = UserPrincipalName)\\r\\n| extend Risk= 'Anomalous sign-in location by user account and authenticating application';\\r\\n\\r\\n\\r\\n// Failed service logon attempt by user account with available AuditData\\r\\nlet failLimit = 10;\\r\\nlet ipLimit = 3;\\r\\nlet failedSignins = SigninLogs\\r\\n| where TimeGenerated between(starttime..endtime)\\r\\n| where ResultType != \\\"0\\\" and AppDisplayName != \\\"Windows Sign In\\\"\\r\\n| extend UserPrincipalName = tolower(UserPrincipalName)\\r\\n| extend CityState = strcat(tostring(LocationDetails.city),\\\"|\\\", tostring(LocationDetails.state))\\r\\n| extend Result = strcat(ResultType,\\\"-\\\",ResultDescription)\\r\\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), DistinctIPAddressCount = dcount(IPAddress), IPAddresses = makeset(IPAddress),\\r\\nCityStates = makeset(CityState), DistinctResultCount = dcount(Result), Results = makeset(Result), AppDisplayNames = makeset(AppDisplayName),\\r\\nFailedLogonCount = count() by Type, OperationName, Category, UserPrincipalName = tolower(UserPrincipalName), ClientAppUsed, Location, CorrelationId\\r\\n| project Type, StartTimeUtc, EndTimeUtc, OperationName, Category, UserPrincipalName, AppDisplayNames, DistinctIPAddressCount, IPAddresses, DistinctResultCount,\\r\\nResults, FailedLogonCount, Location, CityStates\\r\\n| where FailedLogonCount >= failLimit or DistinctIPAddressCount >= ipLimit\\r\\n| extend Activity = pack(\\\"IPAddresses\\\", IPAddresses, \\\"AppDisplayNames\\\", AppDisplayNames, \\\"Results\\\", Results, \\\"Location\\\", Location, \\\"CityStates\\\", CityStates)\\r\\n| project Type, StartTimeUtc, EndTimeUtc, OperationName, Category, UserPrincipalName, FailedLogonCount, DistinctIPAddressCount, DistinctResultCount, Activity\\r\\n| extend AccountCustomEntity = UserPrincipalName;\\r\\nlet accountMods = AuditLogs | where TimeGenerated >= auditLookback\\r\\n| where Category == \\\"UserManagement\\\" or Category == \\\"GroupManagement\\\"\\r\\n| extend ModProps = TargetResources.[0].modifiedProperties\\r\\n| extend InitiatedBy = case(\\r\\nisnotempty(tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)), tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName),\\r\\nisnotempty(tostring(parse_json(tostring(InitiatedBy.app)).displayName)), tostring(parse_json(tostring(InitiatedBy.app)).displayName),\\r\\n\\\"\\\")\\r\\n| extend UserPrincipalName = tolower(tostring(TargetResources.[0].userPrincipalName))\\r\\n| mvexpand ModProps\\r\\n| extend PropertyName = tostring(ModProps.displayName), oldValue = tostring(ModProps.oldValue), newValue = tostring(ModProps.newValue)\\r\\n| extend ModifiedProps = pack(\\\"PropertyName\\\",PropertyName,\\\"oldValue\\\",oldValue,\\\"newValue\\\",newValue)\\r\\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), Activity = make_bag(ModifiedProps) by Type, InitiatedBy, UserPrincipalName, Category, OperationName, CorrelationId, Id\\r\\n| extend AccountCustomEntity = UserPrincipalName, timestamp= StartTimeUtc;\\r\\n// Gather only Audit data for UserPrincipalNames that we have Audit data for\\r\\nlet accountNameOnly = failedSignins | project UserPrincipalName;\\r\\nlet auditMods = accountNameOnly\\r\\n| join kind= innerunique (\\r\\naccountMods\\r\\n) on UserPrincipalName;\\r\\nlet availableAudits = auditMods | project UserPrincipalName;\\r\\nlet signinsWithAudit = availableAudits\\r\\n| join kind= innerunique (\\r\\nfailedSignins\\r\\n) on UserPrincipalName;\\r\\n// Union the Current Signin failures so we do not lose them with the Auditing data we do have\\r\\nlet activity = (union isfuzzy=true\\r\\nsigninsWithAudit, auditMods)\\r\\n| order by StartTimeUtc, UserPrincipalName;\\r\\n\\r\\nlet FailedServiceLogon= (activity\\r\\n| project StartTimeUtc, EndTimeUtc, DataType = Type, Category, OperationName, UserPrincipalName, InitiatedBy, Activity, FailedLogonCount, DistinctIPAddressCount, DistinctResultCount, CorrelationId, Id\\r\\n| order by UserPrincipalName, StartTimeUtc\\r\\n| extend timestamp = StartTimeUtc, AccountCustomEntity = UserPrincipalName)\\r\\n| extend Risk= 'Failed service logon attempt by user account with available AuditData';\\r\\n\\r\\nUserGrantedGrants | union AnomalSiginLocAuth, FailedServiceLogon\\r\\n| where UserPrincipalName =~ \\\"{EntityToCheck}\\\" or FirstInitiatedBy=~ \\\"{EntityToCheck}\\\" or FirstTargetUserName=~ \\\"{EntityToCheck}\\\" or SecondInitiatedBy=~ \\\"{EntityToCheck}\\\" or SecondTargetUserName=~ \\\"{EntityToCheck}\\\"\\r\\n| project Risk, timestamp, ExtendedDetails= pack_all(true)\\r\\n| order by Risk\\r\\n\",\"size\":1,\"title\":\"Azure audit and sigin risks for user {EntityToCheckAnom}\",\"noDataMessage\":\"No Azure AD and SignIns anomalies found\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{ADWorkspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"$gen_group\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"155ch\"}},{\"columnMatch\":\"Risk\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"300ch\"}},{\"columnMatch\":\"timestamp\",\"formatter\":6,\"dateFormat\":{\"formatName\":\"shortDateTimePattern\"}},{\"columnMatch\":\"ExtendedDetails\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"300ch\"}},{\"columnMatch\":\"$gen_group\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"155ch\"}}],\"filter\":true,\"hierarchySettings\":{\"treeType\":1,\"groupBy\":[\"Risk\",\"ExtendedDetails\"],\"expandTopLevel\":false},\"labelSettings\":[{\"columnId\":\"timestamp\",\"label\":\"Date and time\"},{\"columnId\":\"ExtendedDetails\",\"label\":\"Extended details\"}]}},\"conditionalVisibility\":{\"parameterName\":\"EntityToCheck\",\"comparison\":\"isNotEqualTo\",\"value\":\" \"},\"showPin\":false,\"name\":\"Azure AD risks\"}]},\"name\":\"Event anomalies\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let SelectedSystems= SAPSystems(SelectedSystemRoles=dynamic(\\\"{SystemRoles}\\\")\\n, SelectedSystems=todynamic(\\\"[{Systems}]\\\")\\n, SelectedSystemUsage= dynamic(\\\"{SystemUsage}\\\")) | project SystemID, SystemRole;\\nlet TimeStep= 4h;\\nlet SelectedSeverities=  dynamic([\\\"High\\\", \\\"Medium\\\"]);//can also do//let SelectedSeverities =  dynamic([\\\"All Severities\\\"])\\nlet SelectedRuleTypes= dynamic([ \\\"Deterministic\\\", \\\"AnomaliesOnly\\\"]); // Rule only goes for deterministic alerting\\nlet AuditConfiguration= materialize(SAPAuditLogConfiguration(SelectedSeverities= SelectedSeverities, SelectedRuleTypes= SelectedRuleTypes)\\n| where SystemID in((SelectedSystems | project SystemID))\\n| project MessageID, SystemID, RolesTagsToExclude, Severity, Threshold, RuleType);\\n// get special users for exclusion and in-focus analysis\\nlet SAPUsersGottenVIP = (SAPUsersGetVIP | project User = SAPUser, TagsList, SpecialFocusTagged);\\nlet SAPUserRolesAndProfiles = (SAPUsersAssignments | project-keep User, SystemID, DirectRoles, ChildRoles, Profiles | summarize RolesAndProfiles = make_set(array_concat(DirectRoles, ChildRoles, Profiles), 120) by User, SystemID);\\nlet RelevantEvents =SAPAuditLog\\n| where SystemID in((SelectedSystems | project SystemID))\\n| where isnotempty( User)\\n| where AlertSeverityText != \\\"Low\\\"\\n| where MessageID in ((AuditConfiguration | summarize count() by MessageID))\\n| lookup kind=inner (AuditConfiguration| project SystemID, MessageID, Severity, Threshold  ) on\\n$left.MessageID == $right.MessageID\\n,$left.SystemID == $right.SystemID\\n| where SelectedSeverities contains Severity\\n| make-series AuditEventsCounts= count() default=0 on TimeGenerated from startofday({TimeRange:start}) to {TimeRange:end} \\nstep TimeStep by SystemID, MessageID, User, Threshold;\\nRelevantEvents \\n| extend crossedThreshold= series_greater(AuditEventsCounts, repeat(Threshold* TimeStep/1h, array_length(AuditEventsCounts)) )\\n| where array_sum(crossedThreshold) > 0\\n| extend crossedThreshold = array_iif(crossedThreshold,repeat(1, array_length(AuditEventsCounts)) , repeat(0, array_length(AuditEventsCounts)))\\n| lookup SAPUsersGottenVIP on User\\n| lookup SAPUserRolesAndProfiles on User, SystemID\\n| lookup (AuditConfiguration | project-keep SystemID, MessageID, RuleType, RolesTagsToExclude,  Severity) on MessageID, SystemID\\n| extend RolesProfilesAndTags = array_concat(RolesAndProfiles, TagsList)\\n| extend TagsIntersect = set_intersect(split(RolesTagsToExclude,\\\";\\\"), RolesProfilesAndTags)\\n| extend IntersectionSize = array_length(TagsIntersect)\\n// keep only non-excluded users that are not under \\\"Special Focus\\\"\\n| where IntersectionSize == 0 or isempty(IntersectionSize) or SpecialFocusTagged == true\\n| extend Anomalies= series_decompose_anomalies(AuditEventsCounts, Threshold=4, Test_point= 1)\\n| extend Anomaly= array_index_of(Anomalies,1)>= 0\\n| extend AnomalSeriesIndicator = iff(RuleType==\\\"Deterministic\\\", \\\"Deterministic threshold crossed\\\", iff(Anomaly, 'Anomalous audit event', 'Normal audit event'))\\n| mv-expand Anomalies to typeof(double), TimeGenerated to typeof(datetime), crossedThreshold to typeof(int )\\n| where (crossedThreshold > 0) and (( RuleType==\\\"Deterministic\\\") or ( RuleType== \\\"AnomaliesOnly\\\" and (Anomalies > 0 or \\\"{AuditEventsType}\\\" contains \\\"All\\\")))\\n| summarize SuspiciousScore= floor((countif(Severity==\\\"High\\\") + countif(Severity==\\\"Medium\\\")*0.5),1) by SystemID\\n| join kind= fullouter (RelevantEvents | summarize ActivityScore= count() by SystemID) on SystemID\\n| lookup SelectedSystems on SystemID\\n| extend SystemRole= iff(isempty(SystemRole), '⚠️Misconfigured Systems',SystemRole)\\n| extend RiskScore = floor(100*(SuspiciousScore/ ActivityScore),1)\\n| project SystemID= SystemID1, SystemRole, SuspiciousScore, ActivityScore, RiskScore\\n| extend SAPUserToCheckAlerts = 'No User Selected'\\n| extend SystemID2= iff({DemoMode}, substring(hash_sha1(SystemID), 0, 3), SystemID)\\n\\n\\n\\n\\n\\n\\n\\n\",\"size\":3,\"showAnalytics\":true,\"title\":\"Risk score per system- select a system to search for events\",\"timeContextFromParameter\":\"TimeRange\",\"timeBrushParameterName\":\"BrushedTimeRange\",\"timeBrushExportOnlyWhenBrushed\":true,\"exportedParameters\":[{\"fieldName\":\"SystemID\",\"parameterName\":\"SystemIDFromHiveAlerts\",\"defaultValue\":\"'All Systems'\"},{\"fieldName\":\"SAPUserToCheckAlerts\",\"parameterName\":\"SAPUserToCheckAlerts\",\"parameterType\":1,\"defaultValue\":\"'No User Selected'\"},{\"fieldName\":\"SystemID2\",\"parameterName\":\"SystemID2FromHiveAlerts\",\"parameterType\":1,\"defaultValue\":\"'All Systems'\"}],\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{SAPWorkspace}\"],\"visualization\":\"graph\",\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"ResultText\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"dcount_CorrelationId\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"graphSettings\":{\"type\":2,\"topContent\":{\"columnMatch\":\"SystemID2\",\"formatter\":12,\"formatOptions\":{\"palette\":\"blue\"}},\"centerContent\":{\"columnMatch\":\"SuspiciousScore\",\"formatter\":1,\"tooltipFormat\":{\"tooltip\":\"Number of unique failing users {0}\"}},\"bottomContent\":{\"columnMatch\":\"RiskScore\",\"formatter\":1,\"tooltipFormat\":{\"tooltip\":\"Rate of logon failure {0} %\"}},\"hivesContent\":{\"columnMatch\":\"SystemRole\",\"formatter\":12,\"formatOptions\":{\"palette\":\"blue\"}},\"nodeIdField\":\"SystemID\",\"sourceIdField\":\"SystemRole\",\"targetIdField\":\"SystemID\",\"graphOrientation\":3,\"showOrientationToggles\":false,\"staticNodeSize\":70,\"colorSettings\":{\"nodeColorField\":\"RiskScore\",\"type\":4,\"heatmapPalette\":\"greenRed\",\"emptyValueColor\":\"green\"},\"groupByField\":\"SystemRole\",\"hivesMargin\":5},\"chartSettings\":{\"xAxis\":\"TimeGenerated\",\"yAxis\":[\"Count\"],\"group\":\"MessageClass\",\"showLegend\":true},\"mapSettings\":{\"locInfo\":\"LatLong\",\"sizeSettings\":\"UniqueUsers\",\"sizeAggregation\":\"Sum\",\"legendMetric\":\"UniqueUsers\",\"legendAggregation\":\"Sum\",\"itemColorSettings\":{\"type\":\"heatmap\",\"colorAggregation\":\"Sum\",\"nodeColorField\":\"UniqueUsers\",\"heatmapPalette\":\"greenRed\"}}},\"customWidth\":\"100\",\"name\":\"SuccessFailurebyRole\",\"styleSettings\":{\"maxWidth\":\"100\",\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"\\r\\nlet SelectedSystems= SAPSystems(SelectedSystemRoles=dynamic(\\\"{SystemRoles}\\\")\\r\\n, SelectedSystems=todynamic(\\\"[{Systems}]\\\")\\r\\n, SelectedSystemUsage= dynamic(\\\"{SystemUsage}\\\")) | project SystemID, SystemRole;\\r\\nlet TimeStep= 4h;\\r\\nlet SelectedSeverities=  dynamic([\\\"High\\\", \\\"Medium\\\"]);//can also do//let SelectedSeverities =  dynamic([\\\"All Severities\\\"])\\r\\nlet SelectedRuleTypes= dynamic([ \\\"Deterministic\\\", \\\"AnomaliesOnly\\\"]); // Rule only goes for deterministic alerting\\r\\nlet AuditConfiguration= materialize(SAPAuditLogConfiguration(SelectedSeverities= SelectedSeverities, SelectedRuleTypes= SelectedRuleTypes)\\r\\n| where SystemID in((SelectedSystems | project SystemID))\\r\\n| project MessageID, SystemID, RolesTagsToExclude, Severity, Threshold, RuleType, CategoryName, DetailedDescription);\\r\\n// get special users for exclusion and in-focus analysis\\r\\nlet SAPUsersGottenVIP = (SAPUsersGetVIP | project User = SAPUser, TagsList, SpecialFocusTagged);\\r\\nlet SAPUserRolesAndProfiles = (SAPUsersAssignments | project-keep User, SystemID, DirectRoles, ChildRoles, Profiles | summarize RolesAndProfiles = make_set(array_concat(DirectRoles, ChildRoles, Profiles), 120) by User, SystemID);\\r\\nlet UsersEmail= SAPUsersEmail\\r\\n| summarize Email= make_set_if(Email,  Email contains_cs \\\"@\\\", 10)[0] by User;\\r\\nlet RelevantEvents =SAPAuditLog\\r\\n| where SystemID == \\\"{SystemIDFromHiveAlerts}\\\"\\r\\n| where isnotempty( User)\\r\\n| where AlertSeverityText != \\\"Low\\\"\\r\\n| where MessageID in ((AuditConfiguration | summarize count() by MessageID))\\r\\n| lookup kind=inner (AuditConfiguration| project SystemID, MessageID, Severity, Threshold  ) on\\r\\n$left.MessageID == $right.MessageID\\r\\n,$left.SystemID == $right.SystemID\\r\\n| where SelectedSeverities contains Severity\\r\\n| make-series AuditEventsCounts= count() default=0 on TimeGenerated from startofday({TimeRange:start}) to {TimeRange:end} \\r\\nstep TimeStep by SystemID, MessageID, User, Threshold;\\r\\nRelevantEvents \\r\\n| extend crossedThreshold= series_greater(AuditEventsCounts, repeat(Threshold* TimeStep/1h, array_length(AuditEventsCounts)) )\\r\\n| where array_sum(crossedThreshold) > 0\\r\\n| extend crossedThreshold = array_iif(crossedThreshold,repeat(1, array_length(AuditEventsCounts)) , repeat(0, array_length(AuditEventsCounts)))\\r\\n| lookup SAPUsersGottenVIP on User\\r\\n| lookup SAPUserRolesAndProfiles on User, SystemID\\r\\n| lookup (AuditConfiguration | project-keep SystemID, MessageID, RuleType, RolesTagsToExclude,  Severity) on MessageID, SystemID\\r\\n| extend RolesProfilesAndTags = array_concat(RolesAndProfiles, TagsList)\\r\\n| extend TagsIntersect = set_intersect(split(RolesTagsToExclude,\\\";\\\"), RolesProfilesAndTags)\\r\\n| extend IntersectionSize = array_length(TagsIntersect)\\r\\n// keep only non-excluded users that are not under \\\"Special Focus\\\"\\r\\n| where IntersectionSize == 0 or isempty(IntersectionSize) or SpecialFocusTagged == true\\r\\n| extend Anomalies= series_decompose_anomalies(AuditEventsCounts, Threshold=4, Test_point= 1)\\r\\n| extend Anomaly= array_index_of(Anomalies,1)>= 0\\r\\n| extend AnomalSeriesIndicator = iff(RuleType==\\\"Deterministic\\\", \\\"Deterministic threshold crossed\\\", iff(Anomaly, 'Anomalous audit event', 'Normal audit event'))\\r\\n| mv-expand Anomalies to typeof(double), TimeGenerated to typeof(datetime), crossedThreshold to typeof(int )\\r\\n| where (crossedThreshold > 0) and (( RuleType==\\\"Deterministic\\\") or ( RuleType== \\\"AnomaliesOnly\\\" and (Anomalies > 0 or \\\"{AuditEventsType}\\\" contains \\\"All\\\")))\\r\\n| project User, MessageID, StartOfDay= startofday( TimeGenerated)\\r\\n| join kind= rightsemi (RelevantEvents | project MessageID, User, TimeGenerated, AuditEventsCounts) on User, MessageID\\r\\n| lookup (AuditConfiguration | where SystemID == \\\"{SystemIDFromHiveAlerts}\\\") on MessageID\\r\\n| project User, AuditEventsCounts, Severity, CategoryName, DetailedDescription, ArraySum= array_sum(AuditEventsCounts)\\r\\n| lookup UsersEmail on User\\r\\n| extend Email = iff(isempty(Email), User, Email)\\r\\n| order by ArraySum desc\\r\\n| extend User= iff({DemoMode}, substring(hash_sha1(User), 0, 12), User)\\r\\n| extend Email= iff({DemoMode}, strcat(substring(hash_sha1(User), 0, 12), '@seccxpninja.onmicrosoft.com' ), Email)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"SAP events for system {SystemID2FromHiveAlerts}- click a line to search for relevant incidents\",\"noDataMessage\":\"No events found the selected system\",\"noDataMessageStyle\":2,\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"Email\",\"exportParameterName\":\"SAPUserToCheckAlerts\",\"exportDefaultValue\":\"'No User Selected'\",\"showExportToExcel\":true,\"exportToExcelOptions\":\"all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{SAPWorkspace}\"],\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"User\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"representation\":\"Person\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"AuditEventsCounts\",\"formatter\":9,\"formatOptions\":{\"palette\":\"red\"}},{\"columnMatch\":\"Severity\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"High\",\"representation\":\"Sev1\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Medium\",\"representation\":\"Sev2\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"success\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"ArraySum\",\"formatter\":5}],\"filter\":true,\"labelSettings\":[{\"columnId\":\"AuditEventsCounts\",\"label\":\"Event trend\"},{\"columnId\":\"CategoryName\",\"label\":\"Event category\"},{\"columnId\":\"DetailedDescription\",\"label\":\"Detailed Description\"},{\"columnId\":\"Email\",\"label\":\"User Email\"}]}},\"customWidth\":\"80\",\"conditionalVisibility\":{\"parameterName\":\"SystemIDFromHiveAlerts\",\"comparison\":\"isNotEqualTo\",\"value\":\"'All Systems'\"},\"name\":\"EventsUsersperSystem\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let EntityToCheck= \\\"{SAPUserToCheckAlerts}\\\";\\r\\nlet EmptySet= datatable(AlertName:string) [\\\"No incidents found\\\"];\\r\\nSecurityIncident\\r\\n| summarize arg_max(TimeGenerated,CreatedTime,Status, Severity, Owner, AdditionalData, IncidentUrl, Comments, Classification,ClassificationReason, ClassificationComment,Labels, Title, AlertIds) by IncidentNumber\\r\\n| where array_length(AlertIds) > 0\\r\\n| extend Tactics = todynamic(AdditionalData.tactics)\\r\\n| extend Owner = todynamic(Owner.assignedTo), IncidentCreated = format_datetime(CreatedTime,'yy-MM-dd HH:mm')\\r\\n| extend Product = todynamic((parse_json(tostring(AdditionalData.alertProductNames))[0]))\\r\\n| extend Tags = extract_all('labelName\\\":\\\"(.*?)\\\"',tostring(Labels))\\r\\n| extend Owner = case(tostring(Owner)==\\\"\\\", \\\"Unassigned\\\",tostring(Owner)), Products = strcat_array(AdditionalData.alertProductNames, \\\", \\\"), Alerts = tostring(AdditionalData.alertsCount), Bookmarks = tostring(AdditionalData.bookmarksCount), Comments = tostring(AdditionalData.commentsCount), Tactics = strcat_array(AdditionalData.tactics, \\\", \\\"), Labels = strcat_array(Tags, \\\", \\\")\\r\\n| mv-expand AlertIds to typeof(string)\\r\\n| join kind=inner \\r\\n(SecurityAlert | search Entities:EntityToCheck\\r\\n| summarize arg_max(TimeGenerated,AlertName, Description, AlertType, Entities) by SystemAlertId) on $left.AlertIds == $right.SystemAlertId\\r\\n| extend HoursAgo= datetime_diff('Hour',now(), TimeGenerated)\\r\\n| project AlertName, IncidentUrl, HoursAgo, TimeGenerated, Status, Severity, Owner, Entities, User= EntityToCheck\\r\\n| order by TimeGenerated\\r\\n\\r\\n\",\"size\":0,\"title\":\"Incidents/ alerts overiew for user {SAPUserToCheckAlerts}\",\"noDataMessage\":\"Couldn't find any incidents/ alerts for user\",\"noDataMessageStyle\":2,\"showExportToExcel\":true,\"exportToExcelOptions\":\"all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{SAPWorkspace}\"],\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"AlertName\",\"formatter\":1},{\"columnMatch\":\"IncidentUrl\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"Url\",\"linkLabel\":\"Go to incident\"}},{\"columnMatch\":\"HoursAgo\",\"formatter\":5},{\"columnMatch\":\"TimeGenerated\",\"formatter\":6,\"dateFormat\":{\"formatName\":\"shortDateTimePattern\"}},{\"columnMatch\":\"Severity\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"High\",\"representation\":\"Sev0\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Medium\",\"representation\":\"Sev2\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Low\",\"representation\":\"1\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"Unavailable\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"Entities\",\"formatter\":5}],\"labelSettings\":[{\"columnId\":\"AlertName\",\"label\":\"Alert name\"},{\"columnId\":\"IncidentUrl\",\"label\":\"Incident URL\"},{\"columnId\":\"TimeGenerated\",\"label\":\"Created on\"}]}},\"customWidth\":\"50\",\"conditionalVisibility\":{\"parameterName\":\"SAPUserToCheckAlerts\",\"comparison\":\"isNotEqualTo\",\"value\":\"'No User Selected'\"},\"showPin\":true,\"name\":\"query - 1\"}]},\"customWidth\":\"100\",\"name\":\"group events drill\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let SelectedSystems= SAPSystems(SelectedSystemRoles=dynamic(\\\"{SystemRoles}\\\")\\n, SelectedSystems=todynamic(\\\"[{Systems}]\\\")\\n, SelectedSystemUsage= dynamic(\\\"{SystemUsage}\\\")) | project SystemID, SystemRole;\\nlet TimeStep= 4h;\\nlet SelectedSeverities=  dynamic([\\\"High\\\", \\\"Medium\\\"]);//can also do//let SelectedSeverities =  dynamic([\\\"All Severities\\\"])\\nlet SelectedRuleTypes= dynamic([ \\\"Deterministic\\\", \\\"AnomaliesOnly\\\"]); // Rule only goes for deterministic alerting\\nlet AuditConfiguration= materialize(SAPAuditLogConfiguration(SelectedSeverities= SelectedSeverities, SelectedRuleTypes= SelectedRuleTypes)\\n| where SystemID in((SelectedSystems | project SystemID))\\n| project MessageID, SystemID, RolesTagsToExclude, Severity, Threshold, RuleType, Tactics);\\n// get special users for exclusion and in-focus analysis\\nlet SAPUsersGottenVIP = (SAPUsersGetVIP | project User = SAPUser, TagsList, SpecialFocusTagged);\\nlet SAPUserRolesAndProfiles = (SAPUsersAssignments | project-keep User, SystemID, DirectRoles, ChildRoles, Profiles | summarize RolesAndProfiles = make_set(array_concat(DirectRoles, ChildRoles, Profiles), 120) by User, SystemID);\\nlet RelevantEvents =SAPAuditLog\\n| where SystemID in((SelectedSystems | project SystemID))\\n| where isnotempty( User)\\n| where AlertSeverityText != \\\"Low\\\"\\n| where MessageID in ((AuditConfiguration | summarize count() by MessageID))\\n| lookup kind=inner (AuditConfiguration| project SystemID, MessageID, Severity, Threshold  ) on\\n$left.MessageID == $right.MessageID\\n,$left.SystemID == $right.SystemID\\n| where SelectedSeverities contains Severity\\n| make-series AuditEventsCounts= count() default=0 on TimeGenerated from startofday({TimeRange:start}) to {TimeRange:end} \\nstep TimeStep by SystemID, MessageID, User, Threshold;\\nRelevantEvents \\n| extend crossedThreshold= series_greater(AuditEventsCounts, repeat(Threshold* TimeStep/1h, array_length(AuditEventsCounts)) )\\n| where array_sum(crossedThreshold) > 0\\n| extend crossedThreshold = array_iif(crossedThreshold,repeat(1, array_length(AuditEventsCounts)) , repeat(0, array_length(AuditEventsCounts)))\\n| lookup SAPUsersGottenVIP on User\\n| lookup SAPUserRolesAndProfiles on User, SystemID\\n| lookup (AuditConfiguration | project-keep SystemID, MessageID, RuleType, RolesTagsToExclude,  Severity) on MessageID, SystemID\\n| extend RolesProfilesAndTags = array_concat(RolesAndProfiles, TagsList)\\n| extend TagsIntersect = set_intersect(split(RolesTagsToExclude,\\\";\\\"), RolesProfilesAndTags)\\n| extend IntersectionSize = array_length(TagsIntersect)\\n// keep only non-excluded users that are not under \\\"Special Focus\\\"\\n| where IntersectionSize == 0 or isempty(IntersectionSize) or SpecialFocusTagged == true\\n| extend Anomalies= series_decompose_anomalies(AuditEventsCounts, Threshold=4, Test_point= 1)\\n| extend Anomaly= array_index_of(Anomalies,1)>= 0\\n| extend AnomalSeriesIndicator = iff(RuleType==\\\"Deterministic\\\", \\\"Deterministic threshold crossed\\\", iff(Anomaly, 'Anomalous audit event', 'Normal audit event'))\\n| mv-expand Anomalies to typeof(double), TimeGenerated to typeof(datetime), crossedThreshold to typeof(int )\\n| where (crossedThreshold > 0) and (( RuleType==\\\"Deterministic\\\") or ( RuleType== \\\"AnomaliesOnly\\\" and (Anomalies > 0 or \\\"{AuditEventsType}\\\" contains \\\"All\\\")))\\n| lookup (AuditConfiguration | project-keep SystemID, MessageID, Tactics) on MessageID, SystemID\\n// handle multiple tactics per event\\n| extend SeperatedTactics= split(replace_string(Tactics, \\\"; \\\", \\\";\\\"), \\\";\\\")\\n| mv-expand SeperatedTactics\\n// make sure first char of tactics is capitalized \\n| extend Tactics= strcat(toupper(substring(tostring(SeperatedTactics), 0,1)), substring(tostring(SeperatedTactics), 1)) \\n| extend Tactics= replace_string(Tactics, \\\"Nan\\\", \\\"\\\")\\n| summarize SuspiciousCount= floor((countif(Severity==\\\"High\\\") + countif(Severity==\\\"Medium\\\")*0.5),1) by Tactics\\n\\n\\n\\n\\n\\n\",\"size\":4,\"aggregation\":3,\"showAnalytics\":true,\"title\":\"Event by MITRE ATT&CK® tactics\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{SAPWorkspace}\"],\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"Tactics\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"Credential Access\",\"representation\":\"Credential Access\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Initial Access\",\"representation\":\"Initial_Access\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Impact\",\"representation\":\"Impact\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Reconnaissance\",\"representation\":\"Discovery\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Exfiltration\",\"representation\":\"Exfiltration\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Lateral Movement\",\"representation\":\"Lateral_Movement\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Defense Evasion\",\"representation\":\"Defense Evasion\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Execution\",\"representation\":\"Execution\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Resource Development\",\"representation\":\"resource\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"impact\",\"representation\":\"Impact\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Privilege Escalation\",\"representation\":\"Privilege Escalation\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"1\",\"text\":\"{0}{1}\"}]}},\"leftContent\":{\"columnMatch\":\"SuspiciousCount\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"showBorder\":false,\"sortCriteriaField\":\"SuspiciousCount\",\"sortOrderField\":2,\"size\":\"auto\"},\"graphSettings\":{\"type\":0,\"topContent\":{\"columnMatch\":\"Tactics\",\"formatter\":1},\"centerContent\":{\"columnMatch\":\"SuspiciousCount\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"chartSettings\":{\"xAxis\":\"TimeGenerated\",\"yAxis\":[\"SuspiciousCount\"],\"group\":\"Tactics\",\"showLegend\":true}},\"customWidth\":\"100\",\"name\":\"Events by MITRE ATT&CK tactics\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let SelectedSystems= SAPSystems(SelectedSystemRoles=dynamic(\\\"{SystemRoles}\\\")\\n, SelectedSystems=todynamic(\\\"[{Systems}]\\\")\\n, SelectedSystemUsage= dynamic(\\\"{SystemUsage}\\\")) | project SystemID, SystemRole;\\nlet TimeStep= 4h;\\nlet SelectedSeverities=  dynamic([\\\"High\\\", \\\"Medium\\\"]);//can also do//let SelectedSeverities =  dynamic([\\\"All Severities\\\"])\\nlet SelectedRuleTypes= dynamic([ \\\"Deterministic\\\", \\\"AnomaliesOnly\\\"]); // Rule only goes for deterministic alerting\\nlet AuditConfiguration= materialize(SAPAuditLogConfiguration(SelectedSeverities= SelectedSeverities, SelectedRuleTypes= SelectedRuleTypes)\\n| where SystemID in((SelectedSystems | project SystemID))\\n| project MessageID, SystemID, RolesTagsToExclude, Severity, Threshold, RuleType, CategoryName);\\n// get special users for exclusion and in-focus analysis\\nlet SAPUsersGottenVIP = (SAPUsersGetVIP | project User = SAPUser, TagsList, SpecialFocusTagged);\\nlet SAPUserRolesAndProfiles = (SAPUsersAssignments | project-keep User, SystemID, DirectRoles, ChildRoles, Profiles | summarize RolesAndProfiles = make_set(array_concat(DirectRoles, ChildRoles, Profiles), 120) by User, SystemID);\\nlet RelevantEvents =SAPAuditLog\\n| where SystemID in((SelectedSystems | project SystemID))\\n| where isnotempty( User)\\n| where AlertSeverityText != \\\"Low\\\"\\n| where MessageID in ((AuditConfiguration | summarize count() by MessageID))\\n| lookup kind=inner (AuditConfiguration| project SystemID, MessageID, Severity, Threshold  ) on\\n$left.MessageID == $right.MessageID\\n,$left.SystemID == $right.SystemID\\n| where SelectedSeverities contains Severity\\n| make-series AuditEventsCounts= count() default=0 on TimeGenerated from startofday({TimeRange:start}) to {TimeRange:end} \\nstep TimeStep by SystemID, MessageID, User, Threshold;\\nRelevantEvents \\n| extend crossedThreshold= series_greater(AuditEventsCounts, repeat(Threshold* TimeStep/1h, array_length(AuditEventsCounts)) )\\n| where array_sum(crossedThreshold) > 0\\n| extend crossedThreshold = array_iif(crossedThreshold,repeat(1, array_length(AuditEventsCounts)) , repeat(0, array_length(AuditEventsCounts)))\\n| lookup SAPUsersGottenVIP on User\\n| lookup SAPUserRolesAndProfiles on User, SystemID\\n| lookup (AuditConfiguration | project-keep SystemID, MessageID, RuleType, RolesTagsToExclude,  Severity) on MessageID, SystemID\\n| extend RolesProfilesAndTags = array_concat(RolesAndProfiles, TagsList)\\n| extend TagsIntersect = set_intersect(split(RolesTagsToExclude,\\\";\\\"), RolesProfilesAndTags)\\n| extend IntersectionSize = array_length(TagsIntersect)\\n// keep only non-excluded users that are not under \\\"Special Focus\\\"\\n| where IntersectionSize == 0 or isempty(IntersectionSize) or SpecialFocusTagged == true\\n| extend Anomalies= series_decompose_anomalies(AuditEventsCounts, Threshold=4, Test_point= 1)\\n| extend Anomaly= array_index_of(Anomalies,1)>= 0\\n| extend AnomalSeriesIndicator = iff(RuleType==\\\"Deterministic\\\", \\\"Deterministic threshold crossed\\\", iff(Anomaly, 'Anomalous audit event', 'Normal audit event'))\\n| mv-expand Anomalies to typeof(double), TimeGenerated to typeof(datetime), crossedThreshold to typeof(int )\\n| where (crossedThreshold > 0) and (( RuleType==\\\"Deterministic\\\") or ( RuleType== \\\"AnomaliesOnly\\\" and (Anomalies > 0 or \\\"{AuditEventsType}\\\" contains \\\"All\\\")))\\n| lookup (AuditConfiguration | project-keep SystemID, MessageID, CategoryName) on MessageID, SystemID\\n| summarize SuspiciousCount= floor((countif(Severity==\\\"High\\\") + countif(Severity==\\\"Medium\\\")*0.5),1) by CategoryName, TimeGenerated\\n\\n\\n\\n\\n\",\"size\":1,\"aggregation\":3,\"showAnalytics\":true,\"title\":\"Events by category\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{SAPWorkspace}\"],\"visualization\":\"areachart\",\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"ResultText\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"dcount_CorrelationId\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"chartSettings\":{\"xAxis\":\"TimeGenerated\",\"yAxis\":[\"SuspiciousCount\"],\"group\":\"CategoryName\"}},\"customWidth\":\"100\",\"name\":\"Events by category\",\"styleSettings\":{\"maxWidth\":\"100%\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let SelectedSystems= SAPSystems(SelectedSystemRoles=dynamic(\\\"{SystemRoles}\\\")\\n, SelectedSystems=todynamic(\\\"[{Systems}]\\\")\\n, SelectedSystemUsage= dynamic(\\\"{SystemUsage}\\\")) | project SystemID, SystemRole;\\nlet UserAssignments= SAPUsersAssignments() | project User, UserAuthGroup= UserGroupAuth;\\nlet TimeStep= 4h;\\nlet SelectedSeverities=  dynamic([\\\"High\\\", \\\"Medium\\\"]);//can also do//let SelectedSeverities =  dynamic([\\\"All Severities\\\"])\\nlet SelectedRuleTypes= dynamic([ \\\"Deterministic\\\", \\\"AnomaliesOnly\\\"]); // Rule only goes for deterministic alerting\\nlet AuditConfiguration= materialize(SAPAuditLogConfiguration(SelectedSeverities= SelectedSeverities, SelectedRuleTypes= SelectedRuleTypes)\\n| where SystemID in((SelectedSystems | project SystemID))\\n| project MessageID, SystemID, RolesTagsToExclude, Severity, Threshold, RuleType, CategoryName);\\n// get special users for exclusion and in-focus analysis\\nlet SAPUsersGottenVIP = (SAPUsersGetVIP | project User = SAPUser, TagsList, SpecialFocusTagged);\\nlet SAPUserRolesAndProfiles = (SAPUsersAssignments | project-keep User, SystemID, DirectRoles, ChildRoles, Profiles | summarize RolesAndProfiles = make_set(array_concat(DirectRoles, ChildRoles, Profiles), 120) by User, SystemID);\\nlet RelevantEvents =SAPAuditLog\\n| where SystemID in((SelectedSystems | project SystemID))\\n| where isnotempty( User)\\n| where AlertSeverityText != \\\"Low\\\"\\n| where MessageID in ((AuditConfiguration | summarize count() by MessageID))\\n| lookup kind=inner (AuditConfiguration| project SystemID, MessageID, Severity, Threshold  ) on\\n$left.MessageID == $right.MessageID\\n,$left.SystemID == $right.SystemID\\n| where SelectedSeverities contains Severity\\n| make-series AuditEventsCounts= count() default=0 on TimeGenerated from startofday({TimeRange:start}) to {TimeRange:end} \\nstep TimeStep by SystemID, MessageID, User, Threshold;\\nRelevantEvents \\n| extend crossedThreshold= series_greater(AuditEventsCounts, repeat(Threshold* TimeStep/1h, array_length(AuditEventsCounts)) )\\n| where array_sum(crossedThreshold) > 0\\n| extend crossedThreshold = array_iif(crossedThreshold,repeat(1, array_length(AuditEventsCounts)) , repeat(0, array_length(AuditEventsCounts)))\\n| lookup SAPUsersGottenVIP on User\\n| lookup SAPUserRolesAndProfiles on User, SystemID\\n| lookup (AuditConfiguration | project-keep SystemID, MessageID, RuleType, RolesTagsToExclude,  Severity) on MessageID, SystemID\\n| extend RolesProfilesAndTags = array_concat(RolesAndProfiles, TagsList)\\n| extend TagsIntersect = set_intersect(split(RolesTagsToExclude,\\\";\\\"), RolesProfilesAndTags)\\n| extend IntersectionSize = array_length(TagsIntersect)\\n// keep only non-excluded users that are not under \\\"Special Focus\\\"\\n| where IntersectionSize == 0 or isempty(IntersectionSize) or SpecialFocusTagged == true\\n| extend Anomalies= series_decompose_anomalies(AuditEventsCounts, Threshold=4, Test_point= 1)\\n| extend Anomaly= array_index_of(Anomalies,1)>= 0\\n| extend AnomalSeriesIndicator = iff(RuleType==\\\"Deterministic\\\", \\\"Deterministic threshold crossed\\\", iff(Anomaly, 'Anomalous audit event', 'Normal audit event'))\\n| mv-expand Anomalies to typeof(double), TimeGenerated to typeof(datetime), crossedThreshold to typeof(int )\\n| where (crossedThreshold > 0) and (( RuleType==\\\"Deterministic\\\") or ( RuleType== \\\"AnomaliesOnly\\\" and (Anomalies > 0 or \\\"{AuditEventsType}\\\" contains \\\"All\\\")))\\n| lookup UserAssignments on User\\n| summarize SuspiciousCount= floor((countif(Severity==\\\"High\\\") + countif(Severity==\\\"Medium\\\")*0.5),1) by UserAuthGroup, TimeGenerated\\n\\n\\n\\n\\n\",\"size\":1,\"aggregation\":3,\"showAnalytics\":true,\"title\":\"Events by authorization group\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{SAPWorkspace}\"],\"visualization\":\"areachart\",\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"ResultText\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"dcount_CorrelationId\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"chartSettings\":{\"xAxis\":\"TimeGenerated\",\"yAxis\":[\"SuspiciousCount\"],\"group\":\"UserAuthGroup\"}},\"customWidth\":\"100\",\"name\":\"Events by authorization group\",\"styleSettings\":{\"maxWidth\":\"100%\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let SelectedSystems= SAPSystems(SelectedSystemRoles=dynamic(\\\"{SystemRoles}\\\")\\n, SelectedSystems=todynamic(\\\"[{Systems}]\\\")\\n, SelectedSystemUsage= dynamic(\\\"{SystemUsage}\\\")) | project SystemID, SystemRole;\\nlet UserAssignments= SAPUsersAssignments() | project User, UserType;\\nlet TimeStep= 4h;\\nlet SelectedSeverities=  dynamic([\\\"High\\\", \\\"Medium\\\"]);//can also do//let SelectedSeverities =  dynamic([\\\"All Severities\\\"])\\nlet SelectedRuleTypes= dynamic([ \\\"Deterministic\\\", \\\"AnomaliesOnly\\\"]); // Rule only goes for deterministic alerting\\nlet AuditConfiguration= materialize(SAPAuditLogConfiguration(SelectedSeverities= SelectedSeverities, SelectedRuleTypes= SelectedRuleTypes)\\n| where SystemID in((SelectedSystems | project SystemID))\\n| project MessageID, SystemID, RolesTagsToExclude, Severity, Threshold, RuleType, CategoryName);\\n// get special users for exclusion and in-focus analysis\\nlet SAPUsersGottenVIP = (SAPUsersGetVIP | project User = SAPUser, TagsList, SpecialFocusTagged);\\nlet SAPUserRolesAndProfiles = (SAPUsersAssignments | project-keep User, SystemID, DirectRoles, ChildRoles, Profiles | summarize RolesAndProfiles = make_set(array_concat(DirectRoles, ChildRoles, Profiles), 120) by User, SystemID);\\nlet RelevantEvents =SAPAuditLog\\n| where SystemID in((SelectedSystems | project SystemID))\\n| where isnotempty( User)\\n| where AlertSeverityText != \\\"Low\\\"\\n| where MessageID in ((AuditConfiguration | summarize count() by MessageID))\\n| lookup kind=inner (AuditConfiguration| project SystemID, MessageID, Severity, Threshold  ) on\\n$left.MessageID == $right.MessageID\\n,$left.SystemID == $right.SystemID\\n| where SelectedSeverities contains Severity\\n| make-series AuditEventsCounts= count() default=0 on TimeGenerated from startofday({TimeRange:start}) to {TimeRange:end} \\nstep TimeStep by SystemID, MessageID, User, Threshold;\\nRelevantEvents \\n| extend crossedThreshold= series_greater(AuditEventsCounts, repeat(Threshold* TimeStep/1h, array_length(AuditEventsCounts)) )\\n| where array_sum(crossedThreshold) > 0\\n| extend crossedThreshold = array_iif(crossedThreshold,repeat(1, array_length(AuditEventsCounts)) , repeat(0, array_length(AuditEventsCounts)))\\n| lookup SAPUsersGottenVIP on User\\n| lookup SAPUserRolesAndProfiles on User, SystemID\\n| lookup (AuditConfiguration | project-keep SystemID, MessageID, RuleType, RolesTagsToExclude,  Severity) on MessageID, SystemID\\n| extend RolesProfilesAndTags = array_concat(RolesAndProfiles, TagsList)\\n| extend TagsIntersect = set_intersect(split(RolesTagsToExclude,\\\";\\\"), RolesProfilesAndTags)\\n| extend IntersectionSize = array_length(TagsIntersect)\\n// keep only non-excluded users that are not under \\\"Special Focus\\\"\\n| where IntersectionSize == 0 or isempty(IntersectionSize) or SpecialFocusTagged == true\\n| extend Anomalies= series_decompose_anomalies(AuditEventsCounts, Threshold=4, Test_point= 1)\\n| extend Anomaly= array_index_of(Anomalies,1)>= 0\\n| extend AnomalSeriesIndicator = iff(RuleType==\\\"Deterministic\\\", \\\"Deterministic threshold crossed\\\", iff(Anomaly, 'Anomalous audit event', 'Normal audit event'))\\n| mv-expand Anomalies to typeof(double), TimeGenerated to typeof(datetime), crossedThreshold to typeof(int )\\n| where (crossedThreshold > 0) and (( RuleType==\\\"Deterministic\\\") or ( RuleType== \\\"AnomaliesOnly\\\" and (Anomalies > 0 or \\\"{AuditEventsType}\\\" contains \\\"All\\\")))\\n| lookup UserAssignments on User\\n| summarize SuspiciousCount= floor((countif(Severity==\\\"High\\\") + countif(Severity==\\\"Medium\\\")*0.5),1) by UserType, TimeGenerated\\n| lookup (SAPGetDataTypes(DataTypes= dynamic([\\\"UserType\\\"]))| project UserType= Key, Value) on UserType\\n| project UserType= iff(isempty(Value), UserType, Value), TimeGenerated, SuspiciousCount\\n\\n\\n\\n\\n\",\"size\":1,\"aggregation\":3,\"showAnalytics\":true,\"title\":\"Events by user type\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{SAPWorkspace}\"],\"visualization\":\"areachart\",\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"ResultText\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"dcount_CorrelationId\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"chartSettings\":{\"xAxis\":\"TimeGenerated\",\"yAxis\":[\"SuspiciousCount\"],\"group\":\"UserType\"}},\"customWidth\":\"100\",\"name\":\"Events by user type\",\"styleSettings\":{\"maxWidth\":\"100%\"}}]},\"name\":\"alerts trends\"}]},\"conditionalVisibility\":{\"parameterName\":\"MainTabSelected\",\"comparison\":\"isEqualTo\",\"value\":\"'Audit Log Alerts'\"},\"name\":\"Group Audit Log Alerts\"},{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"nav\",\"links\":[{\"id\":\"547e71ef-1150-4c98-b82e-b0cd0aa1d380\",\"cellValue\":\"MainTabSelected\",\"linkTarget\":\"parameter\",\"linkLabel\":\"📉 click here for more SAP audit log analysis!\",\"subTarget\":\"Audit Log Alerts\",\"preText\":\"There's more! ready for the Audit log alerts report to load?\",\"postText\":\"\",\"style\":\"primary\",\"icon\":\"Sev2\"},{\"id\":\"69e4450d-f926-4cff-a91f-6a011323ef25\",\"cellValue\":\"Select relevant workspaces\",\"linkTarget\":\"step\",\"linkLabel\":\"📉 click here to go back to the top of the report\",\"preText\":\"Had enough? \",\"style\":\"primary\"}]},\"customWidth\":\"100\",\"name\":\"tabs footer\"}],\"fallbackResourceIds\":[\"/subscriptions/de5fb112-5d5d-42d4-a9ea-5f3b1359c6a6/resourcegroups/tamirk-rg/providers/microsoft.operationalinsights/workspaces/tamir-sap-log-analytics-ws\"],\"fromTemplateId\":\"sentinel-SAP-SecurityAuditlogandInitialAccess\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
                                "version": "1.0",
                                "sourceId": "[variables('workspaceResourceId')]",
                                "category": "sentinel"
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(variables('workbookId1'),'/'))))]",
                            "properties": {
                                "description": "@{workbookKey=SAP-SecurityAuditlogandInitialAccess; logoFileName=SAP_LOGO.svg; description=SAP -Security Audit log and Initial Access; dataTypesDependencies=System.Object[]; dataConnectorsDependencies=System.Object[]; previewImagesFileNames=System.Object[]; version=2.0.0; title=SAP -Security Audit log and Initial Access; templateRelativePath=SAP -Security Audit log and Initial Access.json; subtitle=; provider=Microsoft}.description",
                                "parentId": "[variables('workbookId1')]",
                                "contentId": "[variables('_workbookContentId1')]",
                                "kind": "Workbook",
                                "version": "[variables('workbookVersion1')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                },
                                "dependencies": {
                                    "operator": "AND",
                                    "criteria": [
                                        {
                                            "contentId": "SAPAuditLog",
                                            "kind": "DataType"
                                        },
                                        {
                                            "contentId": "SAP",
                                            "kind": "DataConnector"
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName1')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 1 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName1'),'/',variables('analyticRuleVersion1'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName1'))]"
            ],
            "properties": {
                "description": "SAP - (Preview) Capture-replay vulnerability in SAP NetWeaver [CVE-2023-0014]_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion1')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId1')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "SAP NetWeaver ABAP Server and ABAP Platform creates information about system identity in an ambiguous format. <br/> This may be exploited by malicious users to obtain illegitimate access to the system. <br/> Read SAP note 3281854 - FAQ for Security Note 3089413 for more details. This alert rule helps to identify current risks for systems in the landscape.",
                                "displayName": "SAP - (Preview) Capture-replay vulnerability in SAP NetWeaver [CVE-2023-0014]",
                                "enabled": false,
                                "query": "//  a per SAP note https://launchpad.support.sap.com/#/notes/3089413\n// Systems without this parameter, or with values != \"no\" are vulnerable\n// both (default) - old method allowed as client and server\n// client - old method allowed as client\n// server - old method allowed as server\n// no - old method not allowed\n// CONFIGURATION OPTION- determine which system roles are relevant for this alert\nlet TimeAgo= 7d;\nlet SelectedSystemRoles =  dynamic([\"All System Roles\"]); //can also do// let SelectedSystemRoles =  dynamic([\"Production\", \"UAT\"]);\nlet SelectedSystems = SAPSystems(SelectedSystemRoles= SelectedSystemRoles) | project SystemID= SearchKey, SystemRole, SystemUsage\n| extend SystemRole= replace_string(SystemRole, 'Unknown (Production)', 'Unknown' );\nlet Vulnerability= 'SAP - [CVE-2023-0014] Capture-replay vulnerability in a ';\nlet Remediation= ' SAP NetWeaver ABAP Server and ABAP Platform creates information about system identity in an ambiguous format. <br/> This may be exploited by malicious users to obtain illegitimate access to the system. <br/> Read SAP note 3281854 - FAQ for Security Note 3089413 for more details.';\nlet SafeValues= dynamic(['no']);\nlet MitigatedValues= dynamic(['client']);\nlet ConfiguredSystems= SAP_PAHI\n| where TimeGenerated > ago(TimeAgo)\n| where PARNAME == 'rfc/allowoldticket4tt'\n| where PARSTATE == \"A\"\n| summarize arg_max(PARDATE, PARVALUE, TimeGenerated, SYSTEMID) by SystemID, Host= HOSTNAME, SYSTEMID\n| project-rename SystemNumber= SYSTEMID\n| extend LastChanged= todatetime(PARDATE);\n// ConfiguredSystems\nlet PotentialSystems= SAPAuditLog\n| where TimeGenerated > ago(TimeAgo)\n| project SystemID, Host, SystemNumber\n| summarize by SystemID, Host, SystemNumber\n| join kind= inner SelectedSystems on SystemID;\nPotentialSystems | join kind= inner ConfiguredSystems on SystemID, Host, SystemNumber\n| summarize SystemRole=any(SystemRole), Hosts= makeset(Host), SystemNumbers= makeset(SystemNumber) by SystemID, PARVALUE\n| extend BagODetails= case(\n(PARVALUE in (MitigatedValues)),bag_pack('AlertName', strcat(Vulnerability, SystemRole, ' system- mitigated' ),'AlertDescription', Remediation, 'IsVulnerable', true, 'Severity', 'Medium' ),\n(PARVALUE in (SafeValues)),bag_pack('AlertName', strcat(Vulnerability, SystemRole, ' - system resolved' ),'AlertDescription', Remediation, 'IsVulnerable', false, 'Severity', 'Iformational' ),\n//  else:\nbag_pack('AlertName', strcat(Vulnerability, SystemRole, ' system'),'AlertDescription', Remediation, 'IsVulnerable', true, 'Severity', 'High' ))\n| evaluate bag_unpack(BagODetails)\n| project Hosts, SystemNumbers, PARVALUE, AlertName= columnifexists('AlertName', Vulnerability), AlertDescription= columnifexists('AlertDescription', Remediation), SystemID, Severity= columnifexists('Severity', '')\n| extend ExtendedLink= 'https://www.cve.org/CVERecord?id=CVE-2023-0014', Dummy= ''\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P7D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP",
                                        "dataTypes": [
                                            "SAPSystems"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "CredentialAccess"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "AlertPerResult"
                                },
                                "alertDetailsOverride": {
                                    "alertDisplayNameFormat": "{{AlertName}}",
                                    "alertSeverityColumnName": "Dummy",
                                    "alertTacticsColumnName": "Dummy",
                                    "alertDescriptionFormat": "{{AlertDescription}}\n"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId1'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 1",
                                "parentId": "[variables('analyticRuleId1')]",
                                "contentId": "[variables('analyticRulecontentId1')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion1')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName2')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 2 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName2'),'/',variables('analyticRuleVersion2'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName2'))]"
            ],
            "properties": {
                "description": "SAP - (Preview) Critical authorizations assignment - New Authorization Value_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion2')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId2')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies assignment of a critical authorization object value to a new user.\nSource Action: Assign a new authorization object / update existing one in a role using PFCG.\n\nCritical authorization objects should be maintained in watchlist \"\"SAP - Critical Authorization Objects\"\"\n\n*Data Sources: SAPcon -  Change Documents Log*\n*Data Sources: SAPcon -  User MD*",
                                "displayName": "SAP - (Preview) Critical authorizations assignment - New Authorization Value",
                                "enabled": false,
                                "query": "// SAP - Medium - Critical authorizations assignment - New Authorization Value\n// time span for audit events\nlet TimeAgo= 6h;\n// New Assigned Objects\nlet ObjectClassRoles = 'PFCG';\nlet TableName = 'CD1251';\nlet UsersRoles = 'AGR_USERS';\nlet Insert = \"I\";\nlet NotInUse = 'NOT_IN_USE';\nlet logsThreshold = 3600; // 3600 seconds\n// Audit Log Classes - Authorizations for user changed\nlet AuditClasses = dynamic(['AUR','AUT']); // Authorization/Authorization Profile &B created / changed.\n// Roles Change Documents - Extract Auth Object and Obj Field\nlet allHistory = ago(0d);\nlet alertSched = ago(6h); // Please maintain according to schedule\nlet ChangeDocs = SAPChangeDocsLog;\nlet UsersEmails = SAPUsersHeader()| summarize by User, Email, SystemID, Client | project-rename ClientID = Client;\nlet RolesAuthObject = ChangeDocs\n    | where TimeGenerated > ago(TimeAgo)\n    | where TimeGenerated >= alertSched\n    | where ObjectClass == ObjectClassRoles and TableName == TableName // Role-Obj-Profile-ObjField\n    | where TypeofChange_Item in ('J', 'I', 'U') //  Insert\n    | extend RoleObjProfileObjFieldVer = ChangedTableKey, Role = ObjectID\n    | extend ObjFieldValue = ValueNew\n    | extend ObjField = trim(@\"\\s*?\", extract(@\"(^.{1,30})\\s*?(.{1,10})\\s*?(.{1,12})\\s*?(.{1,10})\\s*?\\d{6}\", 4, RoleObjProfileObjFieldVer, typeof(string)))\n    | extend AuthObject = trim(@\"\\s*?\", extract(@\"(^.{1,30})\\s*?(.{1,10})\\s*?(.{1,12})\\s*?(.{1,10})\\s*?\\d{6}\", 2, RoleObjProfileObjFieldVer, typeof(string)))\n    | extend TimeGenRoleAuth = TimeGenerated;\nlet ComplexAuth = _GetWatchlist('SAP - Critical Authorizations');\nlet SimpleAuth = _GetWatchlist('SAP - Critical Authorizations');\nlet usersinRole =\n    ChangeDocs\n    | where TimeGenerated > ago(TimeAgo)\n    | where TimeGenerated <= allHistory\n    | where ObjectClass == ObjectClassRoles // Roles\n        and TableName == UsersRoles // Users Roles\n        and TypeofChange_Item == Insert // Insert\n    | extend UserAssigned = extract(@\"^.{1,33}\\s*?(.{1,12})\\s*?\\d{16}\", 1, ChangedTableKey)\n    | extend Role = ObjectID\n    | summarize by SystemID, Role, UserAssigned;\nlet RolesAuthObjectCheck =\n        RolesAuthObject\n        | extend ObjFieldVal = ObjFieldValue\n        | lookup kind = leftouter\n            (RolesAuthObject\n            | extend ActivityVal = ObjFieldValue)\n            on Role, AuthObject;\nlet complexScenario = ComplexAuth\n    | where ActivityField != NotInUse\n    | summarize by AuthorizationObject, AuthorizationField, AuthorizationValue, ActivityField, Activity\n    | lookup kind = inner (RolesAuthObjectCheck)\n        on $left.AuthorizationObject == $right.AuthObject\n        and $left.AuthorizationField == $right.ObjField\n        and $left.AuthorizationValue == $right.ObjFieldValue\n        and $left.ActivityField == $right.ObjField1\n        and $left.Activity == $right.ActivityVal;\nlet simpleScenario = SimpleAuth\n    | where ActivityField == NotInUse\n    | summarize by AuthorizationObject, AuthorizationField, AuthorizationValue, ActivityField, Activity\n    | lookup  kind = inner (RolesAuthObject)\n        on $left.AuthorizationObject == $right.AuthObject\n        and $left.AuthorizationField == $right.ObjField\n        and $left.AuthorizationValue == $right.ObjFieldValue;\nlet GetEntities =\n    SAPAuditLog\n    | where MessageID in (AuditClasses)\n    | where TimeGenerated > ago(TimeAgo)\n    | summarize by TimeGenerated, ClientID, TerminalIPv6, User, Host, Email\n    | extend TimeGenAudit = TimeGenerated;\nunion complexScenario, simpleScenario\n| lookup kind = inner (usersinRole) on SystemID, Role\n| lookup kind = leftouter (GetEntities) on User\n| where abs(datetime_diff('second', TimeGenRoleAuth, TimeGenAudit)) <= logsThreshold or\nisnull(TimeGenAudit)\n| lookup UsersEmails on SystemID, ClientID, User\n| project\nTimeGenRoleAuth, SystemID, ClientID, Role, User, UserAssigned, AuthorizationObject, AuthorizationField, AuthorizationValue, ActivityField, Activity, Email, TerminalIPv6, Host, UserAssignedEmail=Email1\n",
                                "queryFrequency": "PT6H",
                                "queryPeriod": "P2D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP",
                                        "dataTypes": [
                                            "SAPUsersHeader",
                                            "SAPAuditLog"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "UserAssignedEmail"
                                            }
                                        ],
                                        "entityType": "Account"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "SAP_UserAssigned": "UserAssigned",
                                    "SAP_User": "User"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId2'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 2",
                                "parentId": "[variables('analyticRuleId2')]",
                                "contentId": "[variables('analyticRulecontentId2')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion2')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName3')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 3 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName3'),'/',variables('analyticRuleVersion3'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName3'))]"
            ],
            "properties": {
                "description": "SAP - (Preview) Data collection health check_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion3')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId3')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Produces insights on potential SAP agent connectivity issues.",
                                "displayName": "SAP - (Preview) Data collection health check",
                                "enabled": false,
                                "query": "// ***IMPORTANT***- Lookback period is maintained in the KQL\n// please keep the Query scheduling parameter of \"Lookup data from the last\" to be 14 days so\n// the algorithm can detect anomalies across history\nlet RedAgo = 2d;\nlet YellowAgo = 1d;\nlet GreenAgo= 1h;\nlet LogLookBack= 14d;\nlet StepSize= 1d;\n// 0.1 is very sensitive and is required for low activity workspaces with under 1M events a day.\n// 0.5 can work better for high scale WSs (between 1M and 10M records a day). 1 can be used for WSs with over 10m records a day\nlet Threshold= 0.1;\nlet SystemLevelIssues= SAPConnectorHealth()\n    | summarize arg_max(LastSeen, *) by SystemID // last status per SystemID\n    | where SystemID !in (dynamic([\"N/A\", \"AGE\", \"Agent Version Check\"])) // agents checks are not interesting\n    | where MessageCode != \"OKOK\" // only show problems\n    | where Status == \"Yellow\" or Status == \"Red\"\n    | extend Severity= case(Status == \"Yellow\", \"Medium\", Status == \"Red\", \"High\", \"Unknown\")\n    | extend Log= 'Entire system'\n    | extend Details= replace_string(Details, \"System\", strcat(\"SAP System \", SystemID));\nlet LogContinuationTS= union SAPConnectorOverview()\n    | where TimeGenerated > ago(LogLookBack)\n    | project Type, TimeGenerated, SystemID= SystemID_s\n    | make-series RecordCount= count(), LastSeen= max(TimeGenerated) on TimeGenerated from ago(LogLookBack) to now() step StepSize by Log= Type, SystemID;\nlet LogContinuationAnomal= LogContinuationTS\n    | extend (RecordCountAnomalies, score, baseline) = series_decompose_anomalies(RecordCount, Threshold= Threshold, Test_points= 1)\n    | where array_index_of(RecordCountAnomalies, -1, -1) > 0 // some log is missing in the last bucket\n    | extend Severity= iff(RecordCount[-1] == 0, \"Low\", \"Informational\") // determine severity according to certainty\n    | extend Details= strcat('SAP- Potential log loss for log ', Log, ' from System ', SystemID)\n    | extend LastSeen= todatetime(LastSeen[-1])\n    | extend ExtendedDetails= strcat('Log ', Log, ' from System ', SystemID, ' has produced ', RecordCount[-1], ' recods since ', format_datetime(todatetime(TimeGenerated[-1]), 'yy-MM-dd [hh:mm:ss tt]'), '. Expected number of records is ', round(toint(baseline[-1]), 0));\n(LogContinuationAnomal\n| join kind=leftantisemi (SystemLevelIssues\n    | where Status == \"Red\"\n    | summarize by SystemID)\n    on SystemID) // System-wide issues should overtake log level issues\n| union SystemLevelIssues\n| where Severity != \"Informational\" // optionally can have these cases produce alerts by deleting this filter\n| project Log, SystemID, LastSeen, Severity, Details, ExtendedDetails\n    , Agent, MessageCode, AgentVersion\n| extend Dummy= ''\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "P14D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP",
                                        "dataTypes": [
                                            "SAPConnectorHealth",
                                            "SAPConnectorOverview"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Impact"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "AlertPerResult"
                                },
                                "customDetails": {
                                    "MessageCode": "MessageCode",
                                    "Log": "Log"
                                },
                                "alertDetailsOverride": {
                                    "alertDisplayNameFormat": "{{Details}}",
                                    "alertSeverityColumnName": "Severity",
                                    "alertTacticsColumnName": "Dummy",
                                    "alertDescriptionFormat": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/SAP/Workbooks/SAPVMIcon.svg\" width=\"30\"/>\n  </br>\n{{ExtendedDetails}}.\n</br>\nFor more troubleshooting guidance, visit the  [Troubleshooting your Microsoft Sentinel Solution for SAP deployment](https://learn.microsoft.com/azure/sentinel/sap/sap-deploy-troubleshoot) guide.\n"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId3'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 3",
                                "parentId": "[variables('analyticRuleId3')]",
                                "contentId": "[variables('analyticRulecontentId3')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion3')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName4')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 4 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName4'),'/',variables('analyticRuleVersion4'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName4'))]"
            ],
            "properties": {
                "description": "SAP - (Preview) Data exported from a production system using a transport_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion4')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId4')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Transports are like pull requests and are normally created in a developement system. This alert rule is triggered when a transport is released from a production system, with data coming from a sensitive table.",
                                "displayName": "SAP - (Preview) Data exported from a production system using a transport",
                                "enabled": false,
                                "query": "// sensitive data was released using transport system\n// here you can exclude system users which are OK to export sensitive data using transport system\n// by adding those users in the SAP_User_Config watchlist with a tag of 'ExportSensitiveDataOK'\n// can also specify SAP Roles or SAP Profiles to exclude\nlet excludeUsersTags= dynamic(['ExportSensitiveDataOK']);\nlet excludedUsers= SAPUsersGetVIP(SearchForTags= excludeUsersTags)| summarize by User2Exclude=SAPUser;\nlet SelectedSystemRoles =  dynamic([\"Production\"]); //can also do// let SelectedSystemRoles =  dynamic([\"Production\", \"UAT\"]); dynamic([\"All System Roles\"])\nlet SelectedSystems = SAPSystems(SelectedSystemRoles= SelectedSystemRoles) | project SystemID= SearchKey;\nlet SensitiveTables = _GetWatchlist('SAP - Sensitive Tables') | summarize by TableName= Table | extend IsSensitive= true;\nlet TransportReleaseTCODEs= dynamic([\"SE10\", \"SE01\"]);\nlet TransportReleasePrograms= dynamic([\"RDDM0001\"]);\nlet SensitiveDataExportViaCR= SAPCRLog\n| where SystemID in (SelectedSystems)\n| where isnotempty( SystemID)\n| where isnotempty(TableName)\n| lookup SensitiveTables on TableName\n| where Status == \"R\" // released\n| where Request startswith_cs SystemID\n| project-rename ExportDT= UpdatedOn\n| summarize Requests= make_set(Request,10), ExportDT= min(ExportDT) by Owner, RequestDescription= Description, TableName, SystemID, Instance, Host, IsSensitive;\nlet TransportReleaseTransactions= SAPAuditLog\n| where  MessageID == \"AU3\"\n| where SystemID in (SelectedSystems)\n| where TransactionCode in(TransportReleaseTCODEs) or ABAPProgramName in (TransportReleasePrograms)\n| join kind=leftantisemi excludedUsers on $left.User == $right.User2Exclude\n| project-rename TransactionStartDT= UpdatedOn_t\n| summarize TransactionCodes= make_set(TransactionCode, 3), ABAPProgramNames= make_set(ABAPProgramName, 3), Email= any(Email), TransactionStartDT= min(TransactionStartDT) by User, TerminalIPv6, Host, SystemID, ClientID, Instance;\nTransportReleaseTransactions\n| join kind= inner SensitiveDataExportViaCR on SystemID\n| extend TimePassed= datetime_diff( \"minute\", ExportDT, TransactionStartDT)\n| where TimePassed between (0 .. 60)\n| extend AlertDescription= strcat(\"User has exported \",iff(IsSensitive, \"sensitive\", \"tabular\") ,\" data from a productive system using a transport\")\n| extend ExtendedDetails= pack(\"TransactionStartDT\" , TransactionStartDT, \"Owner\", Owner, \"RequestDescription\", RequestDescription, 'TransactionCodes', TransactionCodes, 'ABAPProgramNames', ABAPProgramNames)\n| extend Severity= iff(IsSensitive, \"High\", \"Medium\"), Dummy= ''\n| project ExportedOn= ExportDT, User, TerminalIPv6, Host, SystemID, TransactionCode= TransactionCodes[0], ABAPProgramName= ABAPProgramNames[0], Email, ExtendedDetails, Requests, AlertDescription, TableName, IsSensitive, Severity, ClientID, Instance, Dummy\n",
                                "queryFrequency": "PT4H",
                                "queryPeriod": "PT5H",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP",
                                        "dataTypes": [
                                            "SAPUsersGetVIP",
                                            "SAPSystems",
                                            "SAPAuditLog"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Exfiltration"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "HostName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "AlertPerResult"
                                },
                                "customDetails": {
                                    "IsSensitive": "IsSensitive",
                                    "ChangeRequests": "Requests",
                                    "ExtendedDetails": "ExtendedDetails",
                                    "SAP_User": "User"
                                },
                                "alertDetailsOverride": {
                                    "alertDisplayNameFormat": "{{AlertDescription}}",
                                    "alertSeverityColumnName": "Severity",
                                    "alertTacticsColumnName": "Dummy",
                                    "alertDescriptionFormat": "{{AlertDescription}}<br/>\n"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId4'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 4",
                                "parentId": "[variables('analyticRuleId4')]",
                                "contentId": "[variables('analyticRulecontentId4')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion4')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName5')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 5 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName5'),'/',variables('analyticRuleVersion5'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName5'))]"
            ],
            "properties": {
                "description": "SAP - (Preview) Dynamic Anomaly based Audit Log Monitor Alerts_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion5')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId5')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "SAP Audit log events with message IDs preconfigured in Watchlist SAP_Dynamic_Audit_Log_Monitor_Configuration and with RuleType  = \"AnomaliesOnly\" will be shown here.\n<br/>\nSee  [Sentinel4SAP Dcoumentation](https://aka.ms/sapsecdocs) for further information",
                                "displayName": "SAP - (Preview) Dynamic Anomaly based Audit Log Monitor Alerts",
                                "enabled": false,
                                "query": "// SAP - (Preview) Dynamic Anomaly based Audit Log Monitor Alerts\nlet SelectedSystems =  dynamic([\"All Systems\"]);//can also do// let SelectedSystems =  dynamic([\"S4P\", \"B4X\", \"ODT\"]);\nlet SelectedSystemRoles =  dynamic([\"Production\"]); //can also do// let SelectedSystemRoles =  dynamic([\"Production\", \"UAT\"]);\nlet SelectedSeverities=  dynamic([\"High\", \"Medium\"]);//can also do//let SelectedSeverities =  dynamic([\"All Severities\"])\n// get special users for exclusion and in-focus analysis\nlet SAPUsersGottenVIP = (SAPUsersGetVIP | project-rename User = SAPUser);\n// let SelectedRuleTypes = dynamic([\"All RuleTypes\"]);\nlet SelectedRuleTypes= dynamic([\"AnomaliesOnly\"]);\nlet SAPAuditAnomal = SAPAuditLogAnomalies(LearningTime = 14d, DetectingTime=1h, SelectedSystems= SelectedSystems,\nSelectedSystemRoles= SelectedSystemRoles, SelectedSeverities= SelectedSeverities, SelectedRuleTypes= SelectedRuleTypes);\n// Query\n// get the anomalies\nSAPAuditAnomal\n// get the user privleged status\n| lookup (SAPUsersGetPrivileged() | extend IsPrivilegedUser = true) on\n$left.SystemID == $right.SystemID\n,$left.User == $right.User\n,$left.ClientID == $right.Client\n| extend DetailedDescription = iff(IsPrivilegedUser, strcat('User ', User,  ' is a privileged user! <br/>', DetailedDescription), DetailedDescription)\n| extend TimeGenerated = MaxTime\n// handle threshold per system (configurable via the SAPAuditLogConfigurator watchlist)\n//  apply the threshold criteria, consider that the watchlist describes hourly thresholds\n| extend MinutesSpan = datetime_diff('Minute', MaxTime, MinTime )\n| where EventCount > (Threshold * max_of(MinutesSpan, 10) / 60)\n| extend DetailedDescription = iff(EventCount > 1, strcat(' Event occured ', EventCount, ' times within ', MinutesSpan + 1, ' minutes.<br/> ', 'The predefined threshold of ', Threshold,  ' Events per hour was exceeded! <br/>', DetailedDescription), DetailedDescription)\n| extend MessageText = iff(MessageText endswith_cs \".\", substring(MessageText, 0, strlen(MessageText)-1), MessageText)\n| project-keep SystemID, Instance, MessageText, MessageClass, MessageID, ClientID, User, TerminalIPv6, TransactionCode, ABAPProgramName, SAPProcesType, SAPWPName, Email, Host, CategoryName, DestinationEmail, DetailedDescription, Tactics, TeamsChannelID, SystemRole, SystemUsage, IsProd, Severity, BagOfDetails, IsPrivilegedUser, EventCount, Threshold, TimeGenerated\n| extend Source= 'SAPAuditAnom1 '\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "P14D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP",
                                        "dataTypes": [
                                            "SAPUsersGetVIP",
                                            "SAPAuditLogAnomalies",
                                            "SAPUsersGetPrivileged"
                                        ]
                                    }
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "ProcessId",
                                                "columnName": "TransactionCode"
                                            },
                                            {
                                                "identifier": "CommandLine",
                                                "columnName": "ABAPProgramName"
                                            }
                                        ],
                                        "entityType": "Process"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "AlertPerResult"
                                },
                                "customDetails": {
                                    "TeamsChannelID": "[variables('_TeamsChannelID')]",
                                    "DestinationEmail": "DestinationEmail",
                                    "SAPAuditLogMessageID": "[variables('_MessageID')]",
                                    "SystemUsage": "SystemUsage",
                                    "Source": "Source",
                                    "IsProductionEnv": "IsProd",
                                    "SAPProcessType": "SAPProcesType",
                                    "BagOfDetails": "BagOfDetails",
                                    "SystemRole": "SystemRole",
                                    "SAP_User": "User"
                                },
                                "alertDetailsOverride": {
                                    "alertDisplayNameFormat": "SAP - Anomaly Detected- {{MessageText}} in system {{SystemID}}",
                                    "alertSeverityColumnName": "Severity",
                                    "alertTacticsColumnName": "Tactics",
                                    "alertDescriptionFormat": "#### Detailed information\n{{DetailedDescription}}\n#### Additional information\n{{BagOfDetails}}<br/>\nAlerts of this type can be configured using watch list SAPAuditLogConfigurator . <br/>\nSee  [Sentinel4SAP Dcoumentation](https://aka.ms/sapsecdocs) for further information\n"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId5'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 5",
                                "parentId": "[variables('analyticRuleId5')]",
                                "contentId": "[variables('analyticRulecontentId5')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion5')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName6')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 6 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName6'),'/',variables('analyticRuleVersion6'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName6'))]"
            ],
            "properties": {
                "description": "SAP - (Preview) File Downloaded From a Malicious IP Address_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion6')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId6')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "User has downloaded a file from an SAP system using an IP address known to be malicious.\nMalicious IP addresses are obtained from threat intelligence services. For additional information visit the [Connect your threat intelligence platform to Microsoft Sentinel]( https://learn.microsoft.com/Azure/sentinel/connect-threat-intelligence-tip) how-to page.\nThis Alert rule allows for a cross-workspace query to accommodate an architecture where the threat intelligence data resides in a different workspace than the one which holds the SAP data.",
                                "displayName": "SAP - (Preview) File Downloaded From a Malicious IP Address",
                                "enabled": false,
                                "query": "let TimeAgo = 65m;\nlet ioc_lookBack = 14d;\n// CONFIGURATION OPTION- determine which system roles are relevant for this alert\nlet SelectedSystemRoles=  dynamic([\"Production\"]); //can also do// let SelectedSystemRoles =  dynamic([\"Production\", \"UAT\"]); dynamic([\"All System Roles\"])\n// let SelectedSystemRoles= dynamic([\"All System Roles\"]);\nlet SelectedSystems = SAPSystems(SelectedSystemRoles= SelectedSystemRoles) | project SystemID= SearchKey;\nlet MaliciousIPs= SAPThreatIntelligenceIndicator\n| where TimeGenerated >= ago(ioc_lookBack) and ExpirationDateTime > now()\n| summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by IndicatorId\n| summarize ConfidenceScore= any(ConfidenceScore) by NetworkIP, EmailSourceIpAddress, NetworkDestinationIP, NetworkSourceIP, Active, Description, ThreatType\n| where Active == true\n// Picking up only IOC's that contain the entities we want\n| where isnotempty(NetworkIP)\n    or isnotempty(EmailSourceIpAddress)\n    or isnotempty(NetworkDestinationIP)\n    or isnotempty(NetworkSourceIP)\n// As there is potentially more than 1 indicator type for matching IP, taking NetworkIP first, then others if that is empty.\n// Taking the first non-empty value based on potential IOC match availability\n| extend TI_ipEntity = iff(isnotempty(NetworkIP), NetworkIP, NetworkDestinationIP)\n| extend TI_ipEntity = iff(isempty(TI_ipEntity) and isnotempty(NetworkSourceIP), NetworkSourceIP, TI_ipEntity)\n| extend TI_ipEntity = iff(isempty(TI_ipEntity) and isnotempty(EmailSourceIpAddress), EmailSourceIpAddress, TI_ipEntity)\n//Exclude local addresses, using the ipv4_is_private operator\n| where TI_ipEntity !startswith \"fe80\"\n    and TI_ipEntity !startswith \"::\"\n    and TI_ipEntity !startswith \"127.\"\n| summarize by TI_ipEntity, TIDescription= Description, ThreatType, ConfidenceScore\n| extend IsPrivate= ipv4_is_private(TI_ipEntity);\n// Get all downloads\nlet FileDownloads= SAPAuditLog\n    | where MessageID == \"AUY\"\n    | where TimeGenerated > ago (TimeAgo*2) and ingestion_time() > ago(TimeAgo)\n    | where SystemID in (SelectedSystems)\n    | join kind=inner (MaliciousIPs) on $left.TerminalIPv6 == $right.TI_ipEntity\n    | extend ByteCount= toint(replace_string(replace_string(Variable1, \".\",\"\"), \",\",\"\")), Code=Variable2, Path= Variable3\n    | summarize ConfidenceScore= any(ConfidenceScore), IsPrivate=any(IsPrivate), TIDescription=any(TIDescription), ThreatType= any(ThreatType), DownloadsByUser = count(), Paths= make_set(Variable3, 10), ByteCount=sum(ByteCount) by SystemID, ClientID, User, TerminalIPv6, Email, Host, TransactionCode, Instance;\n    FileDownloads\n    | extend PackedDetails= pack_all()\n    | extend Details= strcat(\"User \", User, \" has downloaded \", ByteCount, \" bytes data from a malicious \", iff(IsPrivate, \"private\",\"public\"),\" IP address \")\n    | extend AlertDetails= strcat(\"Threat Type: \", ThreatType, \", Threat Description: \", TIDescription), Dummy= ''\n",
                                "queryFrequency": "PT2H",
                                "queryPeriod": "P14D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP",
                                        "dataTypes": [
                                            "SAPSystems",
                                            "SAPAuditLog"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Exfiltration"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "HostName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "AlertPerResult"
                                },
                                "customDetails": {
                                    "PackedDetails": "PackedDetails",
                                    "SAP_User": "User",
                                    "ThreatType": "ThreatType"
                                },
                                "alertDetailsOverride": {
                                    "alertDisplayNameFormat": "{{Details}}",
                                    "alertSeverityColumnName": "Dummy",
                                    "alertTacticsColumnName": "Dummy",
                                    "alertDescriptionFormat": "{{AlertDetails}}\n\nUser has downloaded a file from an SAP system using an IP address known to be malicious.\nMalicious IP addresses are obtained from threat intelligence services. For additional information visit the [Connect your threat intelligence platform to Microsoft Sentinel]( https://learn.microsoft.com/Azure/sentinel/connect-threat-intelligence-tip) how-to page.\nThis Alert rule allows for a cross-workspace query to accommodate an architecture where the threat intelligence data resides in a different workspace than the one which holds the SAP data.\n"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId6'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 6",
                                "parentId": "[variables('analyticRuleId6')]",
                                "contentId": "[variables('analyticRulecontentId6')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion6')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName7')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 7 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName7'),'/',variables('analyticRuleVersion7'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName7'))]"
            ],
            "properties": {
                "description": "SAP - (Preview) HANA DB - Assign Admin Authorizations_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion7')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId7')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies admin privileges/roles assignment.\n\nSource Action: Assign a user with any Admin role / privileges.\n\n*Data Sources: Linux Agent - Syslog*",
                                "displayName": "SAP - (Preview) HANA DB - Assign Admin Authorizations",
                                "enabled": false,
                                "query": "Syslog\n| where ProcessName startswith \"HDB\"\n| where SyslogMessage contains \"ADMIN\" and (SyslogMessage contains \"GRANT PRIVILEGE\" or SyslogMessage contains \"GRANT ROLE\")\n",
                                "queryFrequency": "PT3H",
                                "queryPeriod": "PT3H",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {}
                                ],
                                "tactics": [
                                    "PrivilegeEscalation"
                                ],
                                "entityMappings": [
                                    "",
                                    ".nan"
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId7'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 7",
                                "parentId": "[variables('analyticRuleId7')]",
                                "contentId": "[variables('analyticRulecontentId7')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion7')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName8')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 8 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName8'),'/',variables('analyticRuleVersion8'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName8'))]"
            ],
            "properties": {
                "description": "SAP - (Preview) HANA DB - Audit Trail Policy Changes_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion8')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId8')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies changes for HANA DB audit trail policies.\n\nSource Action: Create / update existing audit policy in security definitions.\n\n*Data Sources: Linux Agent - Syslog*",
                                "displayName": "SAP - (Preview) HANA DB - Audit Trail Policy Changes",
                                "enabled": false,
                                "query": "Syslog\n| where ProcessName startswith \"HDB\"\n| where SyslogMessage contains \"AUDIT POLICY\"\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT1H",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {}
                                ],
                                "tactics": [
                                    "LateralMovement",
                                    "DefenseEvasion",
                                    "Persistence"
                                ],
                                "entityMappings": [
                                    "",
                                    ".nan"
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId8'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 8",
                                "parentId": "[variables('analyticRuleId8')]",
                                "contentId": "[variables('analyticRulecontentId8')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion8')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName9')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 9 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName9'),'/',variables('analyticRuleVersion9'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName9'))]"
            ],
            "properties": {
                "description": "SAP - (Preview) HANA DB - Deactivation of Audit Trail_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion9')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId9')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies deactivation of HANA DB audit log.\n\nSource Action: Deactivate Audit Log in HANA DB security defnitions.\n\n*Data Sources: Linux Agent - Syslog*",
                                "displayName": "SAP - (Preview) HANA DB - Deactivation of Audit Trail",
                                "enabled": false,
                                "query": "Syslog\n| where ProcessName startswith \"HDB\"\n| where SyslogMessage contains \"AUDIT CONFIGURATION\" and\n    SyslogMessage contains 'global_auditing_state' and\n    SyslogMessage contains 'False'\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT1H",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {}
                                ],
                                "tactics": [
                                    "Persistence",
                                    "LateralMovement",
                                    "DefenseEvasion"
                                ],
                                "entityMappings": [
                                    "",
                                    ".nan"
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId9'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 9",
                                "parentId": "[variables('analyticRuleId9')]",
                                "contentId": "[variables('analyticRulecontentId9')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion9')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName10')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 10 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName10'),'/',variables('analyticRuleVersion10'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName10'))]"
            ],
            "properties": {
                "description": "SAP - (Preview) HANA DB - User Admin actions_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion10')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId10')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies user administration actions.\n\nSouirce Action: Create/Update/Delete a DB User.\n\n*Data Sources: Linux Agent - Syslog*",
                                "displayName": "SAP - (Preview) HANA DB - User Admin actions",
                                "enabled": false,
                                "query": "Syslog\n| where ProcessName startswith \"HDB\"\n| where SyslogMessage contains \"CREATE USER\" or\n    SyslogMessage contains 'ALTER USER' or\n    SyslogMessage contains 'DROP USER' or\n    SyslogMessage contains 'DROP SCHEMA'\n",
                                "queryFrequency": "PT3H",
                                "queryPeriod": "PT3H",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {}
                                ],
                                "tactics": [
                                    "PrivilegeEscalation"
                                ],
                                "entityMappings": [
                                    "",
                                    ".nan"
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId10'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 10",
                                "parentId": "[variables('analyticRuleId10')]",
                                "contentId": "[variables('analyticRulecontentId10')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion10')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName11')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 11 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName11'),'/',variables('analyticRuleVersion11'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName11'))]"
            ],
            "properties": {
                "description": "SAP - (Preview) High volume of potentially sensitive data exported_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion11')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId11')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "High volume of data exported via files in proximity to an execution of a sensitive transaction, a sensitive program or direct access to sensitive table.",
                                "displayName": "SAP - (Preview) High volume of potentially sensitive data exported",
                                "enabled": false,
                                "query": "// SAP - High volume of potentially sensitive data exported\n// high volume of file downloads by users who were obsereved accessing sensitive data\n// or sensitive programs/ transactions\n// !!!IMPORTANT!!!\n// please make sure \"Lookup data from the last\" parameter is greater than a full user master data update cycle\n// please keep \"Lookup data from the last\" to be 7 days to allow coverage of user master data required\n// actual lookback is set by setting TimeAgo\nlet TimeAgo= 4h;\nlet TimeBetweenAccessAndDownload= 60m;\nlet ByteCountThreshold= 800000; //  Threshold in Bytes for entire lookback period\n// CONFIGURATION OPTION- determine which system roles are relevant for this alert\nlet SelectedSystemRoles=  dynamic([\"Production\"]); //can also do// let SelectedSystemRoles =  dynamic([\"Production\", \"UAT\"]); dynamic([\"All System Roles\"])\n// let SelectedSystemRoles= dynamic([\"All System Roles\"]);\nlet SelectedSystems = SAPSystems(SelectedSystemRoles= SelectedSystemRoles) | project SystemID= SearchKey;\n// Get sensitive Tables\n// CONFIGURATION OPTION- list sensitive tables in the 'SAP - Sensitive Tables' watchlist\nlet SensitiveTables = _GetWatchlist('SAP - Sensitive Tables') | summarize by Table;\nlet TableAccessTcodes= dynamic([\"SE16\", \"SE16N\", \"SE11\", \"SE16H\", \"SM30\", \"SE12\", \"SM31\", \"SE16H\", \"SE14\", \"SE54\",\"SE17\", \"SE16T\", \"DB01\", \"DB02\"]);\n// CONFIGURATION OPTION- list sensitive transactions in the 'SAP - Sensitive Transactions' watchlist\nlet SensitiveTransWL= toscalar(_GetWatchlist('SAP - Sensitive Transactions') | summarize TransactionCodes= make_set(TransactionCode));\n// CONFIGURATION OPTION- exclude TCODEs which are not to be considered\nlet ExcludedTcodes= dynamic([\"S000\", \"\"]);\nlet SensitiveTcodes= (set_difference(set_union(SensitiveTransWL, TableAccessTcodes), ExcludedTcodes));\n// CONFIGURATION OPTION- list sensitive programs in the 'SAP - Sensitive ABAP Programs' watchlist\nlet SensitiveABAPReports = _GetWatchlist('SAP - Sensitive ABAP Programs');\nlet fixedABAPReports = datatable(ABAPProgram:string) [\"RSPFLDOC\"];\nlet UnionABAP = union isfuzzy=true SensitiveABAPReports, fixedABAPReports| summarize by ABAPProgram;\n// CONFIGURATION OPTION- exclude system users which are OK to download massive amounts of sensitive data\n// by adding those users in the SAP_User_Config watchlist with a tag of 'MassiveDownloadsOK'\n// can also specify SAP Roles or Profiles to exclude\nlet excludeUsersTags= dynamic(['MassiveDownloadsOK','SAP_ROLE1', 'SAP_PROFILE1']);\nlet excludedUsers= SAPUsersGetVIP(SearchForTags= excludeUsersTags)| summarize by User2Exclude=SAPUser;\n// Get direct sensitive table access\nlet SensitiveTableAccess= SAPAuditLog\n    | where TimeGenerated > ago (TimeAgo*2) and ingestion_time() > ago(TimeAgo)\n    | where MessageID == \"DU9\"\n    | where SystemID in (SelectedSystems)\n    | where Variable1 in (SensitiveTables)\n    | project-rename Table = Variable1, Activity = Variable2\n    | summarize Activities= make_set(Activity, 3) by TimeAccessed= bin(TimeGenerated, TimeBetweenAccessAndDownload), SystemID, ClientID, User, ABAPProgramName\n    , Table, SourceAction= strcat(\"after visiting transaction \", TransactionCode, \" and viewing sensitive table \", Table), TransactionCode, TableOrProgram= Table;\n// get sensitive program execution\nlet SensitiveProgramExec= SAPAuditLog\n    | where TimeGenerated > ago (TimeAgo*2) and ingestion_time() > ago(TimeAgo)\n    | where MessageID == \"AUW\"\n    | where SystemID in (SelectedSystems)\n    | where ABAPProgramName in (UnionABAP)\n    | summarize by TimeAccessed= bin(TimeGenerated, TimeBetweenAccessAndDownload), SystemID, ClientID, User, ABAPProgramName\n    , SourceAction= strcat(\"after executing sensitive program \", ABAPProgramName), TransactionCode, TableOrProgram= ABAPProgramName ;\n// get sensitive transaction execution\nlet SensitiveTcodeExec= SAPAuditLog\n    | where TimeGenerated > ago (TimeAgo*2) and ingestion_time() > ago(TimeAgo)\n    | where MessageID == \"AU3\"\n    | where SystemID in (SelectedSystems)\n    // make sure sensitive transactions do not contain the TableAccessTcodes which are checked for the specific table name\n    | where TransactionCode in (set_difference(SensitiveTcodes,TableAccessTcodes))\n    | summarize by TimeAccessed= bin(TimeGenerated, TimeBetweenAccessAndDownload), SystemID, ClientID, User, ABAPProgramName, SourceAction= strcat(\"after executing sensitive transaction \", TransactionCode), TransactionCode, TableOrProgram= TransactionCode;\n// Get all downloads\nlet FileDownloads= SAPAuditLog\n    | where MessageID == \"AUY\"\n    | where TimeGenerated > ago (TimeAgo*2) and ingestion_time() > ago(TimeAgo)\n    | where SystemID in (SelectedSystems)\n    | where TransactionCode in (SensitiveTcodes) or ABAPProgramName in (UnionABAP)\n    | join kind=leftantisemi excludedUsers on $left.User == $right.User2Exclude // exclude specific users\n    | extend ByteCount= toint(replace_string(replace_string(Variable1, \".\",\"\"), \",\",\"\")), Code=Variable2, Path= Variable3\n    | summarize DownloadsByUser = count(), Paths= make_set(Variable3, 10), ByteCount=sum(ByteCount) by TimeDownloaded= bin(TimeGenerated, TimeBetweenAccessAndDownload), SystemID, ClientID, User, TerminalIPv6, Email, Host, TransactionCode, Instance;\n// Time window join to find dowloads after table access\nFileDownloads | join kind=inner (SensitiveTableAccess | union SensitiveProgramExec, SensitiveTcodeExec) on User, SystemID\n    | where (TimeAccessed- TimeDownloaded) between (-(TimeBetweenAccessAndDownload*2) .. 0h)\n    | summarize Activities= tostring( make_set_if(Activities, tostring(Activities) != \"\")), DownloadsByUser= max(DownloadsByUser), ByteCount=max(ByteCount), TablesOrPrograms=make_set(TableOrProgram,10), SourceActions= make_set(SourceAction,10), TimeAccessed= any(TimeAccessed) by TimeDownloaded, User, SystemID, ClientID, Email, Host , TerminalIPv6, Paths= tostring(Paths), Instance\n    | where ByteCount > ByteCountThreshold\n    | extend PackedDetails= pack_all()\n    | extend Details= strcat(\"User \", User, \" has downloaded \", ByteCount, \" bytes of potentially sensitive data \")\n    | extend AlertDetails= strcat(Details , tostring(SourceActions)), Dummy= ''\n",
                                "queryFrequency": "PT4H",
                                "queryPeriod": "P7D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP",
                                        "dataTypes": [
                                            "SAPUsersGetVIP",
                                            "SAPSystems",
                                            "SAPAuditLog"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Exfiltration"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "HostName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "ProcessId",
                                                "columnName": "TablesOrPrograms"
                                            }
                                        ],
                                        "entityType": "Process"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "AlertPerResult"
                                },
                                "customDetails": {
                                    "TablesOrPrograms": "TablesOrPrograms",
                                    "SourceActions": "SourceActions",
                                    "Paths": "Paths",
                                    "PackedDetails": "PackedDetails",
                                    "Activities": "Activities",
                                    "SAP_User": "User"
                                },
                                "alertDetailsOverride": {
                                    "alertDisplayNameFormat": "{{Details}}",
                                    "alertSeverityColumnName": "Dummy",
                                    "alertTacticsColumnName": "Dummy",
                                    "alertDescriptionFormat": "High volume of data exported via files in proximity to an execution of a sensitive transaction, a sensitive program or direct access to sensitive table.\nActions that triggered this alert:\n{{SourceActions}}\n\nThere are a few ways to exclude users, transactions and tables listed in the alert's KQL body.\n"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId11'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 11",
                                "parentId": "[variables('analyticRuleId11')]",
                                "contentId": "[variables('analyticRulecontentId11')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion11')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName12')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 12 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName12'),'/',variables('analyticRuleVersion12'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName12'))]"
            ],
            "properties": {
                "description": "SAP - (Preview) New trusted RFC connection capture-replay vulnerability in SAP NetWeaver [CVE-2023-0014] _AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion12')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId12')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "SAP NetWeaver ABAP Server and ABAP Platform creates information about system identity in an ambiguous format. <br/> This may be exploited by malicious users to obtain illegitimate access to the system. <br/> Read SAP note 3281854 - FAQ for Security Note 3089413 for more details. This alert rule helps to identify newly added trusted RFC relationships.",
                                "displayName": "SAP - (Preview) New trusted RFC connection capture-replay vulnerability in SAP NetWeaver [CVE-2023-0014] ",
                                "enabled": false,
                                "query": "//  a per SAP note https://launchpad.support.sap.com/#/notes/3089413\nlet TimeAgo= 1h;\nlet Vulnerability= 'SAP - [CVE-2023-0014] Capture-replay vulnerability in a ';\n// CONFIGURATION OPTION- determine which system roles are relevant for this alert\nlet SelectedSystemRoles =  dynamic([\"All System Roles\"]); //can also do// let SelectedSystemRoles =  dynamic([\"Production\", \"UAT\"]);\nlet SelectedSystems = SAPSystems(SelectedSystemRoles= SelectedSystemRoles)\n    | project SystemID= SearchKey, SystemRole, SystemUsage\n    | extend SystemRole= replace_string(SystemRole, 'Unknown (Production)', 'Unknown');\nSAPTableDataLog\n| where TimeGenerated > ago(TimeAgo * 2)\n| where ingestion_time() > ago(TimeAgo)\n| where isempty(OldValue)\n| where TableName == \"RFCTRUST\" or TableName == \"RFCSYSACL\"\n| join kind = inner SelectedSystems on SystemID\n| extend row= bag_pack(TableField, NewValue)\n| summarize\n    TimeStarted= any(TimeGenerated),\n    SystemRole= any(SystemRole),\n    BagRow= make_bag(row)\n    by SystemID, DBLogID, LogKey, TableName\n| evaluate bag_unpack(BagRow)\n| extend\n    RFCSYSID= column_ifexists('RFCSYSID', ''),\n    RFCTRUSTID= column_ifexists('RFCTRUSTID', '')\n| where isnotempty(RFCSYSID) or isnotempty(RFCTRUSTID)\n| extend AlertName = iff(TableName == 'RFCTRUST', strcat('New trusting system added for ', SystemRole, ' system ', SystemID), strcat('New system added as trusted for ', SystemRole, ' system ', SystemID))\n| extend AlertDescription= strcat(iff(TableName == 'RFCTRUST', strcat('System ', RFCSYSID, ' is now trusting system ', RFCTRUSTID), strcat('System ', SystemID, ' is now being trusted by system ', RFCSYSID)), '. <br/> see  ', Vulnerability)\n| extend OtherSystem= iff(TableName == 'RFCTRUST', RFCTRUSTID, RFCSYSID)\n| extend ExtendedLink= 'https://www.cve.org/CVERecord?id=CVE-2023-0014' , Dummy= ''\n\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT12H",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP",
                                        "dataTypes": [
                                            "SAPSystems"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "CredentialAccess"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "OtherSystem"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "AlertPerResult"
                                },
                                "alertDetailsOverride": {
                                    "alertDisplayNameFormat": "SAP - {{AlertName}} [CVE-2023-0014] ",
                                    "alertSeverityColumnName": "Dummy",
                                    "alertTacticsColumnName": "Dummy",
                                    "alertDescriptionFormat": "{{AlertDescription}}\n"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId12'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 12",
                                "parentId": "[variables('analyticRuleId12')]",
                                "contentId": "[variables('analyticRulecontentId12')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion12')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName13')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 13 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName13'),'/',variables('analyticRuleVersion13'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName13'))]"
            ],
            "properties": {
                "description": "SAP - (Preview) Printing of potentially sensitive data_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion13')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId13')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "The alert rule was disabled due to too many consecutive failures. Reason: Server is failing to execute the query of this rule, please verify the query. User has requested printing or has printed data which is potentially sensitive.\nData is considered sensitive if it is obtained by using a sensitive transaction, by executing a sensitive program or by directly accessing a sensitive table.",
                                "displayName": "SAP - (Preview) Printing of potentially sensitive data",
                                "enabled": false,
                                "query": "// SAP - Potentially sensitive data exported via spool request\n// Spool requests made by users who were obsereved accessing sensitive data\n// or sensitive programs/ transactions\n// actual lookback is set by setting TimeAgo\nlet TimeAgo= 4h;\nlet TimeBetweenAccessAndDownload= 30m;\n// CONFIGURATION OPTION- determine which system roles are relevant for this alert\nlet SelectedSystemRoles=  dynamic([\"Production\"]); //can also do// let SelectedSystemRoles =  dynamic([\"Production\", \"UAT\"]); dynamic([\"All System Roles\"])\n// let SelectedSystemRoles= dynamic([\"All System Roles\"]);\nlet SelectedSystems = SAPSystems(SelectedSystemRoles= SelectedSystemRoles)\n    | project SystemID= SearchKey;\n// Get sensitive Tables\n// CONFIGURATION OPTION- list sensitive tables in the 'SAP - Sensitive Tables' watchlist\nlet SensitiveTables = _GetWatchlist('SAP - Sensitive Tables')\n    | summarize by Table;\nlet TableAccessTcodes= dynamic([\"SE16\", \"SE16N\", \"SE11\", \"SE16H\", \"SM30\", \"SE12\", \"SM31\", \"SE16H\", \"SE14\", \"SE54\", \"SE17\", \"SE16T\", \"DB01\", \"DB02\"]);\n// CONFIGURATION OPTION- list sensitive transactions in the 'SAP - Sensitive Transactions' watchlist\nlet SensitiveTransWL= toscalar(_GetWatchlist('SAP - Sensitive Transactions')\n    | summarize TransactionCodes= make_set(TransactionCode));\n// CONFIGURATION OPTION- exclude TCODEs which are not to be considered\nlet ExcludedTcodes= dynamic([\"S000\", \"\"]);\nlet SensitiveTcodes= (set_difference(set_union(SensitiveTransWL, TableAccessTcodes), ExcludedTcodes));\n// CONFIGURATION OPTION- list sensitive programs in the 'SAP - Sensitive ABAP Programs' watchlist\nlet SensitiveABAPReports = _GetWatchlist('SAP - Sensitive ABAP Programs');\nlet fixedABAPReports = datatable(ABAPProgram: string) [\"RSPFLDOC\"];\nlet UnionABAP = union isfuzzy=true SensitiveABAPReports, fixedABAPReports\n    | summarize by ABAPProgram;\n// CONFIGURATION OPTION- exclude system users which are OK to print sensitive data\n// by adding those users in the SAP_User_Config watchlist with a tag of 'PrintSensitivesOK'\n// can also specify SAP Roles or Profiles to exclude\nlet excludeUsersTags= dynamic(['PrintSensitivesOK', 'SAP_ROLE1', 'SAP_PROFILE1']);\nlet excludedUsers= SAPUsersGetVIP(SearchForTags= excludeUsersTags)\n    | summarize by User2Exclude=SAPUser;\n// Get direct sensitive table access\nlet SensitiveTableAccess= SAPAuditLog\n    | where TimeGenerated > ago (TimeAgo * 2) and ingestion_time() > ago(TimeAgo)\n    | where MessageID == \"DU9\"\n    | where SystemID in (SelectedSystems)\n    | where Variable1 in (SensitiveTables)\n    | project-rename Table = Variable1, Activity = Variable2\n    | summarize Activities= make_set(Activity, 3)\n        by TimeAccessed= bin(TimeGenerated, TimeBetweenAccessAndDownload), SystemID, ClientID, User, ABAPProgramName, Email, Host, TerminalIPv6\n        , Table, SourceAction= strcat(\"after visiting transaction \", TransactionCode, \" and viewing sensitive table \", Table), TransactionCode, TableOrProgram= Table, Instance;\n// get sensitive program execution\nlet SensitiveProgramExec= SAPAuditLog\n    | where TimeGenerated > ago (TimeAgo * 2) and ingestion_time() > ago(TimeAgo)\n    | where MessageID == \"AUW\"\n    | where SystemID in (SelectedSystems)\n    | where ABAPProgramName in (UnionABAP)\n    | summarize\n        by\n        TimeAccessed= bin(TimeGenerated, TimeBetweenAccessAndDownload),\n        SystemID,\n        ClientID,\n        User,\n        ABAPProgramName,\n        Email,\n        Host,\n        TerminalIPv6,\n        SourceAction= strcat(\"after executing sensitive program \", ABAPProgramName),\n        TransactionCode,\n        TableOrProgram= ABAPProgramName,\n        Instance;\n// get sensitive transaction execution\nlet SensitiveTcodeExec= SAPAuditLog\n    | where TimeGenerated > ago (TimeAgo * 2) and ingestion_time() > ago(TimeAgo)\n    | where MessageID == \"AU3\"\n    | where SystemID in (SelectedSystems)\n    // make sure sensitive transactions do not contain the TableAccessTcodes which are checked for the specific table name\n    | where TransactionCode in (set_difference(SensitiveTcodes, TableAccessTcodes))\n    | summarize\n        by\n        TimeAccessed= bin(TimeGenerated, TimeBetweenAccessAndDownload),\n        SystemID,\n        ClientID,\n        User,\n        ABAPProgramName,\n        SourceAction= strcat(\"after executing sensitive transaction \", TransactionCode),\n        TransactionCode,\n        TableOrProgram= TransactionCode,\n        Email,\n        Host,\n        TerminalIPv6,\n        Instance;\n// Get all spool requests\nlet SpoolRequests= SAPSpoolLog\n    | where TimeGenerated > ago (TimeAgo * 2) and ingestion_time() > ago(TimeAgo)\n    | summarize\n        by\n        SpoolRequestNumber,\n        ClientID,\n        User,\n        RecipientofSpoolRequest,\n        SpoolRequestSuffix2,\n        SpoolRequestTitle,\n        SystemID,\n        OutputDevice,\n        DeleteSpoolRequestAuto,\n        TimeRequested= TimeGenerated,\n        ValueAuthCheck;\nlet SpoolOutputs= SAPSpoolOutputLog\n    | where TimeGenerated > ago (TimeAgo * 2) and ingestion_time() > ago(TimeAgo)\n    | summarize\n        by\n        SpoolRequestNumber,\n        User,\n        RecipientofSpoolRequest,\n        PhysicalFormatType,\n        SystemID,\n        ClientID,\n        TimePrinted= TimeGenerated\n    | lookup (SAP_USR02\n        | summarize by SystemID, RecipientofSpoolRequest= BNAME, USTYP, ClientID= MANDT)\n        on RecipientofSpoolRequest, SystemID, ClientID\n    | extend\n        HasPrinted= true,\n        PrintRecievedByAnother= iff(User == RecipientofSpoolRequest, false, iff(isempty(USTYP), false, true));\nSpoolRequests\n| join kind=inner (SensitiveTableAccess\n    | union SensitiveProgramExec, SensitiveTcodeExec)\n    on User, SystemID\n| where (TimeAccessed - TimeRequested) between (-(TimeBetweenAccessAndDownload * 2) .. 0h)\n| lookup SpoolOutputs on SpoolRequestNumber, SystemID, ClientID\n| summarize Activities= tostring(make_set_if(Activities, tostring(Activities) != \"\"))\n    , TablesOrPrograms=make_set(TableOrProgram, 10), SourceActions= make_set(SourceAction, 10)\n    , TimeAccessed= min(TimeAccessed), TimeRequested= min(TimeRequested), HasPrinted=max(HasPrinted)\n    , PrintRecievedByAnother=max(PrintRecievedByAnother), RecipientofSpoolRequest= max(RecipientofSpoolRequest)\n    by\n    User,\n    SystemID,\n    Email,\n    Host,\n    TerminalIPv6,\n    ClientID,\n    Instance\n| extend PackedDetails= pack_all()\n| extend Details= strcat(\"User \", User, \" has \", iff(HasPrinted, \"printed\", \"requested printing of\"), \" potentially sensitive data \")\n| extend AlertDetails= strcat(Details, tostring(SourceActions), iff(PrintRecievedByAnother, strcat(\"<br/> Print has been pulled by another User \", RecipientofSpoolRequest), \"\")), Dummy= ''\n",
                                "queryFrequency": "PT4H",
                                "queryPeriod": "PT5H",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP",
                                        "dataTypes": [
                                            "SAPUsersGetVIP",
                                            "SAPSystems",
                                            "SAPAuditLog"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Exfiltration"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "HostName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "ProcessId",
                                                "columnName": "TablesOrPrograms"
                                            }
                                        ],
                                        "entityType": "Process"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "AlertPerResult"
                                },
                                "customDetails": {
                                    "PackedDetails": "PackedDetails",
                                    "SourceActions": "SourceActions",
                                    "Activities": "Activities",
                                    "SAP_User": "User",
                                    "TablesOrPrograms": "TablesOrPrograms"
                                },
                                "alertDetailsOverride": {
                                    "alertDisplayNameFormat": "{{Details}}",
                                    "alertSeverityColumnName": "Dummy",
                                    "alertTacticsColumnName": "Dummy",
                                    "alertDescriptionFormat": "Printing requested in proximity to an execution of a sensitive transaction, a sensitive program or direct access to sensitive table.\nActions that triggered this alert:\n{{SourceActions}}\nThere are a few ways to exclude users, transactions and tables listed in the alert's KQL body.\n"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId13'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 13",
                                "parentId": "[variables('analyticRuleId13')]",
                                "contentId": "[variables('analyticRulecontentId13')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion13')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName14')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 14 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName14'),'/',variables('analyticRuleVersion14'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName14'))]"
            ],
            "properties": {
                "description": "SAP - (Preview) Sensitive data saved into a USB drive_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion14')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId14')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "SAP data exported via files and saved into a recently mounted USB drive in proximity to an execution of a sensitive transaction, a sensitive program or direct access to a sensitive table.",
                                "displayName": "SAP - (Preview) Sensitive data saved into a USB drive",
                                "enabled": false,
                                "query": "// SAP - Sensitive data saved into a USB drive\n// Data exported via files and saved into a recently mounted USB drive in proximity to an execution of a sensitive transaction, a sensitive program or direct access to sensitive table.\n// !!!IMPORTANT!!!\n// please keep \"Lookup data from the last\" to be 14 days to allow coverage of USB drive mount events\n// actual lookback is set by setting TimeAgo\nlet TimeAgo= 4h;\nlet TimeBetweenAccessAndDownload= 60m;\nlet FilesDownloadedToUSB= DeviceFileEvents\n    | where ingestion_time() >= ago(TimeAgo)\n    | join kind=inner  (DeviceEvents\n    | where ActionType == \"UsbDriveMounted\"\n    | extend DriveLetter = tostring(AdditionalFields.DriveLetter)\n    | summarize MountedDriveLetters = make_set(DriveLetter, 26) by DeviceId, DeviceName)\n    on DeviceId\n| extend TargetDriveLetter = tostring(split(FolderPath, \"\\\\\")[0])\n| where set_has_element(MountedDriveLetters, TargetDriveLetter)\n| project USBFileSize= FileSize, USBFolderPath= FolderPath;\n// CONFIGURATION OPTION- determine which system roles are relevant for this alert\nlet SelectedSystemRoles=  dynamic([\"Production\"]); //can also do// let SelectedSystemRoles =  dynamic([\"Production\", \"UAT\"]); dynamic([\"All System Roles\"])\n// let SelectedSystemRoles= dynamic([\"All System Roles\"]);\nlet SelectedSystems = SAPSystems(SelectedSystemRoles= SelectedSystemRoles) | project SystemID= SearchKey;\n// Get sensitive Tables\n// CONFIGURATION OPTION- list sensitive tables in the 'SAP - Sensitive Tables' watchlist\nlet SensitiveTables = _GetWatchlist('SAP - Sensitive Tables') | summarize by Table;\nlet TableAccessTcodes= dynamic([\"SE16\", \"SE16N\", \"SE11\", \"SE16H\", \"SM30\", \"SE12\", \"SM31\", \"SE16H\", \"SE14\", \"SE54\",\"SE17\", \"SE16T\", \"DB01\", \"DB02\"]);\n// CONFIGURATION OPTION- list sensitive transactions in the 'SAP - Sensitive Transactions' watchlist\nlet SensitiveTransWL= toscalar(_GetWatchlist('SAP - Sensitive Transactions') | summarize TransactionCodes= make_set(TransactionCode));\n// CONFIGURATION OPTION- exclude TCODEs which are not to be considered\nlet ExcludedTcodes= dynamic([\"S000\", \"\"]);\nlet SensitiveTcodes= (set_difference(set_union(SensitiveTransWL, TableAccessTcodes), ExcludedTcodes));\n// CONFIGURATION OPTION- list sensitive programs in the 'SAP - Sensitive ABAP Programs' watchlist\nlet SensitiveABAPReports = _GetWatchlist('SAP - Sensitive ABAP Programs');\nlet fixedABAPReports = datatable(ABAPProgram:string) [\"RSPFLDOC\"];\nlet UnionABAP = union isfuzzy=true SensitiveABAPReports, fixedABAPReports| summarize by ABAPProgram;\n// Get direct sensitive table access\nlet SensitiveTableAccess= SAPAuditLog\n    | where TimeGenerated > ago (TimeAgo*2) and ingestion_time() > ago(TimeAgo)\n    | where MessageID == \"DU9\"\n    | where SystemID in (SelectedSystems)\n    | where Variable1 in (SensitiveTables)\n    | project-rename Table = Variable1, Activity = Variable2\n    | summarize Activities= make_set(Activity, 3) by TimeAccessed= bin(TimeGenerated, TimeBetweenAccessAndDownload), SystemID, ClientID, User, ABAPProgramName\n    , Table, SourceAction= strcat(\"after visiting transaction \", TransactionCode, \" and viewing sensitive table \", Table), TransactionCode, TableOrProgram= Table;\n// get sensitive program execution\nlet SensitiveProgramExec= SAPAuditLog\n    | where TimeGenerated > ago (TimeAgo*2) and ingestion_time() > ago(TimeAgo)\n    | where MessageID == \"AUW\"\n    | where SystemID in (SelectedSystems)\n    | where ABAPProgramName in (UnionABAP)\n    | summarize by TimeAccessed= bin(TimeGenerated, TimeBetweenAccessAndDownload), SystemID, ClientID, User, ABAPProgramName\n    , SourceAction= strcat(\"after executing sensitive program \", ABAPProgramName), TransactionCode, TableOrProgram= ABAPProgramName ;\n// get sensitive transaction execution\nlet SensitiveTcodeExec= SAPAuditLog\n    | where TimeGenerated > ago (TimeAgo*2) and ingestion_time() > ago(TimeAgo)\n    | where MessageID == \"AU3\"\n    | where SystemID in (SelectedSystems)\n    // make sure sensitive transactions do not contain the TableAccessTcodes which are checked for the specific table name\n    | where TransactionCode in (set_difference(SensitiveTcodes,TableAccessTcodes))\n    | summarize by TimeAccessed= bin(TimeGenerated, TimeBetweenAccessAndDownload), SystemID, ClientID, User, ABAPProgramName, SourceAction= strcat(\"after executing sensitive transaction \", TransactionCode), TransactionCode, TableOrProgram= TransactionCode;\n// Get all downloads\nlet FileDownloads= SAPAuditLog\n    | where MessageID == \"AUY\"\n    | where TimeGenerated > ago (TimeAgo*2) and ingestion_time() > ago(TimeAgo)\n    | where SystemID in (SelectedSystems)\n    | where TransactionCode in (SensitiveTcodes) or ABAPProgramName in (UnionABAP)\n    | join kind= innerunique FilesDownloadedToUSB on $left.Variable3== $right.USBFolderPath\n    | extend ByteCount= toint(replace_string(replace_string(Variable1, \".\",\"\"), \",\",\"\")), Code=Variable2, Path= Variable3\n    | summarize DownloadsByUser = count(), Paths= make_set(Variable3, 10), ByteCount=sum(ByteCount) by TimeDownloaded= bin(TimeGenerated, TimeBetweenAccessAndDownload), SystemID, ClientID, User, TerminalIPv6, Email, Host, TransactionCode, Instance;\n// Time window join to find dowloads after table access\nFileDownloads | join kind=inner (SensitiveTableAccess | union SensitiveProgramExec, SensitiveTcodeExec) on User, SystemID\n    | where (TimeAccessed- TimeDownloaded) between (-(TimeBetweenAccessAndDownload*2) .. 0h)\n    | summarize Activities= tostring( make_set_if(Activities, tostring(Activities) != \"\")), DownloadsByUser= max(DownloadsByUser), ByteCount=max(ByteCount), TablesOrPrograms=make_set(TableOrProgram,10), SourceActions= make_set(SourceAction,10), TimeAccessed= any(TimeAccessed) by TimeDownloaded, User, SystemID, ClientID, Email, Host , TerminalIPv6, Paths= tostring(Paths), Instance\n    | extend PackedDetails= pack_all()\n    | extend Details= strcat(\"User \", User, \" has downloaded \", ByteCount, \" bytes of potentially sensitive data \")\n    | extend AlertDetails= strcat(Details , tostring(SourceActions)), Dummy= ''\n",
                                "queryFrequency": "PT4H",
                                "queryPeriod": "P7D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP",
                                        "dataTypes": [
                                            "SAPSystems",
                                            "SAPAuditLog"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Exfiltration"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "HostName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "ProcessId",
                                                "columnName": "TablesOrPrograms"
                                            }
                                        ],
                                        "entityType": "Process"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "AlertPerResult"
                                },
                                "customDetails": {
                                    "TablesOrPrograms": "TablesOrPrograms",
                                    "SourceActions": "SourceActions",
                                    "Paths": "Paths",
                                    "PackedDetails": "PackedDetails",
                                    "Activities": "Activities",
                                    "SAP_User": "User"
                                },
                                "alertDetailsOverride": {
                                    "alertDisplayNameFormat": "{{Details}}",
                                    "alertSeverityColumnName": "Dummy",
                                    "alertTacticsColumnName": "Dummy",
                                    "alertDescriptionFormat": "High volume of data exported via files in proximity to an execution of a sensitive transaction, a sensitive program or direct access to sensitive table.\nActions that triggered this alert:\n{{SourceActions}}\n\nThere are a few ways to exclude users, transactions and tables listed in the alert's KQL body.\n"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId14'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 14",
                                "parentId": "[variables('analyticRuleId14')]",
                                "contentId": "[variables('analyticRulecontentId14')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion14')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName15')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 15 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName15'),'/',variables('analyticRuleVersion15'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName15'))]"
            ],
            "properties": {
                "description": "SAP - Activation or Deactivation of ICF Service_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion15')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId15')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies activation or deactivation of ICF Services.\nSource Action: Activate or deactivate a service using SICF.\n*Data Sources: SAPcon - Table Data Log*",
                                "displayName": "SAP - Activation or Deactivation of ICF Service",
                                "enabled": false,
                                "query": "// Activation or Deactivation of ICF Service\n// Materialize the data for self join to be esier\nlet TimeAgo= 2h;\nlet ICFDataChanges = materialize(SAPTableDataLog\n| where TimeGenerated > TimeAgo\n| where TableName == \"ICFSERVLOC\"\n| where NewValue == \"X\" or NewValue ==\"\" or isempty( NewValue)// X - Status is activated, \"\" Not activated now\n| where TableField == \"ICF_NAME\" or TableField == \"ICFACTIVE\"// Service name// Active status\n| project OldValue, NewValue, LogKey, DBLogID, SystemID, TimeGenerated, UserName, Host, Instance);\nlet ActDeactICF =\nICFDataChanges\n| where OldValue == NewValue and OldValue != \"\"\n| lookup ICFDataChanges on\nLogKey, DBLogID // Lookup for combining the data\n| extend ICFServiceStatus = iff(NewValue1 == \"X\", \"Activated\", iff(NewValue1 == \"\" or isempty( NewValue1) and OldValue1 == \"X\" ,\"Deactivated\",\"No Activity\"))\n| extend Service = split(LogKey,\" \")[0];\nActDeactICF\n| lookup SAPUsersHeader() on SystemID, $left.UserName== $right.User\n| extend AlertText= strcat(\"Service \", Service, \" \", ICFServiceStatus, \" by User \", UserName, \" in System \", SystemID)//{{Service}} {{ICFServiceStatus}} by User {{User}} in System {{SystemID}}\n| project TimeGenerated, Service, PrimaryIP, PrimaryEmail, KnownIPs, KnownEmails, LastKnownIP, User= UserName, Host, SystemID, Client, Instance, ICFServiceStatus, AlertText\n| extend Dummy = ''\n",
                                "queryFrequency": "PT2H",
                                "queryPeriod": "P2D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP",
                                        "dataTypes": [
                                            "SAPUsersHeader",
                                            "SAPTableDataLog"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "CommandAndControl",
                                    "LateralMovement",
                                    "Persistence"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "PrimaryEmail"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "Client"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "LastKnownIP"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "SAP_User": "User"
                                },
                                "alertDetailsOverride": {
                                    "alertDisplayNameFormat": "SAP - High - {{AlertText}}",
                                    "alertSeverityColumnName": "Dummy",
                                    "alertTacticsColumnName": "Dummy",
                                    "alertDescriptionFormat": "Identifies activation or deactivation of ICF Services.\nSource Action: Activate or deactivate a service using SICF.\n*Data Sources: SAPcon - Table Data Log*\n"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId15'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 15",
                                "parentId": "[variables('analyticRuleId15')]",
                                "contentId": "[variables('analyticRulecontentId15')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion15')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName16')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 16 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName16'),'/',variables('analyticRuleVersion16'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName16'))]"
            ],
            "properties": {
                "description": "SAP - Assignment of a sensitive profile_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion16')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId16')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies new assignments of a sensitive profile to a user.\n\nSource Action: Assign a profile to a User using SU01.\n\nSensitive profiles can be maintained using the \"SAP - Sensitive Profiles\" watchlist\n\n*Data Sources: SAPcon -  Change Documents Log*",
                                "displayName": "SAP - Assignment of a sensitive profile",
                                "enabled": false,
                                "query": "// Define Variables\n// Audit Log Classes - Authorizations for user changed\n// the actual lookback period is 1h. The alert looks back further to allow for user master data to be built slowly\nlet TimeAgo= 12h;\nlet Identity = 'IDENTITY';\nlet ProfileChangeDoc = 'SUSR_UST04';\nlet Insert = \"I\";\nlet logsThreshold = 3600; // 3600 seconds\nlet AuditClasses = dynamic(['AUB']); // Authorizations for user &A changed.\n// Maintain these if WatchList is not available\nlet SensitiveProfiles =  _GetWatchlist('SAP - Sensitive Profiles');\nlet fixedProfile = datatable(Profile:string)['SAP_ALL','SAP_NEW'];// Maintain these if System doesn't have CR's\n// here you can exclude system users which are OK to assign a Sensitive profile\n// by adding those users in the SAP_User_Config watchlist with a tag of 'AssignSensitiveProfileOK'\n// can also specify SAP Roles or Profiles to exclude\nlet excludeUsersTags= dynamic(['AssignSensitiveProfileOK']);\nlet excludedUsers= SAPUsersGetVIP(SearchForTags= excludeUsersTags)| summarize by User2Exclude=SAPUser;\nlet fixedChangeDocs = datatable(User : string, ObjectClass : string, TableName : string, TypeofChange_Item : string , ChangedTableKey : string, ObjectID : string, TimeGenerated : datetime, ValueNew : string, SystemID : string, Instance: string, ClientID: string, UpdatedOn_t: datetime)[];\nlet ChangeDocs =\n(union isfuzzy=true table(\"SAPChangeDocsLog\"), fixedChangeDocs)\n| where ingestion_time() > ago(TimeAgo)\n| project-rename ChangedOn= UpdatedOn_t;\nlet IdentityChangeDocuments =\n// Identity Change documents which represents profiles assignment\n    ChangeDocs\n    | where ObjectClass == Identity // Identity\n    and TableName == ProfileChangeDoc // Profile Change Doc\n    and TypeofChange_Item == Insert // Insert\n    | extend Profile = ChangedTableKey\n    | extend UserAssigned = ObjectID;\nlet UnitedProfiles =\ntoscalar(union fixedProfile, SensitiveProfiles\n| summarize Profiles = make_list(Profile));\n// Query logic\nSAPAuditLog\n| where ingestion_time() > ago(TimeAgo)\n| where MessageID in (AuditClasses)\n| project-rename AuditedOn= UpdatedOn_t\n| summarize by AuditedOn, TerminalIPv6, User, Host, Email\n| join kind=leftantisemi excludedUsers on $left.User == $right.User2Exclude\n| lookup kind = leftouter (IdentityChangeDocuments) on User\n| where Profile in (UnitedProfiles)\n| where abs(datetime_diff('second',ChangedOn,AuditedOn)) <= logsThreshold\nor isnull(AuditedOn)\n| project\n// Details\nChangedOn, Instance , SystemID, ClientID, Profile, User,  UserAssigned,\nEmail, TerminalIPv6, Host, AuditedOn\n| extend Dummy= '',  PackedDetails= pack_all()\n",
                                "queryFrequency": "PT12H",
                                "queryPeriod": "P7D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP",
                                        "dataTypes": [
                                            "SAPUsersGetVIP"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "AlertPerResult"
                                },
                                "customDetails": {
                                    "PackedDetails": "PackedDetails",
                                    "SAP_Profile": "Profile",
                                    "UserAssigned": "UserAssigned",
                                    "SAP_User": "User"
                                },
                                "alertDetailsOverride": {
                                    "alertDisplayNameFormat": "SAP - Sensitive profile {{Profile}} has been assigned by user {{User}} to user {{UserAssigned}}",
                                    "alertSeverityColumnName": "Dummy",
                                    "alertTacticsColumnName": "Dummy",
                                    "alertDescriptionFormat": "Sensitive profiles are maintained in watchlist 'SAP - Sensitive Profiles' in System {{SystemID}}.\n{PackedDetails}\nIdentifies new assignments of a sensitive profile to a user.\n\nSource Action: Assign a profile to a User using SU01.\n\nSensitive profiles can be maintained using the \"SAP - Sensitive Profiles\" watchlist\n\n\n"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId16'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 16",
                                "parentId": "[variables('analyticRuleId16')]",
                                "contentId": "[variables('analyticRulecontentId16')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion16')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName17')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 17 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName17'),'/',variables('analyticRuleVersion17'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName17'))]"
            ],
            "properties": {
                "description": "SAP - Assignment of a sensitive role_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion17')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId17')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies new assignments for a sensitive role to a user.\n\nSource Action: Assign a role to a User using SU01 / PFCG.\n\nSensitive roles should be maintained in watchlist \"SAP -  Sensitive Roles\"\n\n*Data Sources: SAPcon -  Change Documents Log, Audit Log*",
                                "displayName": "SAP - Assignment of a sensitive role",
                                "enabled": false,
                                "query": "// Assignment of a sensitive role\n// Define Variables\nlet Roles = 'PFCG';\nlet UsersRoles = 'AGR_USERS';\nlet Insert = \"I\";\nlet logsThreshold = 3600; // 3600 seconds\n// Audit Log Classes - Authorizations for user changed\nlet AuditClasses = dynamic(['AUB', 'AUD']); // Authorizations for user &A changed.\n// Maintain these if WatchList is not available\nlet SensitiveRoles =  _GetWatchlist('SAP - Sensitive Roles');\nlet fixedRoles = datatable(Role: string)['SAP_BC_BASIS_ADMIN', 'SAP_BC_AUTH_PROFILE_ADMIN'];\n// here you can exclude system users which are OK to assign sensitive roles\n// by adding those users in the SAP_User_Config watchlist with a tag of 'SensitiveRoleOK'\nlet excludeUsersTags= dynamic(['SensitiveRoleOK']);\nlet excludedUsers= _GetWatchlist('SAP_User_Config')| where Tags has_any (excludeUsersTags)| summarize by User2Exclude=SAPUser;\nlet UnitedRoles =\ntoscalar(union fixedRoles, SensitiveRoles\n| summarize Roles = make_list(Role));\nlet ChangeCheck =\nSAPChangeDocsLog\n| where ObjectClass == Roles // Roles\n    and TableName == UsersRoles // Users Roles\n    and TypeofChange_Item == Insert // Insert\n| extend UserAssigned = trim_end(@\"[^\\w]+\" ,extract(@\"^.{1,33}\\s*?(.{1,12})\\s*?\\d{16}\", 1, ChangedTableKey))\n| extend Role = ObjectID\n| where Role in (UnitedRoles);\n// Query logic\nSAPAuditLog\n| where MessageID in (AuditClasses)\n| summarize by TimeGenerated, TerminalIPv6, User, Host, Email, ClientID, SystemID\n| extend User= trim_end(@\"[^\\w]+\" , User)\n| lookup kind = inner (ChangeCheck) on User, ClientID, SystemID\n| where Role in (UnitedRoles)\n| join kind=leftantisemi excludedUsers on $left.User == $right.User2Exclude\n| project-rename TimeGenAudit = TimeGenerated1\n| where abs(datetime_diff('second', TimeGenerated, TimeGenAudit)) <= logsThreshold\nor isnull(TimeGenAudit)\n| extend AlertDescription= iff(User == UserAssigned,strcat('User ', User, ' has self-assigned a sensitive role '),strcat('User ', User, ' has Assigned a sensitive role to User ', UserAssigned))\n| extend Severity= iff(User == UserAssigned, \"High\", \"Medium\")\n| extend PackedDetails= pack_all(), Dummy=' '\n| lookup (SAPUsersEmail | project SystemID, ClientID, UserAssigned= User, UserAssignedEmail= Email) on UserAssigned, SystemID, ClientID\n| extend Tactics= \"Privilege Escalation\"\n| project\n    // Details\n    TimeGenerated, Instance , SystemID, ClientID, Role, User, UserAssigned,\n    Email, TerminalIPv6, Host, AlertDescription, Severity, PackedDetails, UserAssignedEmail, Tactics\n",
                                "queryFrequency": "PT12H",
                                "queryPeriod": "PT12H",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP",
                                        "dataTypes": [
                                            "SAPUsersEmail"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "HostName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "UserAssignedEmail"
                                            }
                                        ],
                                        "entityType": "Account"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "AlertPerResult"
                                },
                                "customDetails": {
                                    "UserAssigned": "UserAssigned",
                                    "SAP_User": "User"
                                },
                                "alertDetailsOverride": {
                                    "alertDisplayNameFormat": "{{AlertDescription}}",
                                    "alertSeverityColumnName": "Severity",
                                    "alertTacticsColumnName": "Tactics",
                                    "alertDescriptionFormat": "Identifies new assignments for a sensitive role to a user.\n\nSource Action: Assign a role to a User using SU01 / PFCG.\n\nSensitive roles should be maintained in watchlist \"SAP -  Sensitive Roles\"\n\n*Data Sources: SAPcon -  Change Documents Log, Audit Log*\n{{PackedDetails}}\n"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId17'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 17",
                                "parentId": "[variables('analyticRuleId17')]",
                                "contentId": "[variables('analyticRulecontentId17')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion17')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName18')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 18 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName18'),'/',variables('analyticRuleVersion18'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName18'))]"
            ],
            "properties": {
                "description": "SAP - Brute Force (RFC)_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion18')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId18')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies brute force attacks on the SAP system using RFC logons\n\nSource Action: Attempt to login from the same IP to several systems/clients within the scheduled time interval using RFC\n\n*Data Sources: SAPcon -  Audit Log*",
                                "displayName": "SAP - Brute Force (RFC)",
                                "enabled": false,
                                "query": "// Define variables\n// Audit Log Classes - Failed Logons / Password Check\n// let AuditClasses = dynamic(['AUO', 'AU2', 'AU6', 'BU1']);\nlet AuditClasses = dynamic(['AU6']);//RFC only\nlet perIPLimit = 300;\n// Query logic\nSAPAuditLog\n| where MessageID in (AuditClasses)\n| extend DetailsBy = pack(\"User\", User, \"Email\", Email, \"SystemID\", SystemID, \"ClientID\", ClientID)\n| summarize LoginbyIPAttempts = count(), Details = make_set(DetailsBy), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated)\n    by TerminalIPv6\n// Check if number of login attempts per IP is higher than limit\n| where LoginbyIPAttempts > perIPLimit\n| mv-expand Details\n| evaluate bag_unpack(Details, \"Details_\")\n| project\n    StartTime, EndTime,  TerminalIPv6,\n    Email = column_ifexists(\"Details_Email\", \"\"), User = column_ifexists(\"Details_User\", \"\"),\n    SysetmID = column_ifexists(\"Details_SystemID\", \"\"),\n   ClientID = column_ifexists(\"Details_ClientID\", \"\")\n",
                                "queryFrequency": "PT6H",
                                "queryPeriod": "PT6H",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP"
                                    }
                                ],
                                "tactics": [
                                    "CredentialAccess"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SysetmID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "SAP_User": "User"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId18'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 18",
                                "parentId": "[variables('analyticRuleId18')]",
                                "contentId": "[variables('analyticRulecontentId18')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion18')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName19')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 19 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName19'),'/',variables('analyticRuleVersion19'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName19'))]"
            ],
            "properties": {
                "description": "SAP - Change in a Sensitive Privileged User_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion19')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId19')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies changes of sensitive privileged users.\nSource Action: Change user details / authorizations using SU01.\n<p>Users are considered as Privileged when one of these conditions apply: </p>\n<li>If they are named in the SAP - Privileged Users Watchlist\n<li>If they have a profile which is included in the SAP - Sensitive Profiles watchlist\n<li>If they have a role which is included in the SAP - Sensitive Roles watchlist\nThis Rule requires a fresh full reload of SAP user master data to be performed daily.\n*Data Sources: SAPcon -  Audit Log*\n*Data Sources: SAPcon -  User MD*",
                                "displayName": "SAP - Change in a Sensitive Privileged User",
                                "enabled": false,
                                "query": "// Change in a Sensitive Privileged User\n// time span for audit events\nlet AuditTimeAgo= 75m;\n// Audit Log Classes - User Master Changes\nlet AuditClasses = dynamic(['AU7', 'BUV', 'BUW', 'AU8', 'AU9', 'AUA', 'AUB', 'AUD', 'DUH', 'BU2']);\nlet UsersEmails = SAPUsersHeader()\n| project-keep User, SystemID, Client, Email\n| project-rename ClientID= Client, ChangedEmail=Email, ChangedUser=User;\nSAPAuditLog\n| where TimeGenerated > ago(AuditTimeAgo)\n| where MessageID in (AuditClasses)\n// The user that we are making change in is a sensitive privileged user\n| extend ChangedUser = Variable1\n| join kind= inner (SAPUsersGetPrivileged())\non $left.ClientID == $right.Client\n, $left.SystemID == $right.SystemID\n, $left.ChangedUser == $right.User\n| extend MessageText = iff(MessageText endswith_cs \".\", substring(MessageText, 0, strlen(MessageText)-1), MessageText)\n| extend MessageTextDyna = replace_string(MessageText, \"User\", \"Privileged User\")\n| extend MessageTextDyna = replace_string(MessageTextDyna, \"user\", \"Privileged User\")\n| lookup UsersEmails\non SystemID, ClientID, ChangedUser\n| project-keep TimeGenerated, Instance,  SystemID, ClientID, User, MessageText, MessageID, Email,  TerminalIPv6, Host, ChangedUser, ChangedEmail, MessageTextDyna\n| extend Email= iff(isempty(Email),User, Email), Host= iff(isempty(Host), TerminalIPv6, Host), Dummy= ''\n| extend ChangedEmail= iff(isempty(ChangedEmail),ChangedUser, ChangedEmail)\n| extend PackedDetails= pack_all()\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "P2D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP",
                                        "dataTypes": [
                                            "SAPUsersHeader",
                                            "SAPUsersGetPrivileged"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation",
                                    "CredentialAccess"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "ChangedEmail"
                                            }
                                        ],
                                        "entityType": "Account"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "AlertPerResult"
                                },
                                "customDetails": {
                                    "SAPChangedUser": "ChangedUser",
                                    "SAP_User": "User"
                                },
                                "alertDetailsOverride": {
                                    "alertDisplayNameFormat": "SAP - High -{{MessageTextDyna}} in system {{SystemID}}",
                                    "alertSeverityColumnName": "Dummy",
                                    "alertTacticsColumnName": "Dummy",
                                    "alertDescriptionFormat": "Identifies changes of sensitive privileged users.\nSource Action: Change user details / authorizations using SU01.\n<p>Users are considered as Privileged when one of these conditions apply: </p>\n<li>If they are named in the SAP - Privileged Users Watchlist\n<li>If they have a profile which is included in the SAP - Sensitive Profiles watchlist\n<li>If they have a role which is included in the SAP - Sensitive Roles watchlist\nPacked Details - {{PackedDetails}}\n*Data Sources: SAPcon -  User MD*\n"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId19'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 19",
                                "parentId": "[variables('analyticRuleId19')]",
                                "contentId": "[variables('analyticRulecontentId19')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion19')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName20')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 20 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName20'),'/',variables('analyticRuleVersion20'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName20'))]"
            ],
            "properties": {
                "description": "SAP - Client Configuration Change_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion20')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId20')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies changes for client configuration such as: Client role, Changes recording mode.\n\nSource Action:  Perofrm client configurations changes using SCC4 transaction code.\n\n*Data Sources: SAPcon -  Audit Log*",
                                "displayName": "SAP - Client Configuration Change",
                                "enabled": false,
                                "query": "// Audit Log Classes - Client Change Configuration\nlet AuditClasses = dynamic(['EU2']); // Relevent message\nlet SelectedSystemRoles=dynamic([\"Production\", \"UAT\"]);\nlet SelectedSystems= SAPSystems(SelectedSystemRoles=SelectedSystemRoles) | summarize by SystemRole, SystemID= SearchKey;\nSAPAuditLog\n| where MessageID in (AuditClasses)\n| join kind=inner SelectedSystems on SystemID\n| project-rename ClientIDTemp = ClientID\n| project-rename ClientID= Variable1\n| parse Variable2 with Currency \"|\" ClientRole \"|\" RecordingChanges \"|\" CrossClientObjectChanges \"|\" ClientCopyProtectionLevel \"|\" ProtectionSAPUpgrade \"|\" CATTeCATT \"|\"  LockedforCopy // Parse every object before the | char\n| project TimeGenerated, Instance, SystemID, SystemRole, User, ClientID,\nCurrency,ClientRole,RecordingChanges,CrossClientObjectChanges,ClientCopyProtectionLevel,CATTeCATT,LockedforCopy,ProtectionSAPUpgrade,\nMessageText, Email, TerminalIPv6, Host\n| extend Severity= iff(SystemRole==\"Production\",\"High\",\"Medium\"), Dummy= \"\"\n",
                                "queryFrequency": "PT5H",
                                "queryPeriod": "PT5H",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP",
                                        "dataTypes": [
                                            "SAPSystems"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "DefenseEvasion",
                                    "Exfiltration",
                                    "Persistence"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "AlertPerResult"
                                },
                                "customDetails": {
                                    "SystemRole": "SystemRole",
                                    "SAP_User": "User"
                                },
                                "alertDetailsOverride": {
                                    "alertDisplayNameFormat": "SAP - Client Configuration Change for a {{SystemRole}} System",
                                    "alertSeverityColumnName": "Severity",
                                    "alertTacticsColumnName": "Dummy",
                                    "alertDescriptionFormat": "System {SystemID} configuration has changed by user {{User}}\n"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId20'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 20",
                                "parentId": "[variables('analyticRuleId20')]",
                                "contentId": "[variables('analyticRulecontentId20')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion20')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName21')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 21 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName21'),'/',variables('analyticRuleVersion21'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName21'))]"
            ],
            "properties": {
                "description": "SAP - Critical authorizations assignment - New User Assignment_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion21')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId21')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies assignment of a critical authorization object value to a new user.\n\nSource Action: Assign a new user to a role which holds critical authorization values using SU01/PFCG.\n\nCritical authorization objects should be maintained in watchlist \"\"SAP - Critical Authorization Objects\"\"\n\n*Data Sources: SAPcon -  Change Documents Log*",
                                "displayName": "SAP - Critical authorizations assignment - New User Assignment",
                                "enabled": false,
                                "query": "// New Assigned Users\nlet ObjectClassRoles = 'PFCG';\nlet TableName = 'CD1251';\nlet UsersRoles = 'AGR_USERS';\nlet Insert = \"I\";\nlet NotInUse = 'NOT_IN_USE';\nlet logsThreshold = 3600; // 3600 seconds\n// Audit Log Classes - Authorizations for user changed\nlet AuditClasses = dynamic(['AUB','AUD']); // Authorizations for user &A changed. User Master Record Changed\n// Roles Change Documents - Extract Auth Object and Obj Field\nlet allHistory = ago(0d);\nlet alertSched = ago(6h); // Please maintain according to schedule\n// Maintain these if System doesn't have CR's\nlet fixedChangeDocs = datatable(User : string, ObjectClass : string, TableName : string, TypeofChange_Item : string , ChangedTableKey : string, ObjectID : string, TimeGenerated : datetime, ValueNew : string, SystemID : string)[];\nlet ChangeDocs =\nunion isfuzzy=true table(\"SAPChangeDocsLog\"), fixedChangeDocs;\nlet RolesAuthObject = ChangeDocs\n    | where TimeGenerated <= allHistory\n    | where ObjectClass == ObjectClassRoles and TableName == TableName // Role-Obj-Profile-ObjField\n    | where TypeofChange_Item in ('J', 'I', 'U') //  Insert\n    | extend RoleObjProfileObjFieldVer = ChangedTableKey, Role = ObjectID\n    | extend ObjFieldValue = ValueNew\n    | extend ObjField = trim(@\"\\s*?\", extract(@\"(^.{1,30})\\s*?(.{1,10})\\s*?(.{1,12})\\s*?(.{1,10})\\s*?\\d{6}\", 4, RoleObjProfileObjFieldVer, typeof(string)))\n    | extend AuthObject = trim(@\"\\s*?\", extract(@\"(^.{1,30})\\s*?(.{1,10})\\s*?(.{1,12})\\s*?(.{1,10})\\s*?\\d{6}\", 2, RoleObjProfileObjFieldVer, typeof(string)))\n    | summarize by SystemID, Role, AuthObject, ObjField, ObjFieldValue;\nlet ComplexAuth = _GetWatchlist('SAP - Critical Authorizations');\nlet SimpleAuth = _GetWatchlist('SAP - Critical Authorizations');\nlet fixedComplexAuth = datatable(AuthorizationObject: string, AuthorizationField: string, AuthorizationValue: string, ActivityField: string, Activity: string)\n    ['S_DEVELOP', 'OBJTYPE', 'DEBUG', 'ACTVT', '*',\n    'S_DEVELOP', 'OBJTYPE', 'DEBUG', 'ACTVT', '02']; // Maintain these if WatchList is not available\nlet fixedSimpleAuth = datatable(AuthorizationObject: string, AuthorizationField: string, AuthorizationValue: string, ActivityField: string, Activity: string)\n    ['S_TCODE', 'TCD', '*', 'NOT_IN_USE', '',\n    'S_TZONE', 'ACTVT', '*', 'NOT_IN_USE', '']; // Maintain these if WatchList is not available\nlet usersinRole =\n    ChangeDocs\n    | where TimeGenerated >= alertSched\n    | where ObjectClass == ObjectClassRoles // Roles\n        and TableName == UsersRoles // Users Roles\n        and TypeofChange_Item == Insert // Insert\n    | extend UserAssigned = extract(@\"^.{1,33}\\s*?(.{1,12})\\s*?\\d{16}\", 1, ChangedTableKey)\n    | extend Role = ObjectID\n    | extend TimeGenUserinRole = TimeGenerated;\n    //| summarize by TimeGenerated, SystemID, ClientID, Role, UserAssigned, User\nlet RolesAuthObjectCheck =\n        RolesAuthObject\n        | extend ObjFieldVal = ObjFieldValue\n        | lookup kind = leftouter\n            (RolesAuthObject\n            | extend ActivityVal = ObjFieldValue)\n            on Role, AuthObject;\nlet complexScenario =\n    union ComplexAuth, fixedComplexAuth\n    | where ActivityField != NotInUse\n    | summarize by AuthorizationObject, AuthorizationField, AuthorizationValue, ActivityField, Activity\n    | lookup kind = inner (RolesAuthObjectCheck)\n        on $left.AuthorizationObject == $right.AuthObject\n        and $left.AuthorizationField == $right.ObjField\n        and $left.AuthorizationValue == $right.ObjFieldValue\n        and $left.ActivityField == $right.ObjField1\n        and $left.Activity == $right.ActivityVal;\nlet simpleScenario =\n    union SimpleAuth, fixedSimpleAuth\n    | where ActivityField == NotInUse\n    | summarize by AuthorizationObject, AuthorizationField, AuthorizationValue, ActivityField, Activity\n    | lookup kind = inner (RolesAuthObject)\n        on $left.AuthorizationObject == $right.AuthObject\n        and $left.AuthorizationField == $right.ObjField\n        and $left.AuthorizationValue == $right.ObjFieldValue;\nlet GetEntites =\n    SAPAuditLog\n    | where TimeGenerated >= alertSched\n    | where MessageID in (AuditClasses)\n    | summarize by TimeGenerated, TerminalIPv6, ClientID, User, Host, Email\n    | extend TimeGenAudit = TimeGenerated;\nunion complexScenario, simpleScenario\n| lookup kind = inner (usersinRole) on SystemID, Role\n| lookup kind = leftouter (GetEntites) on User\n| where abs(datetime_diff('second', TimeGenUserinRole, TimeGenAudit)) <= logsThreshold or\nisnull(TimeGenAudit)\n| project\n    // Details\nTimeGenUserinRole , SystemID, ClientID, Role, User, UserAssigned, AuthorizationObject, AuthorizationField, AuthorizationValue, ActivityField, Activity, Email, TerminalIPv6, Host\n",
                                "queryFrequency": "PT6H",
                                "queryPeriod": "PT6H",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP",
                                        "dataTypes": [
                                            "SAPAuditLog"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "SAP_User": "User"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId21'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 21",
                                "parentId": "[variables('analyticRuleId21')]",
                                "contentId": "[variables('analyticRulecontentId21')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion21')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName22')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 22 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName22'),'/',variables('analyticRuleVersion22'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName22'))]"
            ],
            "properties": {
                "description": "SAP - Data has Changed during Debugging Activity_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion22')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId22')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies changes for runtime data during a debugging activity.\nSource Action: Activate Debug (\"/h\"), Select a field for change and update it's value.\n\n**Recommended for Production only**\n\n*Data Sources: SAPcon -  Audit Log*",
                                "displayName": "SAP - Data has Changed during Debugging Activity",
                                "enabled": false,
                                "query": "let Role = 'Production';\nlet AuditClasses = dynamic(['CUL']); // Audit Log Classes - Debug Change\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\n// Get Relevant Systems from WatchList\nlet systemID = _GetWatchlist('SAP - Systems');\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\n// Maintain these if WatchList is not available\n    [\"S4H\",\"Production\",\"ERP\",\n    \"XXX\",\"Sandbox\",\"BW\"]\n;\nlet UnitedSystem =\nunion systemID, fixedSID\n| summarize by SystemID, SystemRole, SystemUsage\n| where SystemRole == Role; // Recommended  is Production only\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\nSAPAuditLog\n| where MessageID in (AuditClasses)\n| project-rename SystemIDTemp = SystemID\n| project-rename SystemID= SystemIDTemp\n| project-rename SystemID= SystemID\n| lookup kind = inner    (UnitedSystem) on SystemID\n| extend  ChangeDetails = pack_array(Variable1, Variable2, Variable3, Variable4)\n| project TimeGenerated,ClientID, Instance, User, MessageText, ChangeDetails, ABAPProgramName, TransactionCode, SystemID, SystemRole, SystemUsage, Email,TerminalIPv6, Host\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT1H",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP"
                                    }
                                ],
                                "tactics": [
                                    "Execution",
                                    "LateralMovement"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "AlertPerResult"
                                },
                                "customDetails": {
                                    "SAP_User": "User"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId22'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 22",
                                "parentId": "[variables('analyticRuleId22')]",
                                "contentId": "[variables('analyticRulecontentId22')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion22')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName23')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 23 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName23'),'/',variables('analyticRuleVersion23'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName23'))]"
            ],
            "properties": {
                "description": "SAP - Deactivation of Security Audit Log_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion23')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId23')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies deactivation of Security Audit Log\n\nSource Action: Disable secruity Audit Log using SM19/RSAU_CONFIG.\n\n*Data Sources: SAPcon -  Audit Log*",
                                "displayName": "SAP - Deactivation of Security Audit Log",
                                "enabled": false,
                                "query": "// Audit Log Classes - Audit Log Active Status Events\nlet AuditClasses = dynamic(['AUJ']);\nSAPAuditLog\n| where MessageID in (AuditClasses)\n| where Variable1 == '0' // Audit Active Status = 0\n| project\n// Details\nTimeGenerated, Instance ,SystemID, ClientID, User, MessageText, Email, TerminalIPv6, Host\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT1H",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP"
                                    }
                                ],
                                "tactics": [
                                    "Exfiltration",
                                    "DefenseEvasion",
                                    "Persistence"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "SAP_User": "User"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId23'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 23",
                                "parentId": "[variables('analyticRuleId23')]",
                                "contentId": "[variables('analyticRulecontentId23')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion23')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName24')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 24 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName24'),'/',variables('analyticRuleVersion24'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName24'))]"
            ],
            "properties": {
                "description": "SAP - Debugging Activities_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion24')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId24')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies all debugging related activities.\n\nSource Action: Activate Debug (\"/h\") in system, debug an active process, add breakpoint to source code etc.\n\n**Recommended for Production only**\n\n*Data Sources: SAPcon -  Audit Log*",
                                "displayName": "SAP - Debugging Activities",
                                "enabled": false,
                                "query": "let Role = 'Production';\nlet DebuggerProgram = 'RSTPDAMAIN';\nlet AuditClasses = dynamic(['CUK','CUL','CUM','CUN','CUO','CUP']); // Audit Log Classes - Debug Activities\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\n// Get Relevant Systems from WatchList\nlet systemID = _GetWatchlist('SAP - Systems')\n| where SystemRole == Role; // Reccommended is Production only\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\n// Maintain these if WatchList is not available\n    [\"S4H\",\"Production\",\"ERP\",\n    \"XXX\",\"Sandbox\",\"BW\"]\n    | where SystemRole == Role // Reccommended is Production only\n;\nlet SystemUnited = union systemID, fixedSID\n| summarize by SystemID, SystemRole, SystemUsage;\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\nSAPAuditLog\n    | where MessageID in (AuditClasses) or ABAPProgramName == DebuggerProgram // Get logs by messege ID or program name\n    | extend Object = extract(@\":\\s\\(?(\\w{1,}\\s?-?\\w{1,})\", 1, MessageText, typeof(string)) // Extract Object\n    | extend Action = extract(@\":\\s\\(?(\\w{1,}\\s?-?\\w{1,}.{1,}?)\\)?\\(\", 1, MessageText, typeof(string)) // Extract Action\n    | extend Program = extract(@\"Prgm:(\\w{1,})\", 1, MessageText, typeof(string)) // Extract Program\n    | extend Function = extract(@\"Funct:(\\w{1,})\", 1, MessageText, typeof(string)) // Extract Function\n    | extend Include = extract(@\"Incl:(\\w{1,})\", 1, MessageText, typeof(string)) // Extract Include\n    | extend Line = extract(@\"Line:(\\w{1,})\", 1, MessageText, typeof(string)) // Extract Line\n    | project-rename SystemIDTemp = SystemID\n| project-rename SystemID= SystemIDTemp\n| project-rename SystemID= SystemID\n    | lookup kind=inner (SystemUnited) on SystemID\n    | order by TimeGenerated asc\n    | project TimeGenerated, Instance, ClientID ,User, MessageText, ABAPProgramName, TransactionCode, SystemID, SystemRole, SystemUsage,MessageID, Email, TerminalIPv6, Host, Object , Action, Program, Function, Include, Line\n",
                                "queryFrequency": "PT3H",
                                "queryPeriod": "PT3H",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP"
                                    }
                                ],
                                "tactics": [
                                    "Discovery"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "SAP_User": "User"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId24'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 24",
                                "parentId": "[variables('analyticRuleId24')]",
                                "contentId": "[variables('analyticRulecontentId24')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion24')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName25')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 25 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName25'),'/',variables('analyticRuleVersion25'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName25'))]"
            ],
            "properties": {
                "description": "SAP - Dialog logon attempt from a privileged user_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion25')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId25')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies dialog logon (Type AUM) attempts by priviledged users (See Function SAPUsersGetPrivileged) on SAP system .\nSource Action: Attempt to login from the same IP to several systems/clients within the scheduled time interval.\n\n*Data Sources: SAPcon -  Audit Log*",
                                "displayName": "SAP - Dialog logon attempt from a privileged user",
                                "enabled": false,
                                "query": "// SAP - High- Dialog logon attempt from a privileged user\n// time span for audit events\nlet AuditTimeAgo= 6h;\n// Define variables\nlet AuditClasses = dynamic(['AUM']);//Dialog only\nlet perIPLimit = 1;\n// Query logic\nSAPAuditLog\n| where TimeGenerated > ago(AuditTimeAgo)\n| where MessageID in (AuditClasses)\n| extend DetailsBy = pack(\"User\", User, \"Email\", Email, \"SystemID\", SystemID, \"ClientID\", ClientID)\n| summarize LoginbyIPAttempts = count(), Details = make_set(DetailsBy), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated)\n    by TerminalIPv6\n// Check if number of login attempts per IP is higher than limit\n| where LoginbyIPAttempts > perIPLimit\n| mv-expand Details\n| evaluate bag_unpack(Details, \"Details_\")\n| project\n    StartTime, EndTime,  TerminalIPv6,\n    Email = column_ifexists(\"Details_Email\", \"\"), User = column_ifexists(\"Details_User\", \"\"),\n    SysetmID = column_ifexists(\"Details_SystemID\", \"\"),\n   ClientID = column_ifexists(\"Details_ClientID\", \"\")\n| join kind= inner (SAPUsersGetPrivileged | project User ) on $left.User == $right.User\n",
                                "queryFrequency": "PT6H",
                                "queryPeriod": "P2D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP",
                                        "dataTypes": [
                                            "SAPUsersGetPrivileged"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "CredentialAccess"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SysetmID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "SAP_User": "User"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId25'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 25",
                                "parentId": "[variables('analyticRuleId25')]",
                                "contentId": "[variables('analyticRulecontentId25')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion25')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName26')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 26 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName26'),'/',variables('analyticRuleVersion26'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName26'))]"
            ],
            "properties": {
                "description": "SAP - Dynamic ABAP Program_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion26')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId26')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies execution of dynamic ABAP programming. For example, ABAP code was dynamically created/changed/deleted. Source Action: Create an ABAP Report which uses ABAP program generation commands such as \"INSERT REPORT\" and execute it. Excluded Transaction Codes can be maintained in \"SAP - Transactions for ABAP Generations\" watchlist. *Data Sources: SAPcon - Audit Log*",
                                "displayName": "SAP - Dynamic ABAP Program",
                                "enabled": false,
                                "query": "// Define variables\nlet AuditClasses = dynamic(['BU4']); // Message of dynamic ABAP program\nlet TranForABAPGen = _GetWatchlist(\"SAP - Transactions for ABAP Generations\"); // Transactions to exclude\n// Maintain if watchlist is not available\nlet fixedTran = datatable(TransactionCode:string)['SE11','SE12', \"SE16\", \"SE16N\"];\nlet UnitedTransactions =\ntoscalar(union TranForABAPGen, fixedTran\n| summarize Transactions = make_set(TransactionCode));\n// Query logic\nSAPAuditLog\n| where MessageID in (AuditClasses)\n| where TransactionCode !in (UnitedTransactions) // Exclude transactions\n| project TimeGenerated, Instance, User, SystemID, ClientID, Email, TerminalIPv6, Host, ABAPProgramName\n",
                                "queryFrequency": "PT6H",
                                "queryPeriod": "PT6H",
                                "severity": "Low",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP"
                                    }
                                ],
                                "tactics": [
                                    "Discovery",
                                    "CommandAndControl",
                                    "Impact"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "HostName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "SAP_User": "User"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId26'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 26",
                                "parentId": "[variables('analyticRuleId26')]",
                                "contentId": "[variables('analyticRulecontentId26')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion26')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName27')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 27 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName27'),'/',variables('analyticRuleVersion27'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName27'))]"
            ],
            "properties": {
                "description": "SAP - Dynamic Deterministic Audit Log Monitor_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion27')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId27')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "SAP Audit log events with message IDs preconfigured in Watchlist SAP_Dynamic_Audit_Log_Monitor_Configuration\nwill be shown here.\n<br/>\nSee  [Sentinel4SAP Dcoumentation](https://aka.ms/sapsecdocs) for further information",
                                "displayName": "SAP - Dynamic Deterministic Audit Log Monitor",
                                "enabled": false,
                                "query": "// Sentinel4SAP solution version 1.2.98\n// populate static selections for workspace level configuration\n// time span for audit events\nlet AuditTimeAgo= 65m;\nlet SelectedSystems =  dynamic([\"All Systems\"]);//can also do// let SelectedSystems =  dynamic([\"S4P\", \"B4X\", \"ODT\"]);\nlet SelectedSystemRoles =  dynamic([\"All System Roles\"]); //can also do// let SelectedSystemRoles =  dynamic([\"Production\", \"UAT\"]);\nlet SelectedSeverities=  dynamic([\"High\", \"Medium\"]);//can also do//let SelectedSeverities =  dynamic([\"All Severities\"])\nlet SelectedRuleTypes= dynamic([ \"Deterministic\"]); // Rule only goes for deterministic alerting\n// get special users for exclusion and in-focus analysis\nlet SAPUsersGottenVIP = (SAPUsersGetVIP | project-rename User = SAPUser);\nlet SAPUserRolesAndProfiles = (SAPUsersAssignments | project-keep User, SystemID, DirectRoles, ChildRoles, Profiles | summarize RolesAndProfiles = make_set(array_concat(DirectRoles, ChildRoles, Profiles), 120) by User, SystemID);\nlet AuditEvents = (SAPAuditLog\n| where TimeGenerated > ago(AuditTimeAgo)\n// Alerts coming from SAP as \"Low\" aren't very intersting\n| where AlertSeverityText != \"Low\"\n// get the configuration from the \"SAPAuditLogConfiguration\" watchlist which allows\n// assigning severity levels per system Role (Production/ non-production), automatic team assignments and other configuration options\n// we'll fetch all severities to allow for alerting on \"Special Focus\" users regardless of severity\n| lookup kind=inner SAPAuditLogConfiguration(SelectedSystems, SelectedSystemRoles, SelectedSeverities= dynamic([\"All Severities\"]), SelectedRuleTypes= SelectedRuleTypes) on\n$left.MessageID == $right.MessageID\n,$left.SystemID == $right.SystemID);\n// Query\nAuditEvents\n// get the user privleged status\n| lookup kind= leftouter (SAPUsersGetPrivileged() | extend IsPrivilegedUser = true) on\n$left.SystemID == $right.SystemID\n,$left.User == $right.User\n,$left.ClientID == $right.Client\n| extend DetailedDescription = iff(IsPrivilegedUser, strcat('User ', User,  ' is a privileged user! <br/>', DetailedDescription), DetailedDescription)\n| extend BagOfDetails = tostring(BagOfDetails)\n// handle threshold per system (configurable via the SAPAuditLogConfigurator watchlist)\n// calculate the timespan for analysis for thresholding\n| summarize EventCount= count(),  Threshold = max( Threshold), MinTime= min(TimeGenerated), MaxTime = max(TimeGenerated)\nby AuditClassID, AlertSeverityText, SystemID, Instance, MonitoringObjectName, MonitorShortName, MessageText, MessageClass, MessageID, AlertValue, AlertSeverity, ClientID, User, Variable1, Variable2, Variable3, Variable4, TerminalIPv6, TransactionCode, ABAPProgramName, SAPProcesType, SAPWPName, Email, SystemNumber, Host, Type, CategoryName, DestinationEmail, DetailedDescription, Tactics, TeamsChannelID, SystemRole, SystemUsage, IsProd, Severity, BagOfDetails, IsPrivilegedUser, RolesTagsToExclude\n| extend  TimeGenerated = MaxTime\n| extend MessageText = iff(MessageText endswith_cs \".\", substring(MessageText, 0, strlen(MessageText)-1), MessageText)\n// To reduce false positives, exclude users whos tags in the SAP_User_Config watchlist\n// match tags in the RolesTagsToExclude column in the SAP_Dynamic_Audit_Log_Monitor_Configuration\n// tags can be either strings representing a group such as Batch; Sensitive; Super; MassiveLogonsOK; MassiveRFCOK; GenericTablebyRFCOK\n// or SAP roles such as SAP_BC_TRANSPORT_ADMINISTRATOR, or SAP profiles like SAP_ALL\n| lookup SAPUsersGottenVIP on User\n| lookup SAPUserRolesAndProfiles on User, SystemID\n| extend RolesProfilesAndTags = array_concat(RolesAndProfiles, TagsList)\n| extend TagsIntersect = set_intersect(split(RolesTagsToExclude,\";\"), RolesProfilesAndTags)\n| extend IntersectionSize = array_length(TagsIntersect)\n// keep only non-excluded users that are not under \"Special Focus\"\n| where IntersectionSize == 0 or isempty(IntersectionSize) or SpecialFocusTagged == true\n| extend DetailedDescription = iff(SpecialFocusTagged, strcat('User ', User,  ' is a specially tagged User with tags ', TagsList ,'<br/>', DetailedDescription), DetailedDescription)\n// Special Focus users production alerts are considered as high\n| extend Severity = iff(SpecialFocusTagged and IsProd,'High',Severity)\n| where SelectedSeverities contains Severity\n//  apply the threshold criteria, consider that the watchlist describes hourly thresholds\n| extend MinutesSpan = datetime_diff('Minute', MaxTime, MinTime )\n| where EventCount > (Threshold * max_of(MinutesSpan, 10) / 60) or SpecialFocusTagged == true\n| extend DetailedDescription = iff(EventCount > 1, strcat(' Event occured ', EventCount, ' times within ', MinutesSpan + 1, ' minutes.<br/> ', 'The predefined threshold of ', Threshold,  ' Events per hour was exceeded! <br/>', DetailedDescription), DetailedDescription)\n| extend MessageText = iff(MessageText endswith_cs \".\", substring(MessageText, 0, strlen(MessageText)-1), MessageText)\n| project-keep AuditClassID, AlertSeverityText, SystemID, Instance, MessageText, MessageClass, MessageID, AlertValue, AlertSeverity, ClientID, User, Variable1, Variable2, Variable3, Variable4, TerminalIPv6, TransactionCode, ABAPProgramName, SAPProcesType, SAPWPName, Email, SystemNumber, Host, CategoryName, DestinationEmail, DetailedDescription, Tactics, TeamsChannelID, SystemRole, SystemUsage, IsProd, Severity, BagOfDetails, IsPrivilegedUser, EventCount, Threshold, TimeGenerated\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "P7D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP",
                                        "dataTypes": [
                                            "SAPAuditLogConfiguration",
                                            "SAPUsersGetVIP",
                                            "SAPAuditLog",
                                            "SAPUsersAssignments",
                                            "SAPUsersGetPrivileged"
                                        ]
                                    }
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "ProcessId",
                                                "columnName": "TransactionCode"
                                            },
                                            {
                                                "identifier": "CommandLine",
                                                "columnName": "ABAPProgramName"
                                            }
                                        ],
                                        "entityType": "Process"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "AlertPerResult"
                                },
                                "customDetails": {
                                    "SAPUser": "User",
                                    "AuditClassID": "[variables('_AuditClassID')]",
                                    "DestinationEmail": "DestinationEmail",
                                    "SAPAuditLogMessageID": "[variables('_MessageID')]",
                                    "SystemUsage": "SystemUsage",
                                    "IsProductionEnv": "IsProd",
                                    "SAPProcessType": "SAPProcesType",
                                    "BagOfDetails": "BagOfDetails",
                                    "SystemRole": "SystemRole",
                                    "TeamsChannelID": "[variables('_TeamsChannelID')]"
                                },
                                "alertDetailsOverride": {
                                    "alertDisplayNameFormat": "SAP - {{MessageText}} in system {{SystemID}}",
                                    "alertSeverityColumnName": "Severity",
                                    "alertTacticsColumnName": "Tactics",
                                    "alertDescriptionFormat": "#### Detailed information\n{{DetailedDescription}}\n#### Additional information\n{{BagOfDetails}}<br/>\nAlerts of this type can be configured using watch list SAPAuditLogConfigurator . <br/>\nSee  [Sentinel4SAP Dcoumentation](https://aka.ms/sapsecdocs) for further information\n"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId27'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 27",
                                "parentId": "[variables('analyticRuleId27')]",
                                "contentId": "[variables('analyticRulecontentId27')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion27')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName28')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 28 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName28'),'/',variables('analyticRuleVersion28'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName28'))]"
            ],
            "properties": {
                "description": "SAP - Dynamic RFC Destination_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion28')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId28')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies execution of RFC using dynamic destinations. Source Action: Execute an ABAP report which is using dynamic destinations (cl_dynamic_destination). Sample report: DEMO_RFC_DYNAMIC_DEST. *Data Sources: SAPcon - Audit Log*",
                                "displayName": "SAP - Dynamic RFC Destination",
                                "enabled": false,
                                "query": "// Define variables\nlet AuditClasses = dynamic(['FU1']); // Message of dynamic RFC execution using dynamic destination\n// Query logic\nSAPAuditLog\n| where MessageID in (AuditClasses)\n| parse Variable3 with \"id=\" Created_RFC_Name\n| project TimeGenerated,Instance, SystemID, ClientID, User, Email, TerminalIPv6, Host, ABAPProgramName, ExecutedProgram = Variable2, Created_RFC_Name\n",
                                "queryFrequency": "PT6H",
                                "queryPeriod": "PT6H",
                                "severity": "Low",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP"
                                    }
                                ],
                                "tactics": [
                                    "Collection",
                                    "Exfiltration"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "SAP_User": "User"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId28'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 28",
                                "parentId": "[variables('analyticRuleId28')]",
                                "contentId": "[variables('analyticRulecontentId28')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion28')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName29')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 29 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName29'),'/',variables('analyticRuleVersion29'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName29'))]"
            ],
            "properties": {
                "description": "SAP - Execution of a Sensitive ABAP Program_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion29')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId29')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies direct execution of a sensitive ABAP program.\n\nSource Action: Execute a program directly using SE38/SA38/SE80.\n\n**Recommended for Production only**\n\nABAP Programs should be maintained in watchlist \"SAP - Sensitive ABAP Programs\"\n\n*Data Sources: SAPcon -  Audit Log*",
                                "displayName": "SAP - Execution of a Sensitive ABAP Program",
                                "enabled": false,
                                "query": "// Define Variables\nlet Role = \"Production\";\nlet AuditClasses = dynamic(['AUW']); // Audit Log Classes - Report Started\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\n// Get Relevant Systems from WatchList\nlet systemID = _GetWatchlist('SAP - Systems');\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\n// Maintain these if WatchList is not available\n    [\"S4H\",\"Production\",\"ERP\",\n    \"XXX\",\"Sandbox\",\"BW\"]\n;\n// Get Relevant ABAP Programs\nlet SensitiveABAPReports = _GetWatchlist('SAP - Sensitive ABAP Programs');\nlet fixedABAPReports = datatable(ABAPProgram:string)\n// Maintain these if WatchList is not available\n    [\"RSPFLDOC\"]\n;\nlet UnionAbap =\n    union SensitiveABAPReports, fixedABAPReports\n    | summarize by ABAPProgram;\nlet UnitedSystem =\nunion systemID, fixedSID\n| summarize by SystemID, SystemRole, SystemUsage\n| where SystemRole == Role; // Reccommended is Production only\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\n// Query logic\nSAPAuditLog\n| where MessageID in (AuditClasses)\n| where ABAPProgramName in (UnionAbap)\n| project-rename SystemIDTemp = SystemID\n| project-rename SystemID= SystemIDTemp\n| project-rename SystemID= SystemID\n| lookup kind = inner (UnitedSystem) on SystemID\n| order by TimeGenerated asc\n| project TimeGenerated, Instance , SystemID, ClientID, User, ABAPProgramName, MessageText, TransactionCode, MessageID, Email, TerminalIPv6, Host\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT1H",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP"
                                    }
                                ],
                                "tactics": [
                                    "Exfiltration",
                                    "LateralMovement",
                                    "Execution"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "SAP_User": "User"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId29'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 29",
                                "parentId": "[variables('analyticRuleId29')]",
                                "contentId": "[variables('analyticRulecontentId29')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion29')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName30')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 30 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName30'),'/',variables('analyticRuleVersion30'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName30'))]"
            ],
            "properties": {
                "description": "SAP - Execution of a Sensitive Transaction Code_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion30')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId30')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies execution of a sensitive Transaction Code.\n\nSource Action: Execute a sensitive Transaction Code.\n\n**Recommended for Production only**\n\nTransaction Codes should be maintained in watchlist \"\"SAP - Sensitive Transaction Codes\"\"\n\n*Data Sources: SAPcon -  Audit Log*",
                                "displayName": "SAP - Execution of a Sensitive Transaction Code",
                                "enabled": false,
                                "query": "// SAP - Execution of a Sensitive Transaction Code\n// Define Variables\n// the actual lookback period is 1h. The alert looks back further to allow for user master data to be built slowly\nlet TimeAgo= 1h;\nlet AuditClasses = dynamic(['AU3']); // Audit Log Classes - Transaction Started\nlet SelectedSystemRoles =  dynamic([\"Production\"]); //can also do// let SelectedSystemRoles =  dynamic([\"Production\", \"UAT\"]); dynamic([\"All System Roles\"])\nlet SelectedSystems = SAPSystems(SelectedSystemRoles= SelectedSystemRoles) | project SystemID= SearchKey;\n// Get Relevant Transaction Codes\nlet SensitiveTcode = _GetWatchlist('SAP - Sensitive Transactions') | summarize by TransactionCode;\n// here you can exclude system users which are OK to execute a Sensitive Transaction Code\n// by adding those users in the SAP_User_Config watchlist with a tag of 'ExecuteSensitiveOK'\n// can also specify SAP Roles or Profiles to exclude\nlet excludeUsersTags= dynamic(['ExecuteSensitiveOK','SAP_ALL']);\nlet excludedUsers= SAPUsersGetVIP(SearchForTags= excludeUsersTags)| summarize by User2Exclude=SAPUser;\n// Query logic\nSAPAuditLog\n| where ingestion_time() > ago(TimeAgo)\n| where MessageID in (AuditClasses)\n| where SystemID in (SelectedSystems)\n| where TransactionCode in (SensitiveTcode)\n| join kind=leftantisemi excludedUsers on $left.User == $right.User2Exclude\n| project-rename SystemIDTemp = SystemID\n| project-rename SystemID= SystemIDTemp\n| project-rename SystemID= SystemID\n| order by TimeGenerated asc\n| project TimeGenerated,Instance ,SystemID, ClientID, User, TransactionCode, MessageText, MessageID, Email, TerminalIPv6, Host\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "P7D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP",
                                        "dataTypes": [
                                            "SAPUsersGetVIP",
                                            "SAPSystems"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Discovery",
                                    "Execution"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "AlertPerResult"
                                },
                                "customDetails": {
                                    "TransactionCode": "TransactionCode",
                                    "SAP_User": "User"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId30'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 30",
                                "parentId": "[variables('analyticRuleId30')]",
                                "contentId": "[variables('analyticRulecontentId30')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion30')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName31')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 31 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName31'),'/',variables('analyticRuleVersion31'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName31'))]"
            ],
            "properties": {
                "description": "SAP - Execution of an Obsolete or an Insecure Function Module_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion31')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId31')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies execution of an obsolete/insecure ABAP Function Module.\n\nSource Action: Execute an obsolete/insecure function module directly using SE37.\n\n**Recommended for Production only**\n\nObsolete functions should be maintained in \"SAP - Obsolete Function Modules\" Watchlist.",
                                "displayName": "SAP - Execution of an Obsolete or an Insecure Function Module",
                                "enabled": false,
                                "query": "// Execution of Obsolete or Insecure Function Module\n// AUK - Successful RFC call &C (function group = A) (C)\n// AUL - Failed RFC call &C (function group = &A)  (C)\n// DUI - RFC callback executed (destination &A, called &B, callback &C) (B)\n// DUJ - RFC callback rejected (destination &A, called &B, callback &C) (B)\n// DUK - RFC callback rejected (destination &A, called &B, callback &C) (B)\n// DUR - JSON RPC call of function module &A succeeded  (A)\n// DUS - SON RPC call of function module &A failed  (A)\n// DUT - Critical JSON RPC call of function module &A (S_RFC * authorization) (A)\n// EUE - RFC function module &A called successfully (A)\n// EUF - Could not call RFC function module &A  (A)\n// EUG - User does not have authorization to run RFC function module &A (A)\n// FU1 - FC function &B with dynamic destination &C was called in program &A (B)\nlet SelectedSystemRoles =  dynamic([\"Production\"]); //can also do// let SelectedSystemRoles =  dynamic([\"Production\", \"UAT\"]); dynamic([\"All System Roles\"])\nlet SelectedSystems = SAPSystems(SelectedSystemRoles= SelectedSystemRoles) | project SystemID= SearchKey;\n// here you can exclude system users which are OK to run obolete/ sensitive function modules\n// by adding those users in the SAP_User_Config watchlist with a tag of 'RunObsoleteFMOK'\nlet excludeUsersTags= dynamic(['RunObsoleteFMOK']);\nlet excludedUsers= _GetWatchlist('SAP_User_Config')| where Tags has_any (excludeUsersTags)| summarize by User2Exclude=SAPUser;\nlet AuditClassesA= dynamic(['DUR', 'DUS', 'DUT', 'EUE', 'EUF', 'EUG']);\nlet AuditClassesB= dynamic(['DUI', 'DUJ', 'DUK', 'FU1']);\nlet AuditClassesC= dynamic(['AUK', 'AUL']);\nlet ObsoleteModules =  _GetWatchlist('SAP - Obsolete Function Modules');\n// Maintain if watchlist is not available\nlet fixedModules = datatable(FunctionModule:string)['TH_SAPREL','TH_SAPREL2', 'TH_SAPREL3','SUSR_RFC_USER_INTERFACE','RFC_ABAP_INSTALL_AND_RUN'];\nlet UnitedModules =\ntoscalar(union fixedModules, ObsoleteModules\n| summarize FunctionModules =  make_set(FunctionModule));\n// Query logic\nlet FunctionRuns =\nSAPAuditLog\n| where MessageID in (array_concat(AuditClassesA, AuditClassesB, AuditClassesC))\n| join kind= inner SelectedSystems on SystemID\n| extend Module = case(MessageID in (AuditClassesA), Variable1, MessageID in (AuditClassesB), Variable2, MessageID in (AuditClassesC), Variable3, 'Could Not find function module')\n| where Module in (UnitedModules);\nFunctionRuns\n| project TimeGenerated, SystemID, ClientID, User, Email= iff(isempty(Email),User, Email), TerminalIPv6, Host= iff(isempty(Host), TerminalIPv6, Host), Module\n| extend UserName= User\n| join kind=leftantisemi excludedUsers on $left.User == $right.User2Exclude\n| extend AlertDescription= strcat('Sensitive Function Module ' , Module, ' was executed by ', UserName), Dummy=' '\n| extend PackedDetails= pack_all()\n",
                                "queryFrequency": "PT2H",
                                "queryPeriod": "PT2H",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP",
                                        "dataTypes": [
                                            "SAPSystems"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Discovery",
                                    "CommandAndControl"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "ProcessId",
                                                "columnName": "Module"
                                            }
                                        ],
                                        "entityType": "Process"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "AlertPerResult"
                                },
                                "customDetails": {
                                    "SAP_User": "UserName"
                                },
                                "alertDetailsOverride": {
                                    "alertDisplayNameFormat": "{{AlertDescription}}",
                                    "alertSeverityColumnName": "Dummy",
                                    "alertTacticsColumnName": "Dummy",
                                    "alertDescriptionFormat": "Identifies execution of an obsolete/insecure ABAP Function Module.\n\nSource Action: Execute an obsolete/insecure function module directly using SE37.\n\n**Recommended for Production only**\n\nObsolete functions should be maintained in \"SAP - Obsolete Function Modules\" Watchlist.\n{{PackedDetails}}\n"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId31'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 31",
                                "parentId": "[variables('analyticRuleId31')]",
                                "contentId": "[variables('analyticRulecontentId31')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion31')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName32')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 32 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName32'),'/',variables('analyticRuleVersion32'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName32'))]"
            ],
            "properties": {
                "description": "SAP - Execution of an Obsolete or an Insecure Program_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion32')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId32')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies execution of an obsolete insecure ABAP program.\nSource Action: Execute a program directly using SE38/SA38/SE80 or by using a background job.\n**Recommended for Production only**\nObsolete programs should be maintained in \"SAP - Obsolete Programs\" Watchlist\n*Data Sources: SAPcon -  Audit Log*",
                                "displayName": "SAP - Execution of an Obsolete or an Insecure Program",
                                "enabled": false,
                                "query": "// Execution of Obsolete/Insecure Program\n// Define Variables\nlet AuditClasses = dynamic(['AUW']); // Audit Log Classes - Report Started\nlet ObsoletePrograms = _GetWatchlist(\"SAP - Obsolete Programs\");\n// Maintain if watchlist is not available\nlet fixedObPrograms = datatable(ABAPProgram:string)['RSAU_READ_LOG'];\nlet UnitedPrograms =\ntoscalar(union fixedObPrograms, ObsoletePrograms\n| summarize Programs = make_set(ABAPProgram));\nlet SelectedSystemRoles =  dynamic([\"Production\"]); //can also do// let SelectedSystemRoles =  dynamic([\"Production\", \"UAT\"]); dynamic([\"All System Roles\"])\nlet SelectedSystems = SAPSystems(SelectedSystemRoles=SelectedSystemRoles) | project SystemID= SearchKey;\n// here you can exclude system users which are OK to run obsolete/ sensitive programs\n// by adding those users in the SAP_User_Config watchlist with a tag of 'RunObsoleteProgOK'\nlet excludeUsersTags= dynamic(['RunObsoleteProgOK']);\nlet excludedUsers= SAPUsersGetVIP(SearchForTags= dynamic([\"RunObsoleteProgOK\"]))| summarize by User2Exclude=SAPUser;\n// Query logic\nSAPAuditLog\n| where MessageID in (AuditClasses)\n| where ABAPProgramName in (UnitedPrograms) // The program is obsolete\n| join kind= inner  SelectedSystems on SystemID\n| join kind=leftantisemi excludedUsers on $left.User == $right.User2Exclude\n| project TimeGenerated, Instance,SystemID, ClientID, User, ABAPProgramName, MessageText, TransactionCode, MessageID\n, Email= iff(isempty(Email),User, Email), TerminalIPv6, Host= iff(isempty(Host), TerminalIPv6, Host)\n| extend AlertDescription= strcat('Obsolete/ Insecure Program ' , ABAPProgramName, ' was executed by ', User), Dummy=' '\n| extend PackedDetails= pack_all()\n",
                                "queryFrequency": "PT2H",
                                "queryPeriod": "PT2H",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP",
                                        "dataTypes": [
                                            "SAPUsersGetVIP",
                                            "SAPSystems"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Discovery",
                                    "CommandAndControl"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "ProcessId",
                                                "columnName": "TransactionCode"
                                            },
                                            {
                                                "identifier": "CommandLine",
                                                "columnName": "ABAPProgramName"
                                            }
                                        ],
                                        "entityType": "Process"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "AlertPerResult"
                                },
                                "customDetails": {
                                    "SAP_User": "User"
                                },
                                "alertDetailsOverride": {
                                    "alertDisplayNameFormat": "{{AlertDescription}}",
                                    "alertSeverityColumnName": "Dummy",
                                    "alertTacticsColumnName": "Dummy",
                                    "alertDescriptionFormat": "Identifies execution of an obsolete/insecure ABAP program.\nSource Action: Execute a program directly using SE38/SA38/SE80 or by using a background job.\n**Recommended for Production only**\nObsolete programs should be maintained in \"SAP - Obsolete Programs\" Watchlist\n*Data Sources: SAPcon -  Audit Log*\n{{PackedDetails}}\n"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId32'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 32",
                                "parentId": "[variables('analyticRuleId32')]",
                                "contentId": "[variables('analyticRulecontentId32')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion32')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName33')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 33 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName33'),'/',variables('analyticRuleVersion33'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName33'))]"
            ],
            "properties": {
                "description": "SAP - Execution of Sensitive Function Module_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion33')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId33')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies execution of a sensitive ABAP Function Module.\n\nSource Action: Execute a sensitive function module directly using SE37.\n\n**Recommended for Production only**\n\nSensitive functions should be maintained in \"SAP - Sensitive Function Modules\" Watchlist.\nTable logging changes should be activated for table \"EUFUNC\" in backend. (SE13)\n\n*Data Sources: SAPcon -  Table Data Log*",
                                "displayName": "SAP - Execution of Sensitive Function Module",
                                "enabled": false,
                                "query": "// Define variables\nlet RelTable = \"EUFUNC\"; // Relevant table\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\nlet SenseModules =  _GetWatchlist('SAP - Sensitive Function Modules');\nlet fixedModules = datatable(FunctionModule:string)['RSAU_CLEAR_AUDIT_LOG','BAPI_USER_CREATE', 'RFC_GET_TABLE_ENTRIES'];\nlet UnitedModules =\ntoscalar(union fixedModules, SenseModules\n| summarize FunctionModules =  make_set(FunctionModule));\n// Query logic\nlet LastLogin =\nSAPAuditLog\n| where MessageID in (AuditLogIn)\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID, ClientID, User; // Get last connection date for user\nSAPTableDataLog\n| where TableName == RelTable\n| extend Module = extract(@\"\\s+(.{1,}\\b)\\s+\", 1, LogKey, typeof(string)) // Extract Function Module\n| extend FunctionGroup = extract(@\"^FL([^\\s]*)\\s\", 1, LogKey, typeof(string)) // Extract Function Group\n| extend ExecutionVariant = extract(@\"\\b(\\w+)$\", 1, LogKey, typeof(string)) // Extract Execution Varient\n| where Module in (UnitedModules) // Module is sensitive\n| lookup kind=inner LastLogin on $left.UserName == $right.User\n| project TimeGenerated, Instance ,SystemID, UserName, ClientID, Email, TerminalIPv6, Host, Module, FunctionGroup, ExecutionVariant\n",
                                "queryFrequency": "PT2H",
                                "queryPeriod": "PT2H",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP"
                                    }
                                ],
                                "tactics": [
                                    "Discovery",
                                    "CommandAndControl"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "AlertPerResult"
                                },
                                "customDetails": {
                                    "SAP_User": "UserName"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId33'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 33",
                                "parentId": "[variables('analyticRuleId33')]",
                                "contentId": "[variables('analyticRulecontentId33')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion33')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName34')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 34 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName34'),'/',variables('analyticRuleVersion34'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName34'))]"
            ],
            "properties": {
                "description": "SAP - FTP for non authorized servers_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion34')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId34')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies FTP connection for non authorized server.\nMaintain new Watchlist, similar to SAPFTP_SERVERS\nSource Action: Create a new FTP connection e.g. by using Function Module FTP_CONNECT.\n\n*Data Sources: SAPcon -  Audit Log*",
                                "displayName": "SAP - FTP for non authorized servers",
                                "enabled": false,
                                "query": "// Define variables\nlet AuditClasses = dynamic(['DU8']); // Message of Successfull FTP Connection\nlet FTPSafeConnections = _GetWatchlist(\"SAP - FTP Servers\");\nlet fixedConnections = datatable(Client: string, Description: string,\nFTP_Server_Name: string, FTP_Server_Port: string)\n    // Maintain these if WatchList is not available\n    [100, \"description\", \"http://ourorgftpserver.com/\", 22]\n;\nlet UnitedConnections = toscalar(union kind=outer isfuzzy=true FTPSafeConnections, fixedConnections | summarize Connections = make_set(FTP_Server_Name));\n// Query logic\nSAPAuditLog\n| where MessageID in (AuditClasses)\n| extend TerminalIPv6 = Variable1\n| where TerminalIPv6 !in (UnitedConnections) // The IP is unknown\n| project TimeGenerated, Instance ,User, SystemID, ClientID, Email, TerminalIPv6, Host\n",
                                "queryFrequency": "PT6H",
                                "queryPeriod": "PT6H",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP"
                                    }
                                ],
                                "tactics": [
                                    "Discovery",
                                    "InitialAccess",
                                    "CommandAndControl"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "SAP_User": "User"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId34'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 34",
                                "parentId": "[variables('analyticRuleId34')]",
                                "contentId": "[variables('analyticRulecontentId34')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion34')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName35')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 35 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName35'),'/',variables('analyticRuleVersion35'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName35'))]"
            ],
            "properties": {
                "description": "SAP - Function Module tested_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion35')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId35')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies testing of a function module.\n\nSource Action: Test a function module using  SE37 / SE80.\n\n**Recommended for Production only**\n\n*Data Sources: SAPcon -  Audit Log*",
                                "displayName": "SAP - Function Module tested",
                                "enabled": false,
                                "query": "let Role = 'Production';\nlet ProgramName = 'RS_TESTFRAME_CALL';\nlet AuditClasses = dynamic(['AUW']); // Audit Log Classes - Report Started\nlet allSystemRoles = dynamic(['Sandbox', 'Developement', 'QualityAssurance', 'Training', 'Production']); // Available System Roles\nlet allSystemUsage = dynamic (['ERP', 'CRM', 'BW', 'Solman', 'Gateway', 'Enterprise Portal']); // Available System Usages\n// Get Relevant Systems from WatchList\nlet systemID = _GetWatchlist('SAP - Systems');\nlet fixedSID = datatable(SystemID: string, SystemRole: string, SystemUsage: string)\n    // Maintain these if WatchList is not available\n    [\"S4H\", \"Production\", \"ERP\",\n    \"XXX\", \"Sandbox\", \"BW\"]\n;\nlet UnitedSystem =\nunion systemID, fixedSID\n| summarize by SystemID, SystemRole, SystemUsage\n| where SystemRole == Role; // Reccommended is Production only\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\nSAPAuditLog\n| where MessageID in (AuditClasses)\n| where ABAPProgramName == ProgramName\n| project-rename SystemIDTemp = SystemID\n| project-rename SystemID= SystemIDTemp\n| project-rename SystemID= SystemID\n| lookup kind = inner (UnitedSystem) on SystemID\n| order by TimeGenerated asc\n| project TimeGenerated, Instance ,User, SystemID, ClientID, MessageText, MessageID,\nEmail, TerminalIPv6, Host\n",
                                "queryFrequency": "PT6H",
                                "queryPeriod": "PT6H",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP"
                                    }
                                ],
                                "tactics": [
                                    "Collection",
                                    "DefenseEvasion",
                                    "LateralMovement"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "AlertPerResult"
                                },
                                "customDetails": {
                                    "SAP_User": "User"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId35'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 35",
                                "parentId": "[variables('analyticRuleId35')]",
                                "contentId": "[variables('analyticRulecontentId35')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion35')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName36')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 36 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName36'),'/',variables('analyticRuleVersion36'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName36'))]"
            ],
            "properties": {
                "description": "SAP - Insecure FTP servers configuration_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion36')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId36')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": " Identifies Insecure FTP servers configuration - FTP Whitelist is empty / Contains Placeholders.\n\nSource Action: Do not maintain / maintain values which contains placeholders in table SAPFTP_SERVERS using maintenance view SAPFTP_SERVERS_V. (SM30)\n\n*Data Sources: SAPcon -  Audit Log*",
                                "displayName": "SAP - Insecure FTP servers configuration",
                                "enabled": false,
                                "query": "// Define variables\nlet AuditClasses = dynamic(['DU1', 'DU2']); // Messages of FTP Whitelist is empty / Contains Placeholders\n// Query logic\nSAPAuditLog\n| where MessageID in (AuditClasses)\n| project TimeGenerated, Instance, SystemID, ClientID, User, Email, TerminalIPv6, Host, Reason = MessageText\n",
                                "queryFrequency": "PT6H",
                                "queryPeriod": "PT6H",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP"
                                    }
                                ],
                                "tactics": [
                                    "InitialAccess",
                                    "CommandAndControl"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "SAP_User": "User"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId36'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 36",
                                "parentId": "[variables('analyticRuleId36')]",
                                "contentId": "[variables('analyticRulecontentId36')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion36')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName37')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 37 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName37'),'/',variables('analyticRuleVersion37'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName37'))]"
            ],
            "properties": {
                "description": "SAP - Lifecycle - SAP Notes were implemented in system_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion37')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId37')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies SAP Notes implementation in the system.\n\nSource Action: Implement SAP Note using SNOTE/TCI.\n\n*Data Sources: SAPcon -  Change Requests*",
                                "displayName": "SAP - Lifecycle - SAP Notes were implemented in system",
                                "enabled": false,
                                "query": "// Define variables\nlet VarNote = \"NOTE\";\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\n// Query logic\nlet LastLogin =\nSAPAuditLog\n| where MessageID in (AuditLogIn)\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID, ClientID, User; // Get last connection date for user\nSAPCRLog\n| where ObjectType == VarNote // Type is NOTE\n| lookup kind=inner LastLogin on $left.Owner == $right.User // Get last login details\n| summarize by TimeGenerated, Instance, SystemID, SystemNumber, ClientID, Owner, Request, Description, ObjectName, Category, Status, Email, TerminalIPv6, Host\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT1H",
                                "severity": "Informational",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP"
                                    }
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "SAP_User": "Owner"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId37'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 37",
                                "parentId": "[variables('analyticRuleId37')]",
                                "contentId": "[variables('analyticRulecontentId37')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion37')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName38')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 38 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName38'),'/',variables('analyticRuleVersion38'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName38'))]"
            ],
            "properties": {
                "description": "SAP - Login from unexpected network_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion38')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId38')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies logons from an unexpected network.\n\nSource Action: Logon to the backend system from an IP address which is not assigned to one of the netwroks.\n\nNetworks should be maintained in watchlist \"SAP - Networks\"\n\n*Data Sources: SAPcon -  Audit Log*",
                                "displayName": "SAP - Login from unexpected network",
                                "enabled": false,
                                "query": "let AuditClasses = dynamic(['AU1','AU5']); // Audit Log Classes - Dialog Logon Successful, RFC Logon Successful\n// Dialog / CPIC / RFC Int / RFC Ext / SRFC / User Switch / HTTP / Restore Session / API Call\nlet DialogLogonTypes = dynamic(['A', 'C', 'F', 'R', 'S', 'U', 'H', 'u', ' ']);\nlet Networks = _GetWatchlist('SAP - Networks');\nlet fixedNetworks = datatable(Network: string)['111.68.128.0/17']; // Maintain these if watchlist is not available\nlet allNetworks = union Networks, fixedNetworks\n    | summarize by Network;\nSAPAuditLog\n// Add audit classes\n| where MessageID in (AuditClasses)\n| where Variable1 in (DialogLogonTypes) // Is a dialog logon type from the list\n| where isnotempty(TerminalIPv6) // There is a Ipv6 address\n| evaluate ipv4_lookup(allNetworks, TerminalIPv6, Network, return_unmatched = true)\n// Similar to regular lookup, by ipv4 address, unmatched is like left join\n| where isempty(Network) // Network is not familiar\n// Details\n| project TimeGenerated, SystemID, ClientID, User, TransactionCode, MessageText, Email , TerminalIPv6, Host\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT1H",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP"
                                    }
                                ],
                                "tactics": [
                                    "InitialAccess"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "SAP_User": "User"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId38'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 38",
                                "parentId": "[variables('analyticRuleId38')]",
                                "contentId": "[variables('analyticRulecontentId38')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion38')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName39')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 39 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName39'),'/',variables('analyticRuleVersion39'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName39'))]"
            ],
            "properties": {
                "description": "SAP - Missing configuration in the Dynamic Security Audit Log Monitor_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion39')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId39')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "An SAP audit log event has occurred bearing a message ID which was not maintained in the SAP_Dynamic_Audit_Log_Monitor_Configuration watchlist.\nThe SAP_Dynamic_Audit_Log_Monitor_Configuration watchlist allows for dynamically alerting on SAP audit log events.\nRecommended solution - go to the SAP_Dynamic_Audit_Log_Monitor_Configuration and add the missing SAP audit log message ID.  Specify a severity level of medium or high to have this message ID covered by the alerts based on rule \"Dynamic Security Audit Log Monitor\".",
                                "displayName": "SAP - Missing configuration in the Dynamic Security Audit Log Monitor",
                                "enabled": false,
                                "query": "let MissingMessagesinSystems = SAPAuditLog\n| summarize LastSeenMessageOn = arg_max(TimeGenerated, MessageID) by MessageID, SystemID, ClientID\n| join kind = leftanti (SAPAuditLogConfiguration(SelectedSeverities =  dynamic([\"All Severities\"])) | summarize by MessageID) on MessageID\n| project-keep LastSeenMessageOn, MessageID, SystemID, ClientID\n| project-rename MissingMessageID = MessageID, ComingFromSystemID = SystemID\n| extend Dummy = 1;\nlet MissingSummary = MissingMessagesinSystems\n| summarize\n  ComingFromSystemIDs =  make_set(ComingFromSystemID)\n, MissingMessageIDs = make_set(MissingMessageID)\n| extend ComingFromSystemIDs = iff(array_length(ComingFromSystemIDs) > 1, strcat('Systems ', strcat_array(ComingFromSystemIDs,\", \")), strcat('System ',strcat_array(ComingFromSystemIDs,\", \")))\n| extend MissingMessageIDs = iff(array_length(MissingMessageIDs) > 1, strcat('Message IDs ', strcat_array(MissingMessageIDs,\", \"), \" have occured in \"), strcat('Message ID ',strcat_array(MissingMessageIDs,\", \"), \" has occured in \"))\n| extend Dummy = 1;\nMissingMessagesinSystems | join kind= inner MissingSummary on Dummy\n| project-away Dummy, Dummy1\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Informational",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP",
                                        "dataTypes": [
                                            "SAPAuditLogConfiguration"
                                        ]
                                    }
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "ComingFromSystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "SAPAuditLogMessageID": "[variables('_MissingMessageID')]"
                                },
                                "alertDetailsOverride": {
                                    "alertDisplayNameFormat": "SAP - Missing configuration for SAP's audit log, {{ComingFromSystemIDs}}",
                                    "alertSeverityColumnName": "ClientID",
                                    "alertTacticsColumnName": "ClientID",
                                    "alertDescriptionFormat": "An SAP audit log event with {{MissingMessageIDs}}{{ComingFromSystemIDs}}, for which a configuration in the SAPAuditLogConfigurator watchlist could not be found.</br>\nThe SAPAuditLogConfigurator watchlist allows for dynamically alerting on SAP audit log events. </br>\nRecommended solution - go to the SAPAuditLogConfigurator and add the missing SAP audit log message ID.\nSpecify a severity level of medium or high to have this message ID covered by the alerts based on rule \"SAP - Dynamic Alerts for Configured Audit Log Events\".\n\n"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId39'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 39",
                                "parentId": "[variables('analyticRuleId39')]",
                                "contentId": "[variables('analyticRulecontentId39')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion39')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName40')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 40 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName40'),'/',variables('analyticRuleVersion40'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName40'))]"
            ],
            "properties": {
                "description": "SAP - Multiple Files Download_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion40')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId40')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies multiple files downloads for a user within a specific timerange.\n\nSource Action: Download multiple files while using SAPGui to Excel/Lists etc.\n\n*Data Sources: SAPcon -  Audit Log*",
                                "displayName": "SAP - Multiple Files Download",
                                "enabled": false,
                                "query": "// Define variables\nlet NumberOfDownloads = 10; // Number of downloads of user as threshold\nlet HoursBucket = 2h; // How much time between buckets\nlet AuditClasses = dynamic([\"AUY\"]); // Relevant message\n// Query logic\nSAPAuditLog // Get all downloads\n| where MessageID in (AuditClasses)\n| summarize DownloadsByUser = count() by bin(TimeGenerated, HoursBucket), SystemID, ClientID, User, TerminalIPv6, Email, Host\n| where DownloadsByUser >= NumberOfDownloads // User downloaded more than threshold\n| project SystemID, ClientID, User, Email, TerminalIPv6, Host,DownloadsByUser\n",
                                "queryFrequency": "PT12H",
                                "queryPeriod": "PT12H",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP"
                                    }
                                ],
                                "tactics": [
                                    "Collection",
                                    "Exfiltration",
                                    "CredentialAccess"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "AlertPerResult"
                                },
                                "customDetails": {
                                    "SAP_User": "User"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId40'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 40",
                                "parentId": "[variables('analyticRuleId40')]",
                                "contentId": "[variables('analyticRulecontentId40')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion40')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName41')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 41 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName41'),'/',variables('analyticRuleVersion41'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName41'))]"
            ],
            "properties": {
                "description": "SAP - Multiple Logons by IP_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion41')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId41')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies logon of several users from same IP within scheduled time interval.\n\nSource Action: Logon using several users thorugh the same IP.\nNetworks can be excluded from this alert by specifying ranges in the 'SAP - Excluded Networks' watchlist.\nThis rule alerts on \"empty\" IP addresses as well- Add an entry with serachkey= 000.00.000.0 and Description= EmptyIPAddressesShouldBeExcluded in the 'SAP - Excluded Networks' watchlist to avoid alerting on empty IP addresses\n*Data Sources: SAPcon -  Audit Log*",
                                "displayName": "SAP - Multiple Logons by IP",
                                "enabled": false,
                                "query": "// SAP - Medium - Multiple Logons by IP\n// Define variables\nlet AuditClasses = dynamic(['AU1', 'AU5']); // Audit Log Classes - Dialog Logon Successful, RFC Logon Successful\nlet DialogLogonTypes = dynamic(['A', 'C', 'F', 'R', 'S', 'U', 'H', 'u', ' ']); // Dialog / CPIC / RFC Int / RFC Ext / SRFC / User Switch / HTTP / Restore Session / API Call\nlet excNetworks = materialize(_GetWatchlist('SAP - Excluded Networks')); // Networks that should be removed from query\n// add an entry with serachkey= 000.00.000.0 and Description= EmptyIPAddressesShouldBeExcluded in the 'SAP - Excluded Networks' watchlist\n// to avoid alerting on empty IP addresses\nlet EmptyIPAddressesShouldBeExcluded = toscalar(excNetworks\n| where Description == 'EmptyIPAddressesShouldBeExcluded'\n| summarize Count =count()\n| project IfEmptyIPAddressesShouldBeExcluded = iff(Count> 0, true, false));\nlet fixedNetworks =\ndatatable(Network:string)\n// Maintain these if WatchList is not available\n    [\"255.68.255.0/32\", \"\"];\nlet UnitedNetworks = union excNetworks, fixedNetworks\n| summarize by Network\n| where isnotempty(Network)\n| extend DummyJoinField= 1;\nlet UsersPerIP = 1;\n// Query logic\nSAPAuditLog\n// rule only cares for audit records with IP addresses\n| where isnotempty(TerminalIPv6) or  EmptyIPAddressesShouldBeExcluded== false\n| where MessageID in (AuditClasses)\n| where Variable1 in (DialogLogonTypes)\n| extend DummyJoinField= 1\n| join kind= inner UnitedNetworks on DummyJoinField\n// check if IP is in one of the ranges of the watchlist\n| extend IPIsInRange= ipv4_is_in_range(TerminalIPv6, Network )\n| extend UserandEmail = pack(\"ID\", User, \"Email\", Email)\n// count cases in which an IP address shows in any of the ranges in the watchlist\n| summarize CountUsers = dcount(strcat(User, \"_&_\", Email)), Users = make_set(UserandEmail), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated)\n, IPIsInRange= countif(IPIsInRange)\n    by SystemID, ClientID, TerminalIPv6\n// filter out matches of IPs and excluded networks\n| where IPIsInRange == 0\n| where CountUsers > UsersPerIP\n| mv-expand Users\n| evaluate bag_unpack(Users, \"User_\")\n| project SystemID , ClientID, TerminalIPv6, StartTime, EndTime,\n    User = column_ifexists(\"User_ID\", \"\"),\n    Email = column_ifexists(\"User_Email\", \"\")\n| extend Email= iff(isempty(Email), User, Email)\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT1H",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP"
                                    }
                                ],
                                "tactics": [
                                    "InitialAccess"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "AlertPerResult"
                                },
                                "customDetails": {
                                    "SAP_User": "User"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId41'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 41",
                                "parentId": "[variables('analyticRuleId41')]",
                                "contentId": "[variables('analyticRulecontentId41')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion41')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName42')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 42 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName42'),'/',variables('analyticRuleVersion42'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName42'))]"
            ],
            "properties": {
                "description": "SAP - Multiple Password Changes_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion42')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId42')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies multiple password changes at different levels:\n1. Users across systems\n2. Per user performing the password change\n3. Per user who's password is being changed\n\nSource Action: Change user password",
                                "displayName": "SAP - Multiple Password Changes",
                                "enabled": false,
                                "query": "// Multiple Password Changes by User\n// !!!IMPORTANT!!!\n// please make sure \"Lookup data from the last\" parameter is greater than a full user master data update cycle\n// this is critical so we can infer the changed user AD account ID\n// actual lookback period is maintained by the TimeAgo parameter\nlet TimeAgo= 3h;\nlet SelectedSystemRoles =  dynamic([\"Production\"]); //can also do// let SelectedSystemRoles =  dynamic([\"Production\", \"UAT\"]); dynamic([\"All System Roles\"])\nlet SelectedSystems = SAPSystems(SelectedSystemRoles=SelectedSystemRoles) | project SystemID= SearchKey;\n// here you can exclude system users which are OK to perform multiple password changes\n// by adding those users in the SAP_User_Config watchlist with a tag of 'UpdateMultiPassOK'\nlet excludeUsersTags= dynamic(['UpdateMultiPassOK']);\nlet excludedUsers= _GetWatchlist('SAP_User_Config')| where Tags has_any (excludeUsersTags)| summarize by User2Exclude=SAPUser;\nlet PasswordChanges = materialize(SAPAuditLog\n| where TimeGenerated > ago(1d)\n| where ingestion_time() > TimeAgo\n| where MessageID == \"BU2\" // Audit Log Classes - Password Changed\n| join kind= inner  SelectedSystems on SystemID\n| join kind=leftantisemi excludedUsers on $left.User == $right.User2Exclude\n| extend UserReset= Variable2\n| extend Email= iff(isempty(Email), User, Email)\n| extend Host= iff(isempty(Host), TerminalIPv6, Host)\n| summarize Count= count(), Email =any(Email), Host=any(Host), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated)  by User, UserReset, TerminalIPv6, ClientID, SystemID) ;\nlet PerUserSysClient = 3; // Systems & Clients per User\nlet TPerUserSysClient= PasswordChanges\n| extend DetailsBy = pack(\"SystemID\", SystemID, \"ClientID\", ClientID, 'UserChanging', User, 'Email', Email)\n| summarize CountPerUserSysClient = dcount(strcat(SystemID, ClientID)), User= any(User), StartTime = min(StartTime), EndTime = max(EndTime), Details = make_set(DetailsBy, 10)\nby UserReset\n| where  CountPerUserSysClient>= PerUserSysClient\n| where isnotempty(UserReset)\n| extend AlertDescription= strcat('User\\'s ',UserReset, ' password was reset across ', CountPerUserSysClient, ' systems '), Source= 'PerUserSysClient';\nlet PerUserChanged = 3;  // password changes across all systems and scenarios\nlet TPerUserChanged = PasswordChanges\n| extend DetailsBy = pack(\"SystemID\", SystemID, \"ClientID\", ClientID, 'UserChanging', User, 'Email', Email)\n| summarize CountPerUserChanged = sum(Count), User= any(User), StartTime = min(StartTime), EndTime = max(EndTime) , Details = make_set(DetailsBy, 10)\nby UserReset\n| where  CountPerUserChanged >= PerUserChanged\n| extend AlertDescription= strcat('User\\'s ',UserReset, ' password was reset ', CountPerUserChanged, ' times', ' by user ', User), Source= 'PerUserChanged';\nlet PerUserChanging = 3; // user changing across all systems\nlet TPerUserChanging = PasswordChanges\n| extend DetailsBy = pack(\"SystemID\", SystemID, \"ClientID\", ClientID, 'UserReset', UserReset)\n| summarize CountPerUserChanging = sum(Count), StartTime = min(StartTime), EndTime = max(EndTime), Details = make_set(DetailsBy, 10), ResetUsers= make_set(UserReset, 10)\n, Email= anyif(Email, isnotempty(Email)), TerminalIPv6= anyif(TerminalIPv6, isnotempty(TerminalIPv6))\nby User\n| where  CountPerUserChanging >= PerUserChanging\n| extend AlertDescription= strcat('User ',User, ' has changed passwords ', CountPerUserChanging, ' times to user ', tostring(ResetUsers)), Source= 'PerUserChanging';\n TPerUserSysClient | union TPerUserChanged, TPerUserChanging\n| extend Dummy=' ', PackedDetails= pack_all()\n| mv-expand Details\n| evaluate bag_unpack(Details, \"Details_\") // Unpack the details to a couple of fields\n| project\n    StartTime, EndTime, User, TerminalIPv6, AlertDescription\n    , Count= CountPerUserSysClient + CountPerUserChanged + CountPerUserChanging, PackedDetails,\n    SystemID = column_ifexists(\"Details_SystemID\", \"\"),\n    ClientID = column_ifexists(\"Details_ClientID\", \"\"),\n    UserReset= strcat(column_ifexists(\"Details_UserReset\", \"\"), column_ifexists(\"UserReset\", \"\") ),\n    Email= strcat(column_ifexists(\"Details_Email\", \"\"), column_ifexists(\"Email\", \"\") )\n | join kind= leftouter  (SAPUsersEmail | project SystemID, ClientID, UserReset= User, EmailReset= Email) on UserReset, SystemID, ClientID\n | extend EmailReset= iff(isempty(EmailReset), UserReset, EmailReset), Dummy= ''\n | project-away ClientID1, SystemID1, UserReset1\n",
                                "queryFrequency": "PT3H",
                                "queryPeriod": "P7D",
                                "severity": "Low",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP",
                                        "dataTypes": [
                                            "SAPUsersEmail",
                                            "SAPSystems",
                                            "SAPAuditLog"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "CredentialAccess"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "EmailReset"
                                            }
                                        ],
                                        "entityType": "Account"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "AlertPerResult"
                                },
                                "customDetails": {
                                    "UserReset": "UserReset",
                                    "SAP_User": "User"
                                },
                                "alertDetailsOverride": {
                                    "alertDisplayNameFormat": "{{AlertDescription}}",
                                    "alertSeverityColumnName": "Dummy",
                                    "alertTacticsColumnName": "Dummy",
                                    "alertDescriptionFormat": "Identifies multiple password changes at different levels:\n1. Users across systems\n2. Per user performing the password change\n3. Per user who's password is being changed\n\nSource Action: Change user password\n\n{{PackedDetails}}\n"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId42'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 42",
                                "parentId": "[variables('analyticRuleId42')]",
                                "contentId": "[variables('analyticRulecontentId42')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion42')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName43')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 43 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName43'),'/',variables('analyticRuleVersion43'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName43'))]"
            ],
            "properties": {
                "description": "SAP - Multiple Spool Executions_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion43')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId43')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies multiple spools for a user within a specific timerange.\n\nSource Action: Create and execute multiple Spool Jobs from any type by a user. (SP01)\n\n*Data Sources: SAPcon -  Spool Log*",
                                "displayName": "SAP - Multiple Spool Executions",
                                "enabled": false,
                                "query": "// Define variables\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\nlet NumberOfRequests = 3; // Number of requests as threshold\nlet HoursBucket = 2h; // // How much time between buckets\n// Query logic\nlet LastLogin =\nSAPAuditLog\n| where MessageID in (AuditLogIn)\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID, ClientID, User, Instance; // Get last connection date for user\nSAPSpoolLog // Get all spool requests\n| summarize UserRequests = count() by bin(TimeGenerated, HoursBucket), SystemID, ClientID, User, Instance\n| where UserRequests >= NumberOfRequests // User requested to print more than threshold\n| lookup kind=inner LastLogin on User // Check IP of last login\n| project TimeGenerated, Instance, SystemID, ClientID, User, Email, TerminalIPv6, Host, UserRequests\n",
                                "queryFrequency": "PT12H",
                                "queryPeriod": "PT12H",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP"
                                    }
                                ],
                                "tactics": [
                                    "CredentialAccess",
                                    "Collection",
                                    "Exfiltration"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "SAP_User": "User"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId43'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 43",
                                "parentId": "[variables('analyticRuleId43')]",
                                "contentId": "[variables('analyticRulecontentId43')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion43')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName44')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 44 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName44'),'/',variables('analyticRuleVersion44'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName44'))]"
            ],
            "properties": {
                "description": "SAP - Multiple Spool Output Executions_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion44')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId44')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies multiple spools for a user within a specific timerange.\n\nSource Action: Create and execute multiple Spool Jobs from any type by a user. (SP01)\n\n*Data Sources: SAPcon -  Spool Log*",
                                "displayName": "SAP - Multiple Spool Output Executions",
                                "enabled": false,
                                "query": "// Define variables\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messeges of connect with user\nlet NumberOfPrints = 3; // Number of prints as threshold\nlet HoursBucket = 2h; // // How much time between buckets\n// Query logic\nlet LastLogin =\nSAPAuditLog\n| where MessageID in (AuditLogIn)\n| summarize arg_max(TimeGenerated, *) by SystemID, ClientID, User, Instance; // Get last connection date for user\nSAPSpoolOutputLog // Get all spool outputs\n| summarize UserPrints = count() by bin(TimeGenerated, HoursBucket), SystemID, ClientID, User, Instance\n| where UserPrints >= NumberOfPrints // User requested to print more than threshold\n| lookup kind=inner LastLogin on User // Get IP of last login\n| project TimeGenerated, Instance, SystemID, ClientID, User, Email, TerminalIPv6,  Host, UserPrints\n",
                                "queryFrequency": "PT12H",
                                "queryPeriod": "PT12H",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP"
                                    }
                                ],
                                "tactics": [
                                    "CredentialAccess",
                                    "Collection",
                                    "Exfiltration"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "SAP_User": "User"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId44'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 44",
                                "parentId": "[variables('analyticRuleId44')]",
                                "contentId": "[variables('analyticRulecontentId44')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion44')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName45')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 45 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName45'),'/',variables('analyticRuleVersion45'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName45'))]"
            ],
            "properties": {
                "description": "SAP - Multiple Subnets by User_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion45')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId45')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies logon of the same user from several subnets within scheduled time interval.\nMultiple configuration options available within the query.\n\nSource Action: Logon using the same user thorugh different IP's.\n\n*Data Sources: SAPcon -  Audit Log*",
                                "displayName": "SAP - Multiple Subnets by User",
                                "enabled": false,
                                "query": "// SAP - Multiple Subnets by User (previously named as SAP - Multiple Logons by User)\n// !!!IMPORTANT!!!\n// please make sure \"Lookup data from the last\" parameter is greater than a full user master data update cycle\n// please keep \"Lookup data from the last\" to be 7 days to allow coverage of user master data required\n// actual lookback is set by setting TimeAgo\n// Define variables\n// CONFIG OPTION time ago is same as lookback\nlet TimeAgo= 1h;\n// CONFIG OPTION Mask is a number between 0 and 32 representing sensitivity to network changes\n// Mask= 32 means '192.168.1.255' and '192.168.1.254' are different addresses.\n// Mask= 24 means '255.255.255.0' and '255.255.255.255' are considered as same address.\nlet Mask= 24;\nlet AuditClasses = dynamic(['AU1', 'AU5']); // Logon successful, RFC/CPIC logon successful\n// CONFIG OPTION - include users by types ([\"A\", \"Dialog\", \"B\", \"System\", \"C\", \"Communications Data\", \"L\", \"Reference (Logon not possible)\", \"S\", \"Service\"])\nlet UsersTypeToInclude= dynamic([\"A\"]);// Dialog Only\n// CONFIG OPTION - exclude users by user classes\nlet UserClassesToExclude= dynamic([\"SUPER\", \"SYSTEM\"]);\nlet UserInFocus= (SAP_USR02\n| where CLASS !in (UserClassesToExclude)\n| where USTYP in (UsersTypeToInclude)\n| summarize arg_max(TimeGenerated, *) by GLTGB, SystemID, User=BNAME, ClientID= MANDT, UserType=USTYP\n| summarize arg_max(GLTGB, *) by SystemID, User, ClientID, UserType);\n// Dialog / CPIC / RFC Int / RFC Ext / SRFC / User Switch / HTTP / Restore Session / API Call\nlet DialogLogonTypes = dynamic(['A', 'C', 'F', 'R', 'S', 'U', 'H', 'u', ' ']);\nlet excUsers = _GetWatchlist('SAP - Excluded Users'); // Users that should be removed from query\nlet fixedExcUsers = datatable(User: string) [\"SYSWF\"];\n// CONFIG OPTION- exclude user by SAP roles, profiles or tags\n// here you can exclude system users which are OK to logon from multiple IPs\n// by adding those users in the SAP_User_Config watchlist with a tag of 'MultipleIPsOK'\n// can also specify SAP Roles or Profiles to exclude\nlet excludeUsersTags= dynamic(['MultipleIPsOK', \"SAPRole1\", \"SAPProfile1\"]);\nlet excludedUsers= SAPUsersGetVIP(SearchForTags= excludeUsersTags)| summarize by User2Exclude=SAPUser;\nlet UnitedExcUsers =\n    toscalar(union excUsers, fixedExcUsers\n    | summarize Users = make_set(User));\n// CONFIG OPTION- set the threshold of the number of unique IP addresses per user\nlet IPThreshold = 1;\n// CONFIG OPTION- exclude networks (or ranges) using the watchlist\nlet ExcNetworks = toscalar(_GetWatchlist('SAP - Excluded Networks') // Networks that should be removed from query\n| where isnotempty(Network)\n| summarize make_set(Network));\n// CONFIG OPTION- exclude blank IP addresses\n// add an entry with serachkey= 000.00.000.0 and Description= EmptyIPAddressesShouldBeExcluded in the 'SAP - Excluded Networks' watchlist\n// to avoid alerting on empty IP addresses\nlet EmptyIPAddressesShouldBeExcluded = toscalar(_GetWatchlist('SAP - Excluded Networks')\n| where Description == 'EmptyIPAddressesShouldBeExcluded' and SearchKey == \"000.00.000.0\" | take 1\n| project IfEmptyIPAddressesShouldBeExcluded = true);\n// Query Logic\nlet LogOns= materialize(SAPAuditLog\n| where TimeGenerated > ago(1d)\n// actual lookback is set by setting TimeAgo\n| where ingestion_time() > ago(TimeAgo)\n| where MessageID in (AuditClasses)\n| where isnotempty(TerminalIPv6) or  EmptyIPAddressesShouldBeExcluded != true\n| where ipv4_is_in_any_range(TerminalIPv6, ExcNetworks) == false\n| where Variable1 in (DialogLogonTypes)\n| where User !in (UnitedExcUsers)\n| join kind=leftantisemi excludedUsers on $left.User == $right.User2Exclude\n| join kind= inner UserInFocus on SystemID, ClientID, User\n| summarize LogonCount= count(), StartTime = min(TimeGenerated), UserType= any(UserType)\n    ,EndTime = max(TimeGenerated), Email= any(Email), Instance= any(Instance), Host= any(Host) by SystemID, ClientID, User, TerminalIPv6) ;\n// aggregate the number of subnets (not IP addresses) by user\nlet UsersWithTooManySubnets= LogOns\n| extend MaskedIP= format_ipv4_mask(TerminalIPv6, Mask)\n| summarize CountSubnets= dcount(MaskedIP) by User\n| where CountSubnets > IPThreshold;\nUsersWithTooManySubnets | join kind = inner LogOns on User\n| project SystemID, ClientID, User, StartTime, EndTime, Email, TerminalIPv6, Instance, LogonCount, Host, CountSubnets, UserType\n| extend PackedDetails= pack_all()\n| extend AlertName= strcat('SAP - User ',User, ' has logged on from ', CountSubnets, ' different subnets'), Dummy= ''\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "P7D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP",
                                        "dataTypes": [
                                            "SAPUsersGetVIP",
                                            "SAP_USR02",
                                            "SAPAuditLog"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "CredentialAccess",
                                    "InitialAccess",
                                    "Collection"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "HostName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "AlertPerResult"
                                },
                                "customDetails": {
                                    "SAP_User": "User"
                                },
                                "alertDetailsOverride": {
                                    "alertDisplayNameFormat": "{{AlertName}}",
                                    "alertSeverityColumnName": "Dummy",
                                    "alertTacticsColumnName": "Dummy",
                                    "alertDescriptionFormat": "Multipls subnets obsereved for user {{User}}.\n{{PackedDetails}}\n"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId45'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 45",
                                "parentId": "[variables('analyticRuleId45')]",
                                "contentId": "[variables('analyticRulecontentId45')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion45')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName46')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 46 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName46'),'/',variables('analyticRuleVersion46'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName46'))]"
            ],
            "properties": {
                "description": "SAP - New ICF Service Handlers_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion46')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId46')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies creation of ICF Handlers.\nSource Action: Assign a new handler to a service using SICF.\n*Data Sources: SAPcon - Table Data Log*",
                                "displayName": "SAP - New ICF Service Handlers",
                                "enabled": false,
                                "query": "// New ICF Service Handlers\nlet TimeAgo= 2h;\nSAPTableDataLog\n| where TimeGenerated > TimeAgo\n| where TableName == \"ICFHANDLER\"\n| where TableField == \"ICF_NAME\" // Service name\n| where OldValue == \"\" and NewValue != \"\" // New value is inserted in name -> new service\n| order by TimeGenerated desc\n| project-rename Service = NewValue\n| lookup SAPUsersHeader() on SystemID, $left.UserName== $right.User\n| extend TerminalIPv6= iff(isnotempty( LastKnownIP), LastKnownIP, PrimaryIP)\n| project TimeGenerated, Service, PrimaryIP, PrimaryEmail, KnownIPs, KnownEmails, LastKnownIP, User= UserName, Host, SystemID, Client, Instance\n| extend Dummy= ''\n",
                                "queryFrequency": "PT2H",
                                "queryPeriod": "PT2H",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP",
                                        "dataTypes": [
                                            "SAPUsersHeader"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Persistence",
                                    "LateralMovement",
                                    "CommandAndControl"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "PrimaryEmail"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "Client"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "SAP_User": "User"
                                },
                                "alertDetailsOverride": {
                                    "alertDisplayNameFormat": "SAP - High - New Handlers for  ICF Service {{Service}} created by {{User}} in System {{SystemID}}",
                                    "alertSeverityColumnName": "Dummy",
                                    "alertTacticsColumnName": "Dummy",
                                    "alertDescriptionFormat": "Identifies creation of ICF Handlers.\nSource Action: Assign a new handler to a service using SICF.\n*Data Sources: SAPcon - Table Data Log*\n"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId46'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 46",
                                "parentId": "[variables('analyticRuleId46')]",
                                "contentId": "[variables('analyticRulecontentId46')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion46')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName47')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 47 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName47'),'/',variables('analyticRuleVersion47'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName47'))]"
            ],
            "properties": {
                "description": "SAP - New ICF Services_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion47')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId47')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies creation of ICF Services.\nSource Action: Create a service using SICF.\n*Data Sources: SAPcon - Table Data Log*",
                                "displayName": "SAP - New ICF Services",
                                "enabled": false,
                                "query": "// New ICF Services\nlet TimeAgo= 2h;\nSAPTableDataLog\n| where TableName == \"ICFSERVLOC\"\n| where TimeGenerated > TimeAgo\n| where TableField == \"ICF_NAME\" // Service name\n| where OldValue == \"\" and NewValue != \"\" // New value is inserted in name -> new service\n| order by TimeGenerated desc\n| lookup SAPUsersHeader() on SystemID, $left.UserName== $right.User\n| extend TerminalIPv6= iff(isnotempty( LastKnownIP), LastKnownIP, PrimaryIP)\n| project TimeGenerated, Service = NewValue, PrimaryIP, PrimaryEmail, KnownIPs, KnownEmails, LastKnownIP, User= UserName, Host, SystemID, Client, Instance\n| extend Dummy= ''\n",
                                "queryFrequency": "PT2H",
                                "queryPeriod": "P2D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP",
                                        "dataTypes": [
                                            "SAPUsersHeader"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "CommandAndControl",
                                    "Persistence",
                                    "LateralMovement"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "PrimaryEmail"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "Client"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "LastKnownIP"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "SAP_User": "User"
                                },
                                "alertDetailsOverride": {
                                    "alertDisplayNameFormat": "(Preview) SAP - High - New ICF Services created by {{User}} in system {{SystemID}}",
                                    "alertSeverityColumnName": "Dummy",
                                    "alertTacticsColumnName": "Dummy",
                                    "alertDescriptionFormat": "Identifies creation of ICF Services.\nSource Action: Create a service using SICF.\n*Data Sources: SAPcon - Table Data Log*\n"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId47'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 47",
                                "parentId": "[variables('analyticRuleId47')]",
                                "contentId": "[variables('analyticRulecontentId47')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion47')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName48')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 48 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName48'),'/',variables('analyticRuleVersion48'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName48'))]"
            ],
            "properties": {
                "description": "SAP - RFC Execution of a Sensitive Function Module_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion48')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId48')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies execution of a sensitive function module using RFC.\n\nSource Action: Execute a function module using RFC.\n\n**Recommended for Production only**\n\nFunction Modules should be maintained in watchlist \"SAP - Sensitive Function Modules\"\n\n*Data Sources: SAPcon -  Audit Log*",
                                "displayName": "SAP - RFC Execution of a Sensitive Function Module",
                                "enabled": false,
                                "query": "let Role = \"Production\";\nlet AuditClasses = dynamic(['AUK']); // Audit Log Classes - Successful RFC call &C (function group = &A)\nlet allSystemRoles = dynamic(['Sandbox', 'Developement', 'QualityAssurance', 'Training', 'Production']); // Available System Roles\nlet allSystemUsage = dynamic (['ERP', 'CRM', 'BW', 'Solman', 'Gateway', 'Enterprise Portal']); // Available System Usages\n// Get Relevant Systems from WatchList\nlet systemID = _GetWatchlist('SAP - Systems');\nlet fixedSID = datatable(SystemID: string, SystemRole: string, SystemUsage: string)\n    // Maintain these if WatchList is not available\n    [\"S4H\", \"Production\", \"ERP\",\n    \"XXX\", \"Sandbox\", \"BW\"]\n;\n// Get Relevant Function Modules\nlet SensitiveFM = _GetWatchlist('SAP - Sensitive Function Modules');\nlet fixedFM = datatable(FunctionModule: string)\n    // Maintain these if WatchList is not available\n    [\"RSAU_CLEAR_AUDIT_LOG\"]\n;\nlet UnitedSystems = union systemID, fixedSID\n| where SystemRole == Role // Recommended  is Production only\n| summarize by SystemID;\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\nlet UnitedSensitive =  union SensitiveFM, fixedFM\n| summarize by FunctionModule;\nSAPAuditLog\n| where MessageID in (AuditClasses)\n| project-rename FunctionModule = Variable3, FunctionGroup = Variable1\n| where SystemID in (UnitedSystems) // The systemID is in this list\n| where FunctionModule in (UnitedSensitive) // Function module is sensitive\n| order by TimeGenerated asc\n| project TimeGenerated,Instance ,User, SystemID, ClientID, MessageText, FunctionGroup, FunctionModule, MessageID, Email, TerminalIPv6, Host\n",
                                "queryFrequency": "PT2H",
                                "queryPeriod": "PT2H",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP"
                                    }
                                ],
                                "tactics": [
                                    "Discovery",
                                    "Exfiltration",
                                    "LateralMovement"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "SAP_User": "User"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId48'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 48",
                                "parentId": "[variables('analyticRuleId48')]",
                                "contentId": "[variables('analyticRulecontentId48')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion48')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName49')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 49 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName49'),'/',variables('analyticRuleVersion49'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName49'))]"
            ],
            "properties": {
                "description": "SAP - Security Audit Log Configuration Change_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion49')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId49')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Idenitifes changes for configuration in Securiy Audit Log\n\nSource Action: change any  Security Audit Log Configuration using SM19/RSAU_CONFIG. (Filters/Status/Recording mode etc..)\n\n*Data Sources: SAPcon -  Audit Log*",
                                "displayName": "SAP - Security Audit Log Configuration Change",
                                "enabled": false,
                                "query": "// Audit Log Classes - Audit Log Configuration Events\nlet AuditClasses = dynamic(['AUE','AUF','AUI','AUJ','FU0','E05']); // Relevant messages\nSAPAuditLog\n| where MessageID in (AuditClasses)\n| project\n// Details\nTimeGenerated, Instance, SystemID, User, MessageText,\nEmail, TerminalIPv6, Host\n",
                                "queryFrequency": "PT6H",
                                "queryPeriod": "PT6H",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP"
                                    }
                                ],
                                "tactics": [
                                    "Persistence",
                                    "Exfiltration",
                                    "DefenseEvasion"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "SAP_User": "User"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId49'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 49",
                                "parentId": "[variables('analyticRuleId49')]",
                                "contentId": "[variables('analyticRulecontentId49')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion49')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName50')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 50 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName50'),'/',variables('analyticRuleVersion50'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName50'))]"
            ],
            "properties": {
                "description": "SAP - Sensitive Privileged User Logged in_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion50')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId50')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies Dialog logon of a sensitive privileged user.\nSource Action: Logon to the backend system using SAP* or anoter privileged user.\n\nPriveleged users should be maintained in \"SAP - Privileged Users\" Watchlist\n\nThis rule requires a fresh full reload of the SAP user master data to be performed daily.\n*Data Sources: SAPcon -  Audit Log*\n*Data Sources: SAPcon -  User MD*",
                                "displayName": "SAP - Sensitive Privileged User Logged in",
                                "enabled": false,
                                "query": "// SAP - Sensitive Privileged User Logged in\n// !!!IMPORTANT!!!\n// please make sure \"Lookup data from the last\" parameter is greater than a full user master data update cycle\n// please keep \"Lookup data from the last\" to be 7 days to allow coverage of user master data required\n// actual lookback is set by setting TimeAgo\n// time span for audit events\nlet AuditTimeAgo= 75m;\nlet SelectedSystemRoles =  dynamic([\"Production\"]); //can also do// let SelectedSystemRoles =  dynamic([\"Production\", \"UAT\"]); dynamic([\"All System Roles\"])\nlet SelectedSystems = SAPSystems(SelectedSystemRoles= SelectedSystemRoles) | project SystemID= SearchKey, SystemRole;\n// here you can exclude system users which are OK to execute a Sensitive Transaction Code\n// by adding those users in the SAP_User_Config watchlist with a tag of 'SensitiveLogOnOK'\n// can also specify SAP Roles or Profiles to exclude\nlet excludeUsersTags= dynamic(['SensitiveLogOnOK']);// dynamic(['SensitiveLogOnOK','SAP_ALL']);\nlet excludedUsers= SAPUsersGetVIP(SearchForTags= excludeUsersTags)| summarize by User2Exclude=SAPUser;\n// Audit Log Classes - Dialog Logon Successful\nlet AuditClassesSuccess = dynamic(['AU1']);\nlet AuditClassesFail = dynamic(['AU2']);\nlet LogonTypes = dynamic(['A','H', 'R', 'S']); // Dialog / HTTP\nlet DataTypes = materialize(SAPGetDataTypes());\n// Query logic\nSAPAuditLog\n| where TimeGenerated > ago(AuditTimeAgo)\n| join kind= inner SelectedSystems on SystemID\n| join kind=leftantisemi excludedUsers on $left.User == $right.User2Exclude\n| where (MessageID in (AuditClassesSuccess) and Variable1 in (LogonTypes)) or // Success login\nMessageID in (AuditClassesFail)\n|join kind = inner (SAPUsersGetPrivileged())\non $left.ClientID == $right.Client\n, $left.SystemID == $right.SystemID\n, $left.User == $right.User\n| project-rename LogonTypeKey = Variable1, ReasonKey= Variable2, LogonMethodKey= Variable3\n| lookup (DataTypes | where DataType == \"LogonFailureCause\"| project Key, LogonFailureCause= Value) on $left.ReasonKey == $right.Key\n| lookup (DataTypes | where DataType == \"LogonType\"| project Key, LogonType= Value) on $left.LogonTypeKey == $right.Key\n| lookup (DataTypes | where DataType == \"LogonMethod\"| project Key, LogonMethod= Value) on $left.LogonMethodKey == $right.Key\n| project TimeGenerated, Instance ,SystemID, ClientID, LogonType, User, MessageText,\nEmail, TerminalIPv6, Host, SystemRole, LogonFailureCause, LogonMethod, MessageID\n| extend PackedDetails= pack_all()\n| extend AlertName= strcat(\"SAP - Privileged User \", User, iff(MessageID==\"AU1\",\" Has Logged into a \", \" Has Failed to Log into a \"), SystemRole, \" System\" )\n| extend AlertDescription= strcat(\" LogonType: \", LogonType, \". LogonFailureCause: \", LogonFailureCause, \". LogonMethod: \", LogonMethod), Dummy= ''\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "P7D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP",
                                        "dataTypes": [
                                            "SAPGetDataTypes",
                                            "SAPUsersGetVIP",
                                            "SAPSystems",
                                            "SAPUsersGetPrivileged"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "InitialAccess",
                                    "CredentialAccess"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "AlertPerResult"
                                },
                                "customDetails": {
                                    "PackedDetails": "PackedDetails",
                                    "LogonMethod": "LogonMethod",
                                    "LogonFailureCause": "LogonFailureCause",
                                    "SAP_User": "User",
                                    "LogonType": "LogonType"
                                },
                                "alertDetailsOverride": {
                                    "alertDisplayNameFormat": "{{AlertName}}",
                                    "alertSeverityColumnName": "Dummy",
                                    "alertTacticsColumnName": "Dummy",
                                    "alertDescriptionFormat": "{{AlertDescription}}\nIdentifies Dialog logon of a sensitive privileged user.\nSource Action: Logon to the backend system using SAP* or anoter privileged user.\nPriveleged users should be maintained in \"SAP - Privileged Users\" Watchlist\nThis rule requires a fresh full reload of the SAP user master data to be performed daily.\n*Data Sources: SAPcon -  Audit Log*\n*Data Sources: SAPcon -  User MD*\n"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId50'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 50",
                                "parentId": "[variables('analyticRuleId50')]",
                                "contentId": "[variables('analyticRulecontentId50')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion50')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName51')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 51 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName51'),'/',variables('analyticRuleVersion51'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName51'))]"
            ],
            "properties": {
                "description": "SAP - Sensitive privileged user makes a change in another user_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion51')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId51')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies changes  of sensitive privileged users in other users.\n\nSource Action: Change user details / authorizations using SU01.\n\nPriveleged users should be maintained in \"SAP - Privileged Users\" Watchlist\n\nThis rule requires a fresh full reload of SAP user master data to be performed daily.\n*Data Sources: SAPcon -  Audit Log*\n*Data Sources: SAPcon -  User MD*",
                                "displayName": "SAP - Sensitive privileged user makes a change in another user",
                                "enabled": false,
                                "query": "// SAP - High - Sensitive privileged user makes a change in another user\n// time span for audit events\nlet AuditTimeAgo= 75m;\n// Audit Log Classes - User Master Changes\nlet AuditClasses = dynamic(['AU7', 'BUV', 'BUW', 'AU8', 'AU9', 'AUA', 'AUB', 'AUD', 'DUH', 'BU2']);\n// here you can exclude system users which are OK to modify other users' master data\n// by adding those users in the SAP_User_Config watchlist with a tag of 'ChangeUserMasterDataOK'\nlet excludeUsersTags= dynamic(['ChangeUserMasterDataOK']);\nlet excludedUsers= _GetWatchlist('SAP_User_Config')| where Tags has_any (excludeUsersTags)| summarize by User2Exclude=SAPUser;\n// Query Logic\nSAPAuditLog\n| where TimeGenerated > ago(AuditTimeAgo)\n| where MessageID in (AuditClasses)\n| join kind=leftantisemi excludedUsers on $left.User == $right.User2Exclude\n| join kind= leftsemi  SAPUsersGetPrivileged on // The user that makes a change is a sensitive privileged user\n$left.User == $right.User\n,$left.SystemID == $right.SystemID\n,$left.ClientID == $right.Client\n| project-rename ChangedUser= Variable1\n| lookup  (SAPUsersEmail()| project ChangedEmail= Email, ChangedUser= User, SystemID, ClientID)\n on SystemID, ClientID, ChangedUser\n| project TimeGenerated, Instance ,SystemID, ClientID, User, MessageText, MessageID,\n     Email= iff(isempty(Email),User, Email), TerminalIPv6, Host= iff(isempty(Host), TerminalIPv6, Host), ChangedUser, ChangedEmail\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "P2D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP",
                                        "dataTypes": [
                                            "SAPUsersEmail",
                                            "SAPUsersGetPrivileged"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation",
                                    "CredentialAccess"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "ChangedEmail"
                                            }
                                        ],
                                        "entityType": "Account"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "AlertPerResult"
                                },
                                "customDetails": {
                                    "ChangedUser": "ChangedUser",
                                    "SAP_User": "User"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId51'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 51",
                                "parentId": "[variables('analyticRuleId51')]",
                                "contentId": "[variables('analyticRulecontentId51')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion51')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName52')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 52 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName52'),'/',variables('analyticRuleVersion52'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName52'))]"
            ],
            "properties": {
                "description": "SAP - Sensitive Role Changes_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion52')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId52')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies changes in sensitive roles.\nSource Action: Change a role using PFCG.\nSensitive roles should be maintained in \"SAP - Sensitive Roles\" Watchlist\n\n*Data Sources: SAPcon - Change Documents Log*",
                                "displayName": "SAP - Sensitive Role Changes",
                                "enabled": false,
                                "query": "// Sensitive Roles Changes\n// Define variables\nlet RoleObjectClass = \"PFCG\";\nlet ChangeType = \"U\";\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\nlet SensitiveRoles = _GetWatchlist(\"SAP - Sensitive Roles\");\n// Maintain if watchlist is not available\nlet fixedRoles = datatable(Role: string)['SAP_BC_BASIS_ADMIN', 'SAP_BC_AUTH_PROFILE_ADMIN'];\nlet UnitedRoles =\ntoscalar(union fixedRoles, SensitiveRoles\n| summarize Roles = make_list(Role));\nlet SelectedSystemRoles =  dynamic([\"Production\"]); //can also do// let SelectedSystemRoles =  dynamic([\"Production\", \"UAT\"]); dynamic([\"All System Roles\"])\nlet SelectedSystems = SAPSystems(SelectedSystemRoles=SelectedSystemRoles) | project SystemID= SearchKey;\n// here you can exclude system users which are OK to run sensitive role updates\n// by adding those users in the SAP_User_Config watchlist with a tag of 'UpdateSensitiveAuthOK'\nlet excludeUsersTags= dynamic(['UpdateSensitiveAuthOK']);\nlet excludedUsers= _GetWatchlist('SAP_User_Config')| where Tags has_any (excludeUsersTags)| summarize by User2Exclude=SAPUser;\n// Query logic\nlet LastLogin =\nSAPAuditLog\n| where MessageID in (AuditLogIn)\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID, ClientID, User; // Get last connection date for user\nSAPChangeDocsLog\n| where ObjectClass == RoleObjectClass // Relevant role object class\n| where ObjectID in (UnitedRoles) // Role is sensitive\n| where TypeofChange_Header == ChangeType\n| join kind= inner  SelectedSystems on SystemID\n| join kind=leftantisemi excludedUsers on $left.User == $right.User2Exclude\n| extend AuthorizationObj = extract(@\"\\S+\\s+(\\S+)\\s+\", 1, ChangedTableKey, typeof(string)) // Extract Authorization Object\n| extend Authorization = extract(@\"\\S+\\s+\\S+\\s+(\\S+\\d+)\", 1, ChangedTableKey, typeof(string)) // Extract Authorization\n| lookup kind=inner LastLogin on User // Get IP\n| project TimeGenerated, Instance, SystemID, ClientID, Email, User, TerminalIPv6, Host, Role = ObjectID, FieldName , AuthorizationObj, Authorization, OldValue = ValueOld, NewValue = ValueNew\n| extend Email= iff(isempty(Email),User, Email), Host= iff(isempty(Host), TerminalIPv6, Host)\n| extend AlertDescription= strcat('Sensitive Role ' , Role, ' was updated by ', User), Dummy=' '\n| extend PackedDetails= pack_all()\n",
                                "queryFrequency": "PT12H",
                                "queryPeriod": "PT12H",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP",
                                        "dataTypes": [
                                            "SAPSystems"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Impact",
                                    "PrivilegeEscalation",
                                    "Persistence"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "DistinguishedName",
                                                "columnName": "Role"
                                            }
                                        ],
                                        "entityType": "SecurityGroup"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "AlertPerResult"
                                },
                                "customDetails": {
                                    "SAP_User": "User"
                                },
                                "alertDetailsOverride": {
                                    "alertDisplayNameFormat": "{{AlertDescription}}",
                                    "alertSeverityColumnName": "Dummy",
                                    "alertTacticsColumnName": "Dummy",
                                    "alertDescriptionFormat": "Identifies changes in sensitive roles.\nSource Action: Change a role using PFCG.\nSensitive roles should be maintained in \"SAP - Sensitive Roles\" Watchlist\n\n*Data Sources: SAPcon - Change Documents Log*\n{{PackedDetails}}\n"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId52'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 52",
                                "parentId": "[variables('analyticRuleId52')]",
                                "contentId": "[variables('analyticRulecontentId52')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion52')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName53')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 53 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName53'),'/',variables('analyticRuleVersion53'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName53'))]"
            ],
            "properties": {
                "description": "SAP - Sensitive Tables Direct Access By Dialog Logon_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion53')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId53')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies generic table access by dialog logon\n\nSource Action: Open table contents using SE11/SE16/SE16N.\n\n**Recommended for Production only**\n\nTables should be maintained in \"\"SAP - Sensitive Tables\"\" Watchlist.\n\n*Data Sources: SAPcon -  Audit Log*",
                                "displayName": "SAP - Sensitive Tables Direct Access By Dialog Logon",
                                "enabled": false,
                                "query": "// Define variables\nlet Role = \"Production\";\nlet AuditClasses = dynamic(['DU9']); // Dialog, Audit Log Classes - Generic Table Access\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\n// Get Relevant Systems from WatchList\nlet systemID = _GetWatchlist('SAP - Systems');\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\n// Maintain these if WatchList is not available\n    [\"S4H\",\"Production\",\"ERP\",\n    \"XXX\",\"Sandbox\",\"BW\"]\n;\n// Get Relevant Tables\nlet SensitiveTables = _GetWatchlist('SAP - Sensitive Tables');\nlet fixedTables = datatable(Table:string)\n// Maintain these if WatchList is not available\n    [\"USR02\"]\n;\nlet RelSystemID = union systemID, fixedSID // Create a variable that stores relevant Systems\n| where SystemRole == Role // Recommended  is Production only\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\n| summarize by SystemID;\nlet SensitiveUnionTables = union SensitiveTables, fixedTables // Create a variable that stores relevant sensitive tables\n    | summarize by Table;\n// Query logic\nSAPAuditLog\n    | project-rename Table = Variable1, Activity = Variable2\n    | where MessageID in (AuditClasses)\n    | where SystemID in (RelSystemID)\n    | where Table in (SensitiveUnionTables)\n    | order by TimeGenerated asc\n    | project TimeGenerated, Instance, SystemID, ClientID, User, TransactionCode, ABAPProgramName, Table,   Activity, MessageText, MessageID,\nEmail, TerminalIPv6, Host\n",
                                "queryFrequency": "PT12H",
                                "queryPeriod": "PT12H",
                                "severity": "Low",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP"
                                    }
                                ],
                                "tactics": [
                                    "Discovery"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "SAP_User": "User"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId53'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 53",
                                "parentId": "[variables('analyticRuleId53')]",
                                "contentId": "[variables('analyticRulecontentId53')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion53')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName54')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 54 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName54'),'/',variables('analyticRuleVersion54'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName54'))]"
            ],
            "properties": {
                "description": "SAP - Sensitive Tables Direct Access By RFC Logon_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion54')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId54')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies generic table access by RFC logon\n\nSource Action: Open table contents using SE11/SE16/SE16N.\n\n**Recommended for Production only**\n\nTables should be maintained in \"SAP - Sensitive Tables\" Watchlist.\n\n*Data Sources: SAPcon -  Audit Log*",
                                "displayName": "SAP - Sensitive Tables Direct Access By RFC Logon",
                                "enabled": false,
                                "query": "// SAP - Sensitive Tables Direct Access By RFC Logon\n// CONFIGURATION OPTION- determine which system roles are relevant for this alert\nlet SelectedSystemRoles =  dynamic([\"Production\"]); //can also do// let SelectedSystemRoles =  dynamic([\"Production\", \"UAT\"]); dynamic([\"All System Roles\"])\nlet SelectedSystems = SAPSystems(SelectedSystemRoles= SelectedSystemRoles) | project SystemID= SearchKey;\n// Get Relevant Tables\nlet SensitiveTables = _GetWatchlist('SAP - Sensitive Tables')| project Table;\n// here you can exclude system users which are OK to access sensitive tables via RFC\n// by adding those users in the SAP_User_Config watchlist with a tag of 'SensitiveTablebyRFCOK'\n// can also specify SAP Roles or Profiles to exclude\nlet excludeUsersTags= dynamic(['SensitiveTablebyRFCOK','SAP_ALL']);\nlet excludedUsers= SAPUsersGetVIP(SearchForTags= excludeUsersTags)| summarize by User2Exclude=SAPUser;\n// Query logic\nSAPAuditLog\n    | where SystemID in (SelectedSystems)\n    | where MessageID == 'CUZ'\n    | where Variable1 in (SensitiveTables)\n    | project-rename Table = Variable1, Activity = Variable2\n    | join kind=leftantisemi excludedUsers on $left.User == $right.User2Exclude\n    | order by TimeGenerated asc\n    | project TimeGenerated,Instance, SystemID, ClientID, User, TransactionCode, ABAPProgramName, Table, Activity, MessageText, MessageID,\nEmail, TerminalIPv6, Host\n    | extend PackedDetails= pack_all()\n    | extend AlertDescription= strcat('SAP - User ', User, ' has accessed sensitive table ', Table, ' using RFC'), Dummy=''\n    | extend RemediationSteps= strcat(\"Consult with the SAP security team to determine if user \", User, \" is OK to perform this action. If the activity is benign, assign the user with the SensitiveTablebyRFCOK tag in SAP_User_Config watchlist. Otherwise, lock the SAP user in system \", SystemID), Dummy= ''\n",
                                "queryFrequency": "PT12H",
                                "queryPeriod": "PT13H",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP",
                                        "dataTypes": [
                                            "SAPUsersGetVIP",
                                            "SAPSystems"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Collection",
                                    "Exfiltration",
                                    "CredentialAccess"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "AlertPerResult"
                                },
                                "customDetails": {
                                    "PackedDetails": "PackedDetails",
                                    "Table": "Table",
                                    "SAP_User": "User"
                                },
                                "alertDetailsOverride": {
                                    "alertDisplayNameFormat": "{{AlertDescription}}",
                                    "alertSeverityColumnName": "Dummy",
                                    "alertTacticsColumnName": "Dummy",
                                    "alertDescriptionFormat": "Identifies generic table access by RFC logon\n\nSource Action: Open table contents using SE11/SE16/SE16N.\nRFC is a Remote Function Call protocol used in SAP to transfer data between systems. This analytics rule alerts on  calls made to retrieve sensite table data.\nThere are a few configuration options here:\n*Configure sensitive tables* using the \"SAP - Sensitive Tables\" watchlist <br\\>\n*Exclude system users* - you can exclude system users which are OK to access sensitive tables via RFC by adding those users in the SAP_User_Config watchlist with a tag of 'SensitiveTablebyRFCOK'. Yoy can also specify SAP Roles or Profiles- this will prevented alerts from being raised on any user carrying these roles or profiles.\n\n{{PackedDetails}}\n"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId54'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 54",
                                "parentId": "[variables('analyticRuleId54')]",
                                "contentId": "[variables('analyticRulecontentId54')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion54')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName55')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 55 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName55'),'/',variables('analyticRuleVersion55'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName55'))]"
            ],
            "properties": {
                "description": "SAP - Sensitive User's Password Change and Log in_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion55')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId55')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies password changes for privileged users.\n\nSource Action: Change Password for a user and login to the system.\n\nPriveleged users should be maintained in \"SAP - Privileged Users\" Watchlist\n\nThis rule requires a fresh full reload of SAP user master data to be performed daily.\n*Data Sources: SAPcon -  Audit Log*\n*Data Sources: SAPcon -  User MD*",
                                "displayName": "SAP - Sensitive User's Password Change and Log in",
                                "enabled": false,
                                "query": "// SAP - High - Sensitive Users Password Change and Login\n// Define variables\n// time span for audit events\nlet AuditTimeAgo= 90m;\nlet ChangeAndLoginThreshold = 30; // Difference by minutes between Change in user to connect\nlet LoginAndRestThreshold = 30; // Difference by minutes between Connect and password reset\nlet AuditUserChange = dynamic(['AUD']); // Message of change in user\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\nlet AuditUserPassReset = dynamic(['BU2']); // Message of user password change\n// Query Logic\nlet UserChange = // Get users change activity\nSAPAuditLog\n| where MessageID in (AuditUserChange)\n| where TimeGenerated > ago(AuditTimeAgo)\n|join kind= inner (SAPUsersGetPrivileged()) // The user with the changed password is privileged user\non $left.ClientID == $right.Client\n, $left.SystemID == $right.SystemID\n, $left.Variable1 == $right.User\n| project-rename UserChangeTimeGenerated = TimeGenerated, UserPassChanged = Variable1;\nlet UserLogIn = // Get users connections\nSAPAuditLog\n| where MessageID in (AuditLogIn)\n| where TimeGenerated > ago(AuditTimeAgo)\n| project-rename UserLogInTimeGenerated = TimeGenerated;\nSAPAuditLog // Get users password reset\n| where MessageID in (AuditUserPassReset)\n| where TimeGenerated > ago(AuditTimeAgo)\n|join kind= inner (SAPUsersGetPrivileged()) // The user with the changed password is privileged user\non $left.User == $right.Client\n, $left.SystemID == $right.SystemID\n, $left.Variable1 == $right.User\n| lookup kind=inner UserLogIn on TerminalIPv6, User // Lookup of user reset to user login\n| lookup kind=inner UserChange on TerminalIPv6, $left.User == $right.UserPassChanged // Lookup of user reset to user change\n| where abs(datetime_diff('Minute', UserChangeTimeGenerated, UserLogInTimeGenerated)) <= ChangeAndLoginThreshold // Connect after a change in user\n| where abs(datetime_diff('Minute', TimeGenerated, UserLogInTimeGenerated)) <= LoginAndRestThreshold // Change password after connection\n| summarize by TimeGenerated, Instance ,SystemID, ClientID, UserAction = User1, PrivUserPassChanged = User, Email, TerminalIPv6, Host\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "P2D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP",
                                        "dataTypes": [
                                            "SAPUsersGetPrivileged"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Impact",
                                    "CommandAndControl",
                                    "PrivilegeEscalation"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "SAP_User": "UserAction"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId55'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 55",
                                "parentId": "[variables('analyticRuleId55')]",
                                "contentId": "[variables('analyticRulecontentId55')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion55')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName56')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 56 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName56'),'/',variables('analyticRuleVersion56'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName56'))]"
            ],
            "properties": {
                "description": "SAP - SPNego Attack_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion56')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId56')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies SPNego Replay Attack.\n\n*Data Sources: SAPcon -  Audit Log*",
                                "displayName": "SAP - SPNego Attack",
                                "enabled": false,
                                "query": "// Define variables\nlet AuditClasses = dynamic(['BUI']); // Message of SPNego\n// Query logic\nSAPAuditLog\n| where MessageID in (AuditClasses)\n| project TimeGenerated, Instance , SystemID, ClientID, User ,  Email, TerminalIPv6, Host\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT1H",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP"
                                    }
                                ],
                                "tactics": [
                                    "Impact",
                                    "LateralMovement"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "SAP_User": "User"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId56'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 56",
                                "parentId": "[variables('analyticRuleId56')]",
                                "contentId": "[variables('analyticRulecontentId56')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion56')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName57')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 57 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName57'),'/',variables('analyticRuleVersion57'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName57'))]"
            ],
            "properties": {
                "description": "SAP - Spool Takeover_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion57')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId57')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies a user printing a spool request which was created by someone else.\n\nSource Action: Create a Spool Request using one user, Output it in using another user.\n\n*Data Sources: SAPcon -  Spool Log*\n*Data Sources: SAPcon -  Spool Output Log*",
                                "displayName": "SAP - Spool Takeover",
                                "enabled": false,
                                "query": "// Define variables\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\n// Query logic\nlet LastLogin =\nSAPAuditLog\n| where MessageID in (AuditLogIn)\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID, ClientID, User; // Get last connection date for user\n// Query Logic\nSAPSpoolOutputLog // Get all spool outputs\n| lookup kind=inner SAPSpoolLog on SpoolRequestNumber\n| lookup kind=inner LastLogin on User, SystemID\n| where User != User1 // The user that created the request is not the one that printed it\n| project TimeGenerated, Instance, SystemID, ClientID, UserCreated = User1, UserPrinted = User, SpoolRequestNumber, Email, TerminalIPv6, Host\n",
                                "queryFrequency": "PT12H",
                                "queryPeriod": "PT12H",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP",
                                        "dataTypes": [
                                            "SAPSpoolLog"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Collection",
                                    "Exfiltration",
                                    "CommandAndControl"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "SAP_User": "UserPrinted"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId57'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 57",
                                "parentId": "[variables('analyticRuleId57')]",
                                "contentId": "[variables('analyticRulecontentId57')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion57')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName58')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 58 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName58'),'/',variables('analyticRuleVersion58'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName58'))]"
            ],
            "properties": {
                "description": "SAP - System Configuration Change_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion58')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId58')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies changes for system configuration.\n\nSource Action:  Adapt system change options or software components modifcation using SE06 transaction code.\n\n*Data Sources: SAPcon -  Audit Log*",
                                "displayName": "SAP - System Configuration Change",
                                "enabled": false,
                                "query": "// Audit Log Classes - System Change Configuration\nlet AuditClasses = dynamic(['EU1']); // Relevant message\nSAPAuditLog\n| where MessageID in (AuditClasses)\n| project\n// Details\nTimeGenerated,Instance, ClientID ,SystemID, User, TransactionCode, SoftwareComponent = Variable1, NewModifiabilityStatus = Variable2, MessageText,\nEmail, TerminalIPv6, Host\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT1H",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP"
                                    }
                                ],
                                "tactics": [
                                    "Exfiltration",
                                    "DefenseEvasion",
                                    "Persistence"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "SAP_User": "User"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId58'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 58",
                                "parentId": "[variables('analyticRuleId58')]",
                                "contentId": "[variables('analyticRulecontentId58')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion58')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName59')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 59 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName59'),'/',variables('analyticRuleVersion59'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName59'))]"
            ],
            "properties": {
                "description": "SAP - Transaction is unlocked_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion59')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId59')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies unlocking of a transaction.\n\nSource Action: Unlock a transaction code using SM01/SM01_DEV/SM01_CUS.\n\n*Data Sources: SAPcon -  Audit Log*",
                                "displayName": "SAP - Transaction is unlocked",
                                "enabled": false,
                                "query": "// Audit Log Classes - Transaction UnLock Events\n// AUP - Transaction Locked\nlet AuditClasses = dynamic(['AUQ']); // AUQ - Transaction Unlocked\nSAPAuditLog\n| where MessageID in (AuditClasses)\n| project-rename TransactionCodeTemp = TransactionCode\n| project-rename TransactionCode= Variable1\n| parse TransactionCode with \"( TR ) \" _TCODE \" - \" ClientTR // Parse to _TCODE and ClientTR\n// Specific Client Action (SM01_CUS) / Cross Client (SM01_DEV)\n| extend TransactionCode = iif(_TCODE != \"\",_TCODE, TransactionCode) // Check if _TCODE is not empty\n| extend ClientTR = iif(ClientTR != \"\",ClientTR, \"CrossClient\") // Check if ClientTR is not empty\n| project\n// Details\nTimeGenerated, Instance, SystemID, User, MessageText,TransactionCode, ClientTR,\nEmail, TerminalIPv6, Host\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP"
                                    }
                                ],
                                "tactics": [
                                    "Persistence",
                                    "Execution"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Email"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientTR"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "SAP_User": "User"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId59'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 59",
                                "parentId": "[variables('analyticRuleId59')]",
                                "contentId": "[variables('analyticRulecontentId59')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion59')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName60')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 60 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName60'),'/',variables('analyticRuleVersion60'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName60'))]"
            ],
            "properties": {
                "description": "SAP - User Creates and uses new user_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion60')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId60')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies a user creating and using other users.\n\nSource Action: Create a user using SU01. Login using the newly created user from the same IP.\n\n*Data Sources: SAPcon -  Audit Log*",
                                "displayName": "SAP - User Creates and uses new user",
                                "enabled": false,
                                "query": "// Define Variables\nlet MinutesThreshold = 15; // Difference by minutes between Create and Connect\nlet AuditUserCreated = dynamic(['AU7']); // Message of create user\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\n// Query Logic\nlet UserCreated = // Get users created\nSAPAuditLog\n| where MessageID in (AuditUserCreated)\n| project-rename UserCreationTimeGenerated = TimeGenerated, UserCreated = Variable1;\nSAPAuditLog // Get users connections\n| where MessageID in (AuditLogIn)\n| lookup kind=inner UserCreated on TerminalIPv6,$left.User == $right.UserCreated, SystemID, ClientID // Lookup of user created to user log in\n| where abs(datetime_diff('Minute', TimeGenerated, UserCreationTimeGenerated)) <= MinutesThreshold // Connect after creation\n| summarize by TimeGenerated, Instance ,SystemID, ClientID, UserActing = User1, UserActingEmail= Email1, UserCreated = User, UserCreatedEmail= Email, TerminalIPv6, Host\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT1H",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP"
                                    }
                                ],
                                "tactics": [
                                    "Discovery",
                                    "InitialAccess"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "UserActingEmail"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "UserCreatedEmail"
                                            }
                                        ],
                                        "entityType": "Account"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "SAP_UserCreated": "UserCreated",
                                    "SAP_User": "UserActing"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId60'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 60",
                                "parentId": "[variables('analyticRuleId60')]",
                                "contentId": "[variables('analyticRulecontentId60')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion60')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('analyticRuleTemplateSpecName61')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "properties": {
                "description": "SAP Analytics Rule 61 with template",
                "displayName": "SAP Analytics Rule template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('analyticRuleTemplateSpecName61'),'/',variables('analyticRuleVersion61'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "AnalyticsRule"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName61'))]"
            ],
            "properties": {
                "description": "SAP - User Unlocks and uses other users_AnalyticalRules Analytics Rule with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleVersion61')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('AnalyticRulecontentId61')]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "A user unlocked another, and then used the other's user credentials.\n\nSource Action: Unlock a user using SU01. Login using the unlocked user from the same IP.\n\n*Data Sources: SAPcon -  Audit Log*\n*Data Sources: SAPcon -  Change Documents Log*",
                                "displayName": "SAP - User Unlocks and uses other users",
                                "enabled": false,
                                "query": "// Define variables\nlet MinutesThreshold = 30; // Difference by minutes between Unlock and Connect\nlet AuditUserUnlocked = dynamic(['AUA']); // Message of unlock user\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\n// Get users which were unlocked\nlet UsersUnlocked = SAPAuditLog\n| where MessageID in (AuditUserUnlocked)\n| project-rename UserUnlockTimeGenerated = TimeGenerated, UserThatWasUnlocked = Variable1, EmailWhoUnlocked = Email, UserWhoUnlocked= User\n| project-keep UserUnlockTimeGenerated, UserThatWasUnlocked, EmailWhoUnlocked, SystemID, ClientID, TerminalIPv6, Instance, Host, UserWhoUnlocked;\n// Query Logic\nlet ActionUsers = SAPAuditLog | project-keep MessageID, User, Email, SystemID, TimeGenerated, ClientID, TerminalIPv6// Get users connections\n| project-rename UserAction = User, EmailAction= Email\n| where MessageID in (AuditLogIn);\n // check if the locked was user was unlocked and then used from the same IP address\n//  as the unlocker\nUsersUnlocked | join kind=inner ActionUsers on\nTerminalIPv6, SystemID, ClientID, $left.UserThatWasUnlocked==$right.UserAction\n| where abs(datetime_diff('Minute', TimeGenerated, UserUnlockTimeGenerated)) <= MinutesThreshold // Connect after unlock\n| summarize Count=count(), TimeGenerated= max(TimeGenerated) by Instance ,SystemID, ClientID, UserWhoUnlocked , UserThatWasUnlocked, EmailWhoUnlocked, EmailThatWasUnLocked= EmailAction, TerminalIPv6, Host\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT1H",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "SAP",
                                        "dataTypes": [
                                            "SAPAuditLog"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "InitialAccess",
                                    "Discovery",
                                    "LateralMovement"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "EmailWhoUnlocked"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Host"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "TerminalIPv6"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "SystemID"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "ClientID"
                                            },
                                            {
                                                "identifier": "InstanceName",
                                                "columnName": "Instance"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "EmailThatWasUnLocked"
                                            }
                                        ],
                                        "entityType": "Account"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "UserWhoUnlocked": "UserWhoUnlocked",
                                    "UserThatWasUnlocked": "UserThatWasUnlocked"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId61'),'/'))))]",
                            "properties": {
                                "description": "SAP Analytics Rule 61",
                                "parentId": "[variables('analyticRuleId61')]",
                                "contentId": "[variables('analyticRulecontentId61')]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleVersion61')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('dataConnectorTemplateSpecName1')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "DataConnector"
            },
            "properties": {
                "description": "SAP data connector with template",
                "displayName": "SAP template"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('dataConnectorTemplateSpecName1'),'/',variables('dataConnectorVersion1'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "DataConnector"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('dataConnectorTemplateSpecName1'))]"
            ],
            "properties": {
                "description": "SAP data connector with template version 2.0.19",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('dataConnectorVersion1')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
                            "apiVersion": "2021-03-01-preview",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
                            "location": "[parameters('workspace-location')]",
                            "kind": "StaticUI",
                            "properties": {
                                "connectorUiConfig": {
                                    "id": "[variables('_uiConfigId1')]",
                                    "title": "SAP",
                                    "publisher": "Microsoft",
                                    "logo": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/SAP/Workbooks/SAPVMIcon.svg",
                                    "descriptionMarkdown": "SAP systems and applications handle massive volumes of business-critical data, hosted on cloud/on-premises infrastructure. Due to the complexity of the SAP ecosystem, security operations (SecOps) teams face the challenge of effectively monitoring and protecting their organization against growing threats. A breach of the SAP system could result in data loss, disruption to business processes, loss of revenue, and major reputation damage.\n The Microsoft Sentinel SAP connector, part of the Microsoft Sentinel Solution for SAP® Applications, ingests SAP logs to Microsoft Sentinel workspaces. You can access raw data using the built-in Microsoft Sentinel Solution for SAP content or using custom content. The connector ingests SAP NetWeaver (RFC) application layer logs, including Security Auditlogs, Application logs, ChangeDocuments, Spool Logs, Change Request data, User masterdata, and more.\n The Microsoft Sentinel solution for SAP will be generally available with a six-month free promotion starting in August 2022. Billing will start in February 2023, as an add-on charge in addition to the existing Microsoft Sentinel consumption-billing model for monitoring SAP production systems.",
                                    "graphQueries": [
                                        {
                                            "metricName": "Total data received",
                                            "legend": "SAP",
                                            "baseQuery": "SAPConnectorOverview()"
                                        }
                                    ],
                                    "sampleQueries": [
                                        {
                                            "description": "SAP Connector Overview",
                                            "query": "SAPConnectorOverview()"
                                        },
                                        {
                                            "description": "Users Get Privileged",
                                            "query": "SAPUsersGetPrivileged()"
                                        }
                                    ],
                                    "connectivityCriterias": [
                                        {
                                            "type": "SentinelKinds",
                                            "value": [
                                                "SAP"
                                            ]
                                        },
                                        {
                                            "type": "IsConnectedQuery",
                                            "value": [
                                                "SAPConnectorOverview()\n            | summarize LastLogReceived = max(TimeGenerated) \n                | project IsConnected = LastLogReceived > ago(7d)"
                                            ]
                                        }
                                    ],
                                    "isConnectivityCriteriasMatchSome": true,
                                    "dataTypes": [
                                        {
                                            "name": "SAPConnectorOverview",
                                            "lastDataReceivedQuery": "SAPConnectorOverview() \n| summarize Time = max(TimeGenerated) \n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "SAPAuditLog",
                                            "lastDataReceivedQuery": "SAPAuditLog \n| summarize Time = max(TimeGenerated) \n            | where isnotempty(Time)"
                                        }
                                    ],
                                    "availability": {
                                        "status": 2,
                                        "isPreview": false,
                                        "featureFlag": {
                                            "feature": "MdatpRawData",
                                            "featureStates": {
                                                "1": 2,
                                                "2": 2,
                                                "3": 2,
                                                "4": 2,
                                                "5": 2
                                            }
                                        }
                                    },
                                    "permissions": {
                                        "tenant": [
                                            "GlobalAdmin",
                                            "SecurityAdmin"
                                        ],
                                        "resourceProvider": [
                                            {
                                                "provider": "Microsoft.OperationalInsights/workspaces",
                                                "permissionsDisplayText": "read and write permissions.",
                                                "providerDisplayName": "Workspace",
                                                "scope": "Workspace",
                                                "requiredPermissions": {
                                                    "read": true,
                                                    "write": true,
                                                    "delete": true
                                                }
                                            }
                                        ],
                                        "customs": [
                                            {
                                                "name": "Documentation",
                                                "description": "Complete documentation including on-premise and any cloud coverage"
                                            },
                                            {
                                                "name": "Infrastructure (Azure)",
                                                "description": "* Azure Ubuntu, RHEL, or SLES Virtual Machine with a system managed identity.\n* Azure Key Vault with write-read access policy assigned to the Virtual Machine identity."
                                            },
                                            {
                                                "name": "SAP systems",
                                                "description": "SAP ABAP NetWeaver systems support. Review the complete Basis Requirements.\nSAP ABAP connector user with a password or certificate (SNC).\nApply the user permissions with the authorization profile, or use the Sample Authorizations Role CR / Transport form.\nOptionally deploy the ALL logs CR (single CR) on SAP (STMS)."
                                            },
                                            {
                                                "name": "Pricing",
                                                "description": "The Microsoft Sentinel solution for SAP will be billed as an add-on charge from May 2023, at $2 per production system ID (SID) per hour in addition to the existing Microsoft Sentinel consumption-billing model. The solution will be free when a workspace is in a Microsoft Sentinel free trial. Systems configured for development and test usage will remain free of the additional charge. Please see offer page for more details."
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
                            "properties": {
                                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
                                "contentId": "[variables('_dataConnectorContentId1')]",
                                "kind": "DataConnector",
                                "version": "[variables('dataConnectorVersion1')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "SAP",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
            "apiVersion": "2022-01-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
            "dependsOn": [
                "[variables('_dataConnectorId1')]"
            ],
            "location": "[parameters('workspace-location')]",
            "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
                "contentId": "[variables('_dataConnectorContentId1')]",
                "kind": "DataConnector",
                "version": "2.0.53",
                "source": {
                    "kind": "Solution",
                    "name": "SAP",
                    "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                    "name": "Microsoft",
                    "email": "[variables('_email')]"
                },
                "support": {
                    "tier": "Microsoft",
                    "name": "Microsoft Corporation",
                    "email": "support@microsoft.com",
                    "link": "https://support.microsoft.com/"
                }
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
            "apiVersion": "2021-03-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
            "location": "[parameters('workspace-location')]",
            "kind": "StaticUI",
            "properties": {
                "connectorUiConfig": {
                    "title": "SAP",
                    "publisher": "Microsoft",
                    "descriptionMarkdown": "SAP systems and applications handle massive volumes of business-critical data, hosted on cloud/on-premises infrastructure. Due to the complexity of the SAP ecosystem, security operations (SecOps) teams face the challenge of effectively monitoring and protecting their organization against growing threats. A breach of the SAP system could result in data loss, disruption to business processes, loss of revenue, and major reputation damage.\n The Microsoft Sentinel SAP connector, part of the Microsoft Sentinel Solution for SAP® Applications, ingests SAP logs to Microsoft Sentinel workspaces. You can access raw data using the built-in Microsoft Sentinel Solution for SAP content or using custom content. The connector ingests SAP NetWeaver (RFC) application layer logs, including Security Auditlogs, Application logs, ChangeDocuments, Spool Logs, Change Request data, User masterdata, and more.\n The Microsoft Sentinel solution for SAP will be generally available with a six-month free promotion starting in August 2022. Billing will start in February 2023, as an add-on charge in addition to the existing Microsoft Sentinel consumption-billing model for monitoring SAP production systems.",
                    "graphQueries": [
                        {
                            "metricName": "Total data received",
                            "legend": "SAP",
                            "baseQuery": "SAPConnectorOverview()"
                        }
                    ],
                    "dataTypes": [
                        {
                            "name": "SAPConnectorOverview",
                            "lastDataReceivedQuery": "SAPConnectorOverview() \n| summarize Time = max(TimeGenerated) \n            | where isnotempty(Time)"
                        },
                        {
                            "name": "SAPAuditLog",
                            "lastDataReceivedQuery": "SAPAuditLog \n| summarize Time = max(TimeGenerated) \n            | where isnotempty(Time)"
                        }
                    ],
                    "connectivityCriterias": [
                        {
                            "type": "SentinelKinds",
                            "value": [
                                "SAP"
                            ]
                        },
                        {
                            "type": "IsConnectedQuery",
                            "value": [
                                "SAPConnectorOverview()\n            | summarize LastLogReceived = max(TimeGenerated) \n                | project IsConnected = LastLogReceived > ago(7d)"
                            ]
                        }
                    ],
                    "sampleQueries": [
                        {
                            "description": "SAP Connector Overview",
                            "query": "SAPConnectorOverview()"
                        },
                        {
                            "description": "Users Get Privileged",
                            "query": "SAPUsersGetPrivileged()"
                        }
                    ],
                    "availability": {
                        "status": 2,
                        "isPreview": false,
                        "featureFlag": {
                            "feature": "MdatpRawData",
                            "featureStates": {
                                "1": 2,
                                "2": 2,
                                "3": 2,
                                "4": 2,
                                "5": 2
                            }
                        }
                    },
                    "permissions": {
                        "tenant": [
                            "GlobalAdmin",
                            "SecurityAdmin"
                        ],
                        "resourceProvider": [
                            {
                                "provider": "Microsoft.OperationalInsights/workspaces",
                                "permissionsDisplayText": "read and write permissions.",
                                "providerDisplayName": "Workspace",
                                "scope": "Workspace",
                                "requiredPermissions": {
                                    "read": true,
                                    "write": true,
                                    "delete": true
                                }
                            }
                        ],
                        "customs": [
                            {
                                "name": "Documentation",
                                "description": "Complete documentation including on-premise and any cloud coverage"
                            },
                            {
                                "name": "Infrastructure (Azure)",
                                "description": "* Azure Ubuntu, RHEL, or SLES Virtual Machine with a system managed identity.\n* Azure Key Vault with write-read access policy assigned to the Virtual Machine identity."
                            },
                            {
                                "name": "SAP systems",
                                "description": "SAP ABAP NetWeaver systems support. Review the complete Basis Requirements.\nSAP ABAP connector user with a password or certificate (SNC).\nApply the user permissions with the authorization profile, or use the Sample Authorizations Role CR / Transport form.\nOptionally deploy the ALL logs CR (single CR) on SAP (STMS)."
                            },
                            {
                                "name": "Pricing",
                                "description": "The Microsoft Sentinel solution for SAP will be billed as an add-on charge from May 2023, at $2 per production system ID (SID) per hour in addition to the existing Microsoft Sentinel consumption-billing model. The solution will be free when a workspace is in a Microsoft Sentinel free trial. Systems configured for development and test usage will remain free of the additional charge. Please see offer page for more details."
                            }
                        ]
                    },
                    "id": "[variables('_uiConfigId1')]"
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "condition": "[parameters('wl_1_creation_required')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/SAP - Critical Authorizations')]",
            "apiVersion": "2022-08-01",
            "properties": {
                "description": "Critical Authorizations object which their assignment should be governed.",
                "displayName": "SAP - Critical Authorizations",
                "source": "SAP - Critical Authorizations.csv",
                "provider": "Microsoft",
                "isDeleted": false,
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "AuthorizationObject",
                "rawContent": "AuthorizationObject,AuthorizationField,AuthorizationValue,ActivityField,Activity,Description\nS_DEVELOP,OBJTYPE,DEBUG,ACTVT,02,Debug Change Authorizations\nS_DEVELOP,OBJTYPE,*,ACTVT,02,All development activities - include debug\nS_DEVELOP,OBJTYPE,DEBUG,ACTVT,*,Debug All Activites (Including Change)\nS_DEVELOP,OBJTYPE,*,ACTVT,*,All development activities - include debug\nS_RFC,RFCNAME,*,ACTVT,16,Execution of all RFC Services\nS_RFC,RFCNAME,*,ACTVT,*,Execution of all RFC Services\nS_TCODE,TCD,*,NOT_IN_USE,nan,All Transaction Codes - Example without Activity\nS_TZONE,ACTVT,*,NOT_IN_USE,nan,Maintain System Time Zone - Example only with Activity\n",
                "watchlistAlias": "SAP - Critical Authorizations",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "condition": "[parameters('wl_2_creation_required')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/SAP - Excluded Networks')]",
            "apiVersion": "2022-08-01",
            "properties": {
                "description": "Internal and maintenance of excluded networks for ignoring web dispatchers, terminal servers etc.",
                "displayName": "SAP - Excluded Networks",
                "source": "SAP - Excluded Networks.csv",
                "provider": "Microsoft",
                "isDeleted": false,
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "Network",
                "rawContent": "Network,Description\n255.68.255.0/32,My  Dummy Terminal Server\n255.138.157.0/32,My Dummy Citrix\n",
                "watchlistAlias": "SAP - Excluded Networks",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "condition": "[parameters('wl_3_creation_required')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/SAP - Excluded Users')]",
            "apiVersion": "2022-08-01",
            "properties": {
                "description": "System users which are logged in the systems need to be ignored. (for example Multiple logons by user alert)",
                "displayName": "SAP - Excluded Users",
                "source": "SAP - Excluded Users.csv",
                "provider": "Microsoft",
                "isDeleted": false,
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "User",
                "rawContent": "User,Description\nSYSWF,WF\n",
                "watchlistAlias": "SAP - Excluded Users",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "condition": "[parameters('wl_4_creation_required')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/SAP - FTP Servers')]",
            "apiVersion": "2022-08-01",
            "properties": {
                "description": "FTP Servers for identification of unauthorized connections.",
                "displayName": "SAP - FTP Servers",
                "source": "SAP - FTP Servers.csv",
                "provider": "Microsoft",
                "isDeleted": false,
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "Client",
                "rawContent": "Client,FTP_Server_Name,FTP_Server_Port,Description\n100,http://ourorgftpserver.com/,22,description\n",
                "watchlistAlias": "SAP - FTP Servers",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "condition": "[parameters('wl_5_creation_required')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/SAP - Networks')]",
            "apiVersion": "2022-08-01",
            "properties": {
                "description": "Internal and maintenance networks for identification of unauthorized logins.",
                "displayName": "SAP - Networks",
                "source": "SAP - Networks.csv",
                "provider": "Microsoft",
                "isDeleted": false,
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "Network",
                "rawContent": "Network,Description\n111.68.128.0/17,Our internal Network\n5.8.0.0/19,SAP Support Network\n223.255.254.0/24,Our Support Network\n",
                "watchlistAlias": "SAP - Networks",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "condition": "[parameters('wl_6_creation_required')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/SAP - Obsolete Function Modules')]",
            "apiVersion": "2022-08-01",
            "properties": {
                "description": "Obsolete Function Modules which their execution should be governed.",
                "displayName": "SAP - Obsolete Function Modules",
                "source": "SAP - Obsolete Function Modules.csv",
                "provider": "Microsoft",
                "isDeleted": false,
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "FunctionModule",
                "rawContent": "FunctionModule,Description\nTH_SAPREL,Get SAP Release Information\nTH_SAPREL2,Get SAP Release Information\nTH_SAPREL3,Get SAP Release Information\nSUSR_RFC_USER_INTERFACE,Users from External Systems\nRFC_ABAP_INSTALL_AND_RUN,Install ABAP Program\n",
                "watchlistAlias": "SAP - Obsolete Function Modules",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "condition": "[parameters('wl_7_creation_required')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/SAP - Obsolete Programs')]",
            "apiVersion": "2022-08-01",
            "properties": {
                "description": "Obsolete ABAP programs (reports) which their execution should be governed.",
                "displayName": "SAP - Obsolete Programs",
                "source": "SAP - Obsolete Programs.csv",
                "provider": "Microsoft",
                "isDeleted": false,
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "ABAPProgram",
                "rawContent": "ABAPProgram,Description\nExample_Program,just an example\n",
                "watchlistAlias": "SAP - Obsolete Programs",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "condition": "[parameters('wl_8_creation_required')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/SAP - Privileged Users')]",
            "apiVersion": "2022-08-01",
            "properties": {
                "description": "Privileged users which are under extra restrictions.",
                "displayName": "SAP - Privileged Users",
                "source": "SAP - Privileged Users.csv",
                "provider": "Microsoft",
                "isDeleted": false,
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "User",
                "rawContent": "User,Description\nSAP*,SAP*\nDDIC,Dictionary, Internal\nALEREMOTE,BW User\nBWREMOTE,BW User\nSAPSYS,SAP System, Internal\nWF-BATCH,Workflow Batch\n",
                "watchlistAlias": "SAP - Privileged Users",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "condition": "[parameters('wl_9_creation_required')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/SAP - Sensitive ABAP Programs')]",
            "apiVersion": "2022-08-01",
            "properties": {
                "description": "Sensitive ABAP programs (reports) which their execution should be governed.",
                "displayName": "SAP - Sensitive ABAP Programs",
                "source": "SAP - Sensitive ABAP Programs.csv",
                "provider": "Microsoft",
                "isDeleted": false,
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "ABAPProgram",
                "rawContent": "ABAPProgram,Description\nRSPFLDOC,Profile Parameter Maintenance\n/1BCDWB/DBUSR02,Data Browser - USR02\n/1BCDWB/DBUSH02,Data Browser - USH02\n/1BCDWB/DBUSRPWDHISTORY,Data Browser - USRPWDHISTORY\nRDDGENBB,DD: Dispatcher for Converter and Distributor\nRSBDCOS0,Execute OS Command (Logged in SYSLOG and Trace Files)\nRSCDOK99,Delete Change Documents\nRSTBPDEL,Table Log Database Management: Delete Logs\n",
                "watchlistAlias": "SAP - Sensitive ABAP Programs",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "condition": "[parameters('wl_10_creation_required')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/SAP - Sensitive Function Modules')]",
            "apiVersion": "2022-08-01",
            "properties": {
                "description": "Sensitive Function Modules which their execution should be governed.",
                "displayName": "SAP - Sensitive Function Modules",
                "source": "SAP - Sensitive Function Modules.csv",
                "provider": "Microsoft",
                "isDeleted": false,
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "FunctionModule",
                "rawContent": "FunctionModule,Description\nRSAU_CLEAR_AUDIT_LOG,Delete Audit Log\nBAPI_USER_CREATE,Create User\nBAPI_USER_CREATE1,Create User\nBAPI_USER_DELETE,Delete user\nBAPI_USER_GET_DETAIL,Read User Details\nBAPI_USER_PROFILES_ASSIGN,Change User-Profile Assignments\nEPS_GET_DIRECTORY_LISTING,nan\nPFL_CHECK_OS_FILE_EXISTENCE,nan\nPRGN_INTERFACE_USER,nan\nRFC_ABAP_INSTALL_AND_RUN,nan\nRFC_GET_TABLE_ENTRIES,Read table entries\nRFC_READ_TABLE,External access to R/3 tables via RFC\nRS_FUNCTIONMODULE_INSERT,nan\nRZL_READ_DIR_LOCAL,nan\nSUSR_RFC_USER_INTERFACE,nan\nSXPG_CALL_SYSTEM,Execute an External Command\nSXPG_COMMAND_EXECUTE,Execute an External Command\nSXPG_COMMAND_EXECUTE_LONG,Execute an External Command\nTABLE_ENTRIES_GET_VIA_RFC,nan\nTH_REMOTE_TRANSACTION,Start Remote Transaction\nTH_SAPREL,nan\nTMS_CI_START_SERVICE,nan\n",
                "watchlistAlias": "SAP - Sensitive Function Modules",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "condition": "[parameters('wl_11_creation_required')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/SAP - Sensitive Profiles')]",
            "apiVersion": "2022-08-01",
            "properties": {
                "description": "Sensitive profiles which their assignment should be governed.",
                "displayName": "SAP - Sensitive Profiles",
                "source": "SAP - Sensitive Profiles.csv",
                "provider": "Microsoft",
                "isDeleted": false,
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "Profile",
                "rawContent": "Profile,Description\nSAP_ALL,All SAP Systems Authorizations\nSAP_NEW,New Authorizations Checks\n",
                "watchlistAlias": "SAP - Sensitive Profiles",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "condition": "[parameters('wl_12_creation_required')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/SAP - Sensitive Roles')]",
            "apiVersion": "2022-08-01",
            "properties": {
                "description": "Sensitive roles which their assignment should be governed.",
                "displayName": "SAP - Sensitive Roles",
                "source": "SAP - Sensitive Roles.csv",
                "provider": "Microsoft",
                "isDeleted": false,
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "Role",
                "rawContent": "Role,Description\nZ_FIGL_POSTING_ADMIN,Custom example role\nSAP_BC_AUTH_DATA_ADMIN,Authorization Data Administrator\nSAP_BC_AUTH_PROFILE_ADMIN,Authorization Profile Administrator\nSAP_BC_BASIS_ADMIN,System Administrator\n",
                "watchlistAlias": "SAP - Sensitive Roles",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "condition": "[parameters('wl_13_creation_required')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/SAP - Sensitive Tables')]",
            "apiVersion": "2022-08-01",
            "properties": {
                "description": "Sensitive tables which their access should be governed.",
                "displayName": "SAP - Sensitive Tables",
                "source": "SAP - Sensitive Tables.csv",
                "provider": "Microsoft",
                "isDeleted": false,
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "Table",
                "rawContent": "Table,Description\nUSR02,Logon Data\nPA0008,Basic Pay Infotype\nUSH02,Change history for logon data\nUSRPWDHISTORY,Change History for Logon Data: Last Entries from Archive\n",
                "watchlistAlias": "SAP - Sensitive Tables",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "condition": "[parameters('wl_14_creation_required')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/SAP - Sensitive Transactions')]",
            "apiVersion": "2022-08-01",
            "properties": {
                "description": "Sensitive transactions which their execution should be governed.",
                "displayName": "SAP - Sensitive Transactions",
                "source": "SAP - Sensitive Transactions.csv",
                "provider": "Microsoft",
                "isDeleted": false,
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "TransactionCode",
                "rawContent": "TransactionCode,Description\nRSAU_CONFIG,Audit Log Configuration\nRZ11,Profile Parameter Maintenance\nRZ10, Profile Maintenance\nRZ12, RFC Server Group Maintenance\nSM18, Delete Audit Log\nSCU3, Delete Table Log\nSLG2, delete application log\n*, All transactions\nSM49, Execute external OS Commands\nSM69, Execute external OS Commands\nSCC1 , Client Import\nSCC4, Client Overview\nSCC5, Delete Client\nSE06, Set Up Transport Organizer\nSE03, Transport Organizer Tools\nSE38, ABAP Program Editor\nSE80, ABAP Workbench\nSA38, ABAP Program Editor\nSE37, Execute Function Modules\n",
                "watchlistAlias": "SAP - Sensitive Transactions",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "condition": "[parameters('wl_15_creation_required')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/SAP - Systems')]",
            "apiVersion": "2022-08-01",
            "properties": {
                "description": "Describes the landscape of SAP systems according to role and usage.",
                "displayName": "SAP - Systems",
                "source": "SAP - Systems.csv",
                "provider": "Microsoft",
                "isDeleted": false,
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "SystemID",
                "rawContent": "SystemID,SystemRole,SystemUsage\nA4H,Production,ERP\n",
                "watchlistAlias": "SAP - Systems",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "condition": "[parameters('wl_16_creation_required')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/SAP - Transactions for ABAP Generations')]",
            "apiVersion": "2022-08-01",
            "properties": {
                "description": "Transactions for ABAP generations which their execution should be governed.",
                "displayName": "SAP - Transactions for ABAP Generations",
                "source": "SAP - Transactions for ABAP Generations.csv",
                "provider": "Microsoft",
                "isDeleted": false,
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "TransactionCode",
                "rawContent": "TransactionCode,Description\nSE11, ABAP Dictionary Maintenance\nSE12, ABAP Dictionary Display\nSE16, Data Browser\nSE16N, General Table Display\nPFCG, Role Maintenance\nSM30, Call View Maintenance\nSM36, Schedule Background Job\nSM37, Overview of job selection\nST03, Workload and Performance Statistics\nSU01, User Maintenance\n",
                "watchlistAlias": "SAP - Transactions for ABAP Generations",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "condition": "[parameters('wl_17_creation_required')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/SAP_Dynamic_Audit_Log_Monitor_Configuration')]",
            "apiVersion": "2022-08-01",
            "properties": {
                "description": "Configure the SAP audit log alerts by assigning each message ID a severity level as required by you, per system role (production, non-production). This watchlist also allows for configuring a designated team to handle each of the messages. Configure the SAP audit log alerts by assigning each message ID a severity level as required by you, per system role (production, non-production). This watchlist also allows for configuring a designated team to handle each of the messages, and excluding users by SAP roles or by tags from the SAPVIPUsers watchlist.",
                "displayName": "SAP_Dynamic_Audit_Log_Monitor_Configuration",
                "source": "SAP_Dynamic_Audit_Log_Monitor_Configuration.csv",
                "provider": "Microsoft",
                "isDeleted": false,
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "MessageID",
                "rawContent": "MessageID,MessageText,DetailedDescription,CategoryName,StandardEventWeighting,ProductionSeverity,NonProdSeverity,ProductionThreshold,NonProdThreshold,RuleType,Tactics,TeamsChannelID,DestinationEmail,RolesTagsToExclude\nAU0,\"Audit - Test. Text: &A\",\"Audit - Test. Text: &A\",Other,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nAU1,\"Logon successful (type=&A  method=&C)\",\"Logon successful (type=&A; method=&C)\",Logon,Severe,Low,Low,30,60,AnomaliesOnly,nan,TeamChannelID,nan,MassiveLogonsOK; ZZZ_ALL_TRUSTED_RFC\nAU2,\"Logon failed (reason=&B  type=&A  method=&C)\",\"Logon failed (reason=&B; type=&A; method=&C)\",Logon,Critical,High,High,6,30,AnomaliesOnly,Initial Access,nan,nan,nan\nAU3,\"Transaction &A started.\",\"Transaction &A started.\",Transaction Start,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,AuthTeam@MyOrg.COM,nan\nAU4,\"Start of transaction &A failed (Reason=&B)\",\"<strong>The user attempted to start the transaction specified in the message. However; starting the transaction failed; that is; the transaction was not executed.</strong> <p>Possible Reasons</p><oul><li>0 - Cause unknown</li><li>1 - Error in call parameters when calling the kernel function</li><li>2 - Transaction does not exist</li><li>3 - Transaktion & is locked (in transaction SM01)</li><li>4 - Transaction is an area menu and therefore cannot be executed</li><li>5 - Parameter transaction is an area menu and therefore cannot be executed</li><li>6 - User is not authorized for this transaction</li></ul>\",Transaction Start,Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,AuthTeam@MyOrg.COM,nan\nAU5,\"RFC/CPIC logon successful (type=&A  method=&C)\",\"RFC/CPIC logon successful (type=&A; method=&C)\",RFC Login,Non-Critical,Medium,Disabled,300,1000,Disabled,nan,nan,SOCTeam@MyOrg.COM,nan\nAU6,\"RFC/CPIC logon failed  reason=&B  type=&A  method=&C\",\"RFC/CPIC logon failed; reason=&B; type=&A; method=&C\",RFC Login,Critical,Disabled,Disabled,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,MassiveRFCOK\nAU7,\"User &A created.\",\"User &A created.\",User Master Record Change,Critical,High,Low,10,0,AnomaliesOnly,nan,nan,AuthTeam@MyOrg.COM,nan\nAU8,\"User &A deleted.\",\"User &A deleted.\",User Master Record Change,Severe,Medium,Medium,10,0,AnomaliesOnly,Impact,nan,AuthTeam@MyOrg.COM,nan\nAU9,\"User &A locked.\",\"User &A locked.\",User Master Record Change,Severe,Medium,Medium,10,0,AnomaliesOnly,Impact; Privilege Escalation,nan,AuthTeam@MyOrg.COM,MassiveAuthChangesOK\nAUA,\"User &A unlocked.\",\"User &A unlocked.\",User Master Record Change,Severe,Medium,Medium,10,0,AnomaliesOnly,Privilege Escalation,nan,AuthTeam@MyOrg.COM,MassiveAuthChangesOK\nDUQ,\"Active scenario &A for switchable authorization checks changed - &B\",\"Active scenario &A for switchable authorization checks changed - &B\",Other,Critical with Monitor Alert,High,High,0,0,AnomaliesOnly,Initial Access,nan,AuthTeam@MyOrg.COM,nan\nAUC,\"User Logoff\",\"User Logoff\",Logon,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,                                                                                                ,nan,nan\nAUD,\"User master record &A changed.\",\"User master record &A changed.\",User Master Record Change,Severe,Medium,Disabled,60,6,AnomaliesOnly,nan,nan,AuthTeam@MyOrg.COM,MassiveAuthChangesOK\nAUE,\"Audit configuration changed\",\"Audit configuration changed\",System,Critical,High,High,0,0,Deterministic,Defense Evasion,nan,BasisTeam@MyOrg.COM,nan\nAUF,\"Audit: Slot &A: Class &B  Severity &C  User &D  Client &E  &F\",\"Audit: Slot &A: Class &B; Severity &C; User &D; Client &E; &F\",System,Critical,High,High,0,0,AnomaliesOnly,Defense Evasion,nan,BasisTeam@MyOrg.COM,nan\nAUG,\"Application server started\",\"Application server started\",System,Critical,High,High,0,0,Deterministic,Impact,nan,BasisTeam@MyOrg.COM,nan\nAUH,\"Application server stopped\",\"Application server stopped\",System,Critical,High,High,0,0,Deterministic,Impact,nan,BasisTeam@MyOrg.COM,nan\nAUI,\"Audit: Slot &A Inactive\",\"Audit: Slot &A Inactive\",System,Critical,High,High,0,0,AnomaliesOnly,Impact,nan,BasisTeam@MyOrg.COM,nan\nAUJ,\"Audit: Active status set to &1\",\"Audit: Active status set to &1\",System,Critical with Monitor Alert,High,High,0,0,AnomaliesOnly,Impact,nan,BasisTeam@MyOrg.COM,nan\nAUK,\"Successful RFC call &C (function group = &A)\",\"Successful RFC call &C (function group = &A)\",RFC Start,Non-Critical,Medium,Disabled,1000,1000,Disabled,nan,nan,SOCTeam@MyOrg.COM,MassiveRFCOK\nAUL,\"Failed RFC call &C (function group = &A)\",\"Failed RFC call &C (function group = &A)\",RFC Start,Critical,Medium,Disabled,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nAUM,\"User &B locked in client &A after errors in password checks\",\"User &B locked in client &A after errors in password checks\",Logon,Critical with Monitor Alert,High,High,0,6,Deterministic,Reconnaissance,nan,nan,nan\nAUN,\"User &B unlocked in client &A after entering wrong password\",\"User &B unlocked in client &A after entering wrong password\",Logon,Critical,High,High,0,0,Deterministic,Reconnaissance,nan,nan,nan\nAUO,\"Logon failed (reason = &B  type = &A)\",\"Logon failed (reason = &B; type = &A)\",Logon,Severe,Medium,Medium,6,30,AnomaliesOnly,Reconnaissance,nan,nan,nan\nAUP,\"Transaction &A locked\",\"Transaction &A locked\",Transaction Start,Severe,Medium,Medium,0,0,AnomaliesOnly,Exfiltration,nan,AuthTeam@MyOrg.COM,nan\nAUQ,\"Transaction &A unlocked\",\"Transaction &A unlocked\",Transaction Start,Severe,Medium,Medium,0,0,AnomaliesOnly,Resource Development,nan,AuthTeam@MyOrg.COM,nan\nAUR,\"&A &B created\",\"&A &B created\",User Master Record Change,Severe,Medium,Medium,10,10,AnomaliesOnly,Privilege Escalation,nan,AuthTeam@MyOrg.COM,MassiveAuthChangesOK\nAUS,\"&A &B deleted\",\"&A &B deleted\",User Master Record Change,Severe,Medium,Medium,10,10,AnomaliesOnly,Impact,nan,AuthTeam@MyOrg.COM,MassiveAuthChangesOK\nAUT,\"&A &B changed\",\"&A &B changed\",User Master Record Change,Severe,Medium,Medium,10,10,AnomaliesOnly,Privilege Escalation,nan,AuthTeam@MyOrg.COM,MassiveAuthChangesOK\nAUU,\"&A &B activated\",\"&A &B activated\",User Master Record Change,Critical,High,High,10,10,AnomaliesOnly,Privilege Escalation,nan,AuthTeam@MyOrg.COM,nan\nAUV,\"Digital signature error (reason = &A  ID = &B)\",\"Digital signature error (reason = &A; ID = &B)\",Other,Critical,High,High,0,0,Deterministic,nan,nan,SOCTeam@MyOrg.COM,nan\nAUW,\"Report &A started\",\"Report &A started\",Report Start,Non-Critical,Disabled,Disabled,0,0,AnomaliesOnly,nan,nan,AuthTeam@MyOrg.COM,nan\nAUX,\"Start of report &A failed (reason = &B)\",\"<strong>The user attempted to start the report specified in the message. The report could not be started and therefore could not be executed.</strong><p>Possible reasons:</p><oul><li>User exit - The user does not have the authorizations checked in the user exit when the report is started.</li><li>No authorization The user does not have authorization for the authorization group of the report (authorization object S_PROGRAM).</li>\",Report Start,Severe,Medium,Low,10,0,AnomaliesOnly,nan,nan,AuthTeam@MyOrg.COM,nan\nAUY,\"Download &A Bytes to File &C\",\"Download &A Bytes to File &C\",Other,Severe,Low,Low,15,20,AnomaliesOnly,Exfiltration,High False positives. Should be grouped by,SOCTeam@MyOrg.COM,MassiveDownloadsOK\nAUZ,\"Digital Signature (Reason = &A  ID = &B)\",\"Digital Signature (Reason = &A; ID = &B)\",Other,Severe,Medium,Medium,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nBU0,\"RAL configuration access: Action: &A  type: &B  name &C\",\"RAL configuration access: Action: &A; type: &B; name &C\",Other,Critical with Monitor Alert,High,High,0,0,AnomaliesOnly,Resource Development,nan,SOCTeam@MyOrg.COM,nan\nBU1,\"Password check failed for user &B in client &A\",\"Password check failed for user &B in client &A\",Other,Critical with Monitor Alert,High,Medium,6,30,AnomaliesOnly,Initial Access,nan,SOCTeam@MyOrg.COM,nan\nBU2,\"Password changed for user &B in client &A\",\"Password changed for user &B in client &A\",User Master Record Change,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,AuthTeam@MyOrg.COM,nan\nBU3,\"Security check changed in export: Old value &A  new value &B\",\"Security check changed in export: Old value &A; new value &B\",Other,Critical with Monitor Alert,High,High,0,0,AnomaliesOnly,Resource Development,nan,SOCTeam@MyOrg.COM,nan\nBU4,\"Dynamic ABAP code: Event &A  event type &B  check total &C\",\"Dynamic ABAP code: Event &A; event type &B; check total &C\",Other,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nBU5,\"ICF recorder entry executed for user &A (activity &B)\",\"ICF recorder entry executed for user &A (activity &B)\",Other,Severe,Medium,Medium,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nBU6,\"ICF recorder entry executed by user &A (&B  &C) (activity &D).\",\"ICF recorder entry executed by user &A (&B; &C) (activity &D).\",Other,Severe,Medium,Medium,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nBU7,\"Administration setting was changed for ICF Recorder (Activity: &A)\",\"Administration setting was changed for ICF Recorder (Activity: &A)\",Other,Severe,Medium,Medium,0,0,AnomaliesOnly,Resource Development,nan,SOCTeam@MyOrg.COM,nan\nBU8,\"Virus Scan Interface: Virus &C found by profile &A (step &B)\",\"Virus Scan Interface: Virus &C found by profile &A (step &B)\",Other,Critical,High,High,0,0,Deterministic,Exfiltration,nan,SOCTeam@MyOrg.COM,nan\nBU9,\"Virus Scan Interface: Error &C occurred in profile &A (step &B)\",\"Virus Scan Interface: Error &C occurred in profile &A (step &B)\",Other,Severe,Medium,Medium,0,0,AnomaliesOnly,Exfiltration,nan,SOCTeam@MyOrg.COM,nan\nBUA,\"WS: Signature check error (reason &B  WP &C). Refer to Web service log &A.\",\"WS: Signature check error (reason &B; WP &C). Refer to Web service log &A.\",Other,Severe,Medium,Medium,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nBUB,\"WS: Signature insufficient (WP &C). Refer to Web service log &A.\",\"WS: Signature insufficient (WP &C). Refer to Web service log &A.\",Other,Severe,Medium,Medium,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nBUC,\"WS: Time stamp is invalid. Refer to Web service log &A.\",\"WS: Time stamp is invalid. Refer to Web service log &A.\",Other,Severe,Medium,Medium,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nBUD,\"WS: Delayed logon failed (type &B  WP &C). Refer to Web service log &A.\",\"WS: Delayed logon failed (type &B; WP &C). Refer to Web service log &A.\",Logon,Critical,High,High,0,0,AnomaliesOnly,Reconnaissance,nan,nan,nan\nBUE,\"WS: Delayed logon successful (type &B  WP &C). Refer to Web service log &A.\",\"WS: Delayed logon successful (type &B; WP &C). Refer to Web service log &A.\",Logon,Critical,High,High,0,0,AnomaliesOnly,Reconnaissance,nan,nan,nan\nBUF,\"HTTP Security Session Management was activated for client &A.\",\"HTTP Security Session Management was activated for client &A.\",Other,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,BasisTeam@MyOrg.COM,nan\nBUG,\"HTTP Security Session Management was deactivated for client &A.\",\"HTTP Security Session Management was deactivated for client &A.\",Other,Critical with Monitor Alert,High,High,0,0,Deterministic,Resource Development,nan,BasisTeam@MyOrg.COM,nan\nBUH,\"HTTP Security Session of user &A (client &B) was hard exited\",\"HTTP Security Session of user &A (client &B) was hard exited\",Other,Severe with Monitor Alert,Medium,Medium,0,0,AnomaliesOnly,Defense Evasion,nan,SOCTeam@MyOrg.COM,nan\nBUI,\"SPNego replay attack detected (UPN=&A)\",\"SPNego replay attack detected (UPN=&A)\",Logon,Critical,High,High,0,0,Deterministic,Initial Access,nan,nan,nan\nBUJ,\"Non-encrypted &A communication (&B)\",\"Non-encrypted &A communication (&B)\",Other,Severe,Disabled,Disabled,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nBUK,\"&A assertion used\",\"&A assertion used\",Logon,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,nan,nan\nBUL,\"&A: &B\",\"&A: &B\",Logon,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,nan,nan\nBUM,\"Name ID of a subject\",\"Name ID of a subject\",Logon,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,nan,nan\nBUN,\"Attribute\",\"Attribute\",Logon,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nBUO,\"Authentication assertion\",\"Authentication assertion\",Logon,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,AuthTeam@MyOrg.COM,nan\nBUP,\"&A\",\"&A\",Logon,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nBUQ,\"Signed LogoutRequest accepted\",\"Signed LogoutRequest accepted\",Logon,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nBUR,\"Unsigned LogoutRequest accepted\",\"Unsigned LogoutRequest accepted\",Logon,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nBUS,\"&A: Request without sufficient security characteristic of address &B.\",\"&A: Request without sufficient security characteristic of address &B.\",Other,Critical,High,High,0,0,AnomaliesOnly,Initial Access,nan,SOCTeam@MyOrg.COM,nan\nBUT,\"CRL download failed with error code &A\",\"CRL download failed with error code &A\",Other,Severe,Medium,Medium,0,0,AnomaliesOnly,Exfiltration,nan,SOCTeam@MyOrg.COM,nan\nBUU,\"Certificate check for subject &A with profile &B failed (status &C)\",\"Certificate check for subject &A with profile &B failed (status &C)\",Other,Critical,High,High,0,0,Deterministic,Exfiltration,nan,SOCTeam@MyOrg.COM,nan\nBUV,\"Invalid hash value &A. The context contains &B.\",\"Invalid hash value &A. The context contains &B.\",User Master Record Change,Critical,High,High,0,0,AnomaliesOnly,Defense Evasion,nan,AuthTeam@MyOrg.COM,nan\nBUW,\"A refresh token issued to client &A was used by client &B.\",\"A refresh token issued to client &A was used by client &B.\",User Master Record Change,Critical,High,High,0,0,Deterministic,Defense Evasion,nan,AuthTeam@MyOrg.COM,nan\nBUX,\"Test message\",\"Test message\",Transaction Start,Severe,Medium,Medium,0,0,AnomaliesOnly,nan,nan,AuthTeam@MyOrg.COM,nan\nBUY,\"Field contents changed: &5&9&9&9&9&9\",\"Field contents changed: &5&9&9&9&9&9\",Other,Critical,High,High,0,0,AnomaliesOnly,Execution,nan,SOCTeam@MyOrg.COM,nan\nBUZ,\"> in program &A  line &B  event &C\",\"> in program &A; line &B; event &C\",Other,Critical,Disabled,Disabled,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nCU0,\"RAL Log Access: Action: &A\",\"RAL Log Access: Action: &A\",Other,Critical,High,High,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nCU1,\"CU Test Message\",\"CU Test Message\",Other,Severe,Medium,Medium,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nCU2,\"OAuth 2.0: Invalid access token received (reason=&A)\",\"OAuth 2.0: Invalid access token received (reason=&A)\",Logon,Severe,Medium,Medium,6,30,AnomaliesOnly,Reconnaissance,nan,AuthTeam@MyOrg.COM,nan\nCU3,\"OAuth 2.0: Insufficient OAuth 2.0 scope for requested resource (user=&A)\",\"OAuth 2.0: Insufficient OAuth 2.0 scope for requested resource (user=&A)\",Logon,Severe,Medium,Medium,6,30,AnomaliesOnly,Reconnaissance,nan,AuthTeam@MyOrg.COM,nan\nCU4,\"OAuth 2.0: Logged-on client user &A not same as parameter client ID &B\",\"OAuth 2.0: Logged-on client user &A not same as parameter client ID &B\",Logon,Critical,High,High,0,0,Deterministic,Reconnaissance,nan,AuthTeam@MyOrg.COM,nan\nCU5,\"OAuth 2.0: Client &A requested invalid access grant type &B\",\"OAuth 2.0: Client &A requested invalid access grant type &B\",Logon,Severe,Medium,Medium,6,30,AnomaliesOnly,Reconnaissance,nan,AuthTeam@MyOrg.COM,nan\nCU6,\"OAuth 2.0: Client ID &A in SAML assertion not same as client ID &B in request\",\"OAuth 2.0: Client ID &A in SAML assertion not same as client ID &B in request\",Logon,Critical,High,High,0,0,Deterministic,Reconnaissance,nan,AuthTeam@MyOrg.COM,nan\nCU7,\"OAuth 2.0: Scope &B not permitted for client &C  user &D (cause=&A)\",\"OAuth 2.0: Scope &B not permitted for client &C; user &D (cause=&A)\",Logon,Severe,Medium,Medium,6,30,AnomaliesOnly,Reconnaissance,nan,AuthTeam@MyOrg.COM,nan\nCU8,\"OAuth 2.0: Access token issued (client=&A  user=&B  grant type=&C)\",\"OAuth 2.0: Access token issued (client=&A; user=&B; grant type=&C)\",Logon,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,AuthTeam@MyOrg.COM,nan\nCU9,\"OAuth 2.0: Valid access token received for user &A\",\"OAuth 2.0: Valid access token received for user &A\",Logon,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,AuthTeam@MyOrg.COM,nan\nCUA,\"Rejected Assertion\",\"Rejected Assertion\",Logon,Severe,Medium,Medium,0,0,AnomaliesOnly,Reconnaissance,nan,SOCTeam@MyOrg.COM,nan\nCUB,\"&A: &B\",\"&A: &B\",Logon,Severe,Medium,Medium,0,0,AnomaliesOnly,Initial Access,nan,SOCTeam@MyOrg.COM,UnsafeSAML_OK\nCUC,\"&A\",\"&A\",Logon,Severe,Medium,Medium,0,0,AnomaliesOnly,Initial Access,nan,SOCTeam@MyOrg.COM,nan\nCUD,\"Name ID of a subject\",\"Name ID of a subject\",Logon,Severe,Medium,Medium,0,0,AnomaliesOnly,Initial Access,nan,SOCTeam@MyOrg.COM,nan\nCUE,\"Attribute\",\"Attribute\",Logon,Severe,Medium,Medium,0,0,AnomaliesOnly,Initial Access,nan,SOCTeam@MyOrg.COM,nan\nCUF,\"Authentication Assertion\",\"Authentication Assertion\",Logon,Severe,Medium,Medium,0,0,AnomaliesOnly,Initial Access,nan,AuthTeam@MyOrg.COM,nan\nCUG,\"Signed LogoutRequest rejected\",\"Signed LogoutRequest rejected\",Logon,Severe,Medium,Medium,0,0,AnomaliesOnly,Initial Access,nan,SOCTeam@MyOrg.COM,nan\nCUH,\"Unsigned LogoutRequest rejected\",\"Unsigned LogoutRequest rejected\",Logon,Severe,Medium,Medium,0,0,AnomaliesOnly,Initial Access,nan,SOCTeam@MyOrg.COM,nan\nCUI,\"Application &A started\",\"Application &A started\",Transaction Start,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,BasisTeam@MyOrg.COM,nan\nCUJ,\"Failed to start application &A (reason =&B)\",\"Failed to start application &A (reason =&B)\",Transaction Start,Critical,High,High,0,0,AnomaliesOnly,Initial Access,nan,BasisTeam@MyOrg.COM,nan\nCUK,\"C debugging activated\",\"C debugging activated\",Other,Critical,High,Low,0,0,Deterministic,nan,nan,BasisTeam@MyOrg.COM,nan\nCUL,\"Field content in debugger changed by user &A: &B (&C)\",\"Field content in debugger changed by user &A: &B (&C)\",Other,Critical,High,Low,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nCUM,\"Jump to ABAP Debugger by user &A: &B (&C)\",\"<strong>In the ABAP Debugger; the user set the instruction pointer to anotherline or statement. </strong>    </br>This changed the program flow. </br>During the continued execution of the program you may pass through parts of the program thatwould usually not have been executed; or at least not under theseconditions.\",Other,Critical,High,Low,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nCUN,\"A process was stopped from the debugger by user &A (&C)\",\"A process was stopped from the debugger by user &A (&C)\",Other,Critical,High,Low,0,0,Deterministic,nan,nan,SOCTeam@MyOrg.COM,nan\nCUO,\"Explicit database operation in debugger by user &A: &B (&C)\",\"Explicit database operation in debugger by user &A: &B (&C)\",Other,Critical,High,Medium,0,0,Deterministic,nan,nan,SOCTeam@MyOrg.COM,nan\nCUP,\"Non-exclusive debugging session started by user &A (&C)\",\"Non-exclusive debugging session started by user &A (&C)\",Other,Critical,High,Low,0,0,Deterministic,nan,nan,SOCTeam@MyOrg.COM,nan\nCUQ,\"Logical file name &A not configured. Physical file name &B not checked.\",\"Logical file name &A not configured. Physical file name &B not checked.\",Other,Severe,Medium,Medium,0,0,AnomaliesOnly,Exfiltration,nan,SOCTeam@MyOrg.COM,nan\nCUR,\"Physical file name &B does not fulfill requirements from logical file name &A\",\"Physical file name &B does not fulfill requirements from logical file name &A\",Other,Severe,Medium,Medium,0,0,AnomaliesOnly,Exfiltration,nan,SOCTeam@MyOrg.COM,nan\nCUS,\"Logical file name &B is not a valid alias for logical file name &A\",\"Logical file name &B is not a valid alias for logical file name &A\",Other,Severe,Medium,Medium,0,0,AnomaliesOnly,Exfiltration,nan,SOCTeam@MyOrg.COM,nan\nCUT,\"Validation for logical file name &A is not active\",\"Validation for logical file name &A is not active\",Other,Severe,Medium,Medium,0,0,AnomaliesOnly,Exfiltration,nan,SOCTeam@MyOrg.COM,nan\nCUU,\"Payload of PI/WS message &A was read | &B\",\"Payload of PI/WS message &A was read | &B\",Other,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nCUV,\"Successful WS Call (service = &A  operation &B)\",\"Successful WS Call (service = &A; operation &B)\",RFC Start,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nCUW,\"Failed Web service call (service = &A  operation = &B  reason = &C)\",\"Failed Web service call (service = &A; operation = &B; reason = &C)\",RFC Start,Critical,High,High,0,0,AnomaliesOnly,Lateral Movement,nan,SOCTeam@MyOrg.COM,nan\nCUX,\"Payload of postprocessing request &A read\",\"Payload of postprocessing request &A read\",Other,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nCUY,\"> &A\",\"> &A\",Other,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nCUZ,\"Generic table access by RFC to &A with activity &B\",\"Generic table access by RFC to &A with activity &B\",RFC Start,Critical,High,Medium,6,6,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,GenericTablebyRFCOK\nDU0,\"Invalid SAP GUI data\",\"Invalid SAP GUI data\",Logon,Critical with Monitor Alert,High,High,0,0,AnomaliesOnly,Initial Access,nan,SOCTeam@MyOrg.COM,nan\nDU1,\"FTP server allowlist is empty\",\"FTP server allowlist is empty\",RFC Start,Severe,Medium,Medium,0,0,AnomaliesOnly,Lateral Movement,nan,SOCTeam@MyOrg.COM,nan\nDU2,\"FTP server allowlist is non-secure due to use of placeholders\",\"FTP server allowlist is non-secure due to use of placeholders\",RFC Start,Severe,Medium,Medium,0,0,AnomaliesOnly,Lateral Movement,nan,SOCTeam@MyOrg.COM,nan\nDU3,\"Server &A is not contained in the allowlist\",\"Server &A is not contained in the allowlist\",RFC Start,Critical,High,High,0,0,AnomaliesOnly,Lateral Movement,nan,SOCTeam@MyOrg.COM,nan\nDU4,\"Connection to server &A failed\",\"Connection to server &A failed\",RFC Start,Critical,High,High,0,0,AnomaliesOnly,Lateral Movement,nan,SOCTeam@MyOrg.COM,nan\nDU5,\"There is no logical file name for path &A\",\"There is no logical file name for path &A\",RFC Start,Critical,High,High,0,0,AnomaliesOnly,Exfiltration,nan,SOCTeam@MyOrg.COM,nan\nDU6,\"Validation for &A successful\",\"Validation for &A successful\",RFC Start,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nDU7,\"Validation for &A failed\",\"Validation for &A failed\",RFC Start,Critical with Monitor Alert,High,High,0,0,AnomaliesOnly,Lateral Movement,nan,SOCTeam@MyOrg.COM,nan\nDU8,\"FTP connection request for server &A successful\",\"FTP connection request for server &A successful\",RFC Start,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nDU9,\"Generic table access call to &A with activity &B (auth. check: &C )\",\"Generic table access call to &A with activity &B (auth. check: &C )\",Transaction Start,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,AuthTeam@MyOrg.COM,nan\nDUA,\"EHS-SADM: Service &A created on host &B\",\"EHS-SADM: Service &A created on host &B\",Other,Severe,Medium,Medium,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nDUB,\"EHS-SADM: Service &A started on host &B\",\"EHS-SADM: Service &A started on host &B\",Other,Severe,Medium,Medium,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nDUC,\"EHS-SADM: Service &A ended on host &B\",\"EHS-SADM: Service &A ended on host &B\",Other,Severe,Medium,Medium,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nDUD,\"EHS-SADM: Service &A deleted on host &B\",\"EHS-SADM: Service &A deleted on host &B\",Other,Severe,Medium,Medium,0,0,AnomaliesOnly,Impact,nan,BasisTeam@MyOrg.COM,nan\nDUE,\"EHS-SADM: Configuration of service &A changed on host &B\",\"EHS-SADM: Configuration of service &A changed on host &B\",Other,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nDUF,\"EHS-SADM: File &A transferred from host &B\",\"EHS-SADM: File &A transferred from host &B\",Other,Non-Critical,Low,Low,0,0,AnomaliesOnly,Exfiltration,nan,SOCTeam@MyOrg.COM,nan\nDUG,\"EHS-SADM: File &A transferred to host &B\",\"EHS-SADM: File &A transferred to host &B\",Other,Non-Critical,Low,Low,0,0,AnomaliesOnly,Exfiltration,nan,SOCTeam@MyOrg.COM,nan\nDUH,\"OAuth 2.0: Token declared invalid (OAuth client=&A  user=&B  token type=&C)\",\"OAuth 2.0: Token declared invalid (OAuth client=&A; user=&B; token type=&C)\",User Master Record Change,Severe with Monitor Alert,Medium,Medium,0,0,AnomaliesOnly,Defense Evasion,nan,AuthTeam@MyOrg.COM,nan\nDUI,\"RFC callback executed (destination &A  called &B  callback &C)\",\"RFC callback executed (destination &A; called &B; callback &C)\",RFC Start,Non-Critical,Medium,Medium,100,1000,AnomaliesOnly,Lateral Movement,nan,SOCTeam@MyOrg.COM,nan\nDUJ,\"RFC callback rejected (destination &A  called &B  callback &C)\",\"RFC callback rejected (destination &A; called &B; callback &C)\",RFC Start,Critical,High,High,0,0,AnomaliesOnly,Lateral Movement,nan,SOCTeam@MyOrg.COM,nan\nDUK,\"RFC callback in simulation mode (destination &A  called &B  callback &C)\",\"RFC callback in simulation mode (destination &A; called &B; callback &C)\",RFC Start,Critical,High,High,0,0,AnomaliesOnly,Lateral Movement,nan,SOCTeam@MyOrg.COM,nan\nDUL,\"Check for &A in allowlist &B was successful\",\"Check for &A in allowlist &B was successful\",Other,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nDUM,\"Check for &A in allowlist &B failed\",\"Check for &A in allowlist &B failed\",Other,Severe with Monitor Alert,Medium,Medium,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nDUN,\"Active allowlist &A changed ( &B )\",\"Active allowlist &A changed ( &B )\",Other,Critical with Monitor Alert,High,High,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nDUP,\"Authorization check for object &A in scenario &B failed\",\"Authorization check for object &A in scenario &B failed\",Other,Non-Critical,Low,Low,0,0,AnomaliesOnly,Initial Access,nan,AuthTeam@MyOrg.COM,nan\nDUO,\"Authorization check for object &A in scenario &B successful\",\"Authorization check for object &A in scenario &B successful\",Other,Non-Critical,Low,Low,0,0,AnomaliesOnly,Initial Access,nan,AuthTeam@MyOrg.COM,nan\nDUV,\"Authorization check for user &C on object &A in scenario &B failed\",\"Authorization check for user &C on object &A in scenario &B failed\",Other,Non-Critical,Low,Low,0,0,AnomaliesOnly,Initial Access,nan,AuthTeam@MyOrg.COM,nan\nDUR,\"JSON RPC call of function module &A succeeded\",\"JSON RPC call of function module &A succeeded\",RFC Start,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nDUS,\"JSON RPC call of function module &A failed\",\"JSON RPC call of function module &A failed\",RFC Start,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nDUU,\"Authorization check for user &C on object &A in scenario &B successful\",\"Authorization check for user &C on object &A in scenario &B successful\",Other,Non-Critical,Low,Low,0,0,AnomaliesOnly,Initial Access,nan,AuthTeam@MyOrg.COM,nan\nAUB,\"Authorizations for user &A changed.\",\"The authorizations of the user specified in the message were changed.\",User Master Record Change,Severe,Medium,Medium,30,60,AnomaliesOnly,Initial Access,nan,AuthTeam@MyOrg.COM,MassiveAuthChangesOK\nEUH,\"Authorizations of user &A for authorization object &B detected\",\"Authorizations of user &A for authorization object &B detected\",User Master Record Change,Non-Critical,Low,Low,0,0,AnomaliesOnly,Initial Access,nan,AuthTeam@MyOrg.COM,nan\nDUW,\"Data target accessed in BW &A\",\"Data target accessed in BW &A\",Other,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nDUX,\"TEMP: Customer-specific event DUX &A &B &C &D\",\"TEMP: Customer-specific event DUX &A &B &C &D\",Other,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nDUY,\"TEMP: Customer-specific event DUY &A &B &C &D\",\"TEMP: Customer-specific event DUY &A &B &C &D\",Other,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nDUZ,\"TEMP: Customer-specific event DUZ &A &B &C &D\",\"TEMP: Customer-specific event DUZ &A &B &C &D\",Other,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nEU0,\"Test Message for Class EU\",\"Test Message for Class EU\",Other,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nEU1,\"System change options changed ( &A to &B )\",\"System change options changed ( &A to &B )\",System,Critical,Low,High,0,0,Deterministic,Defense Evasion,nan,BasisTeam@MyOrg.COM,nan\nEU2,\"Client &A settings changed ( &B )\",\"Client &A settings changed ( &B )\",System,Critical,High,High,0,0,Deterministic,Defense Evasion,nan,BasisTeam@MyOrg.COM,nan\nEU3,\"&A change documents deleted without archiving (&B)\",\"&A change documents deleted without archiving (&B)\",Other,Critical,High,High,0,0,Deterministic,Impact,nan,BasisTeam@MyOrg.COM,nan\nEU4,\"Validation successful for logical file name &A (physical: &B)\",\"Validation successful for logical file name &A (physical: &B)\",Other,Non-Critical,Low,Low,0,0,AnomaliesOnly,Exfiltration,nan,SOCTeam@MyOrg.COM,nan\nEU5,\"Audit log data of &A was deleted (&B data records)\",\"Audit log data of &A was deleted (&B data records)\",System,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,BasisTeam@MyOrg.COM,nan\nEUA,\"S/2 Cloud SDK ABAP component called\",\"S/2 Cloud SDK ABAP component called\",Transaction Start,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,AuthTeam@MyOrg.COM,nan\nEUB,\"Could not verify the digital signature: &A\",\"Could not verify the digital signature: &A\",Other,Critical,High,High,0,0,Deterministic,nan,nan,SOCTeam@MyOrg.COM,nan\nEUC,\"OAuth scope &A not assigned to the user\",\"OAuth scope &A not assigned to the user\",Logon,Critical,High,High,0,0,Deterministic,Initial Access,nan,AuthTeam@MyOrg.COM,nan\nEUD,\"HTTP request not received from trustworthy cloud connector (reason &A)\",\"HTTP request not received from trustworthy cloud connector (reason &A)\",Logon,Critical,High,High,0,0,Deterministic,Credential Access,nan,SOCTeam@MyOrg.COM,nan\nEUE,\"RFC function module &A called successfully\",\"RFC function module &A called successfully\",RFC Start,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nEUF,\"Could not call RFC function module &A\",\"Could not call RFC function module &A\",RFC Start,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nDUT,\"Critical JSON RPC call of function module &A (S_RFC * authorization)\",\"Critical JSON RPC call of function module &A (S_RFC * authorization)\",RFC Start,Critical,High,High,0,0,AnomaliesOnly,Initial Access,nan,AuthTeam@MyOrg.COM,nan\nEUG,\"User does not have authorization to run RFC function module &A\",\"User does not have authorization to run RFC function module &A\",RFC Start,Non-Critical,Low,Low,0,0,AnomaliesOnly,Initial Access,nan,AuthTeam@MyOrg.COM,nan\nEUI,\"Setup of UCON HTTP allowlist changed\",\"Setup of UCON HTTP allowlist changed\",RFC Start,Severe,Medium,Medium,0,0,AnomaliesOnly,Lateral Movement,nan,SOCTeam@MyOrg.COM,nan\nEUJ,\"Phase of UCON HTTP allowlist of context type &A changed\",\"Phase of UCON HTTP allowlist of context type &A changed\",RFC Start,Severe,Medium,Medium,0,0,AnomaliesOnly,Lateral Movement,nan,SOCTeam@MyOrg.COM,nan\nEUK,\"Access to UCON HTTP allowlist of context type &A was refused\",\"Access to UCON HTTP allowlist of context type &A was refused\",RFC Start,Critical,High,High,0,0,AnomaliesOnly,Lateral Movement,nan,SOCTeam@MyOrg.COM,nan\nEUL,\"HTTP security header register was changed for &A\",\"HTTP security header register was changed for &A\",RFC Start,Severe,Medium,Medium,0,0,AnomaliesOnly,Credential Access,nan,SOCTeam@MyOrg.COM,nan\nEUM,\"Trusted site list &A for HTTP security header was changed\",\"Trusted site list &A for HTTP security header was changed\",RFC Start,Severe,Medium,Medium,0,0,AnomaliesOnly,Credential Access,nan,SOCTeam@MyOrg.COM,nan\nEUN,\"Content security policy for service &A was violated\",\"Content security policy for service &A was violated\",RFC Start,Critical,High,High,0,0,Deterministic,Credential Access,nan,SOCTeam@MyOrg.COM,nan\nEUO,\"UCON HTTP allowlist of context type &A was changed\",\"UCON HTTP allowlist of context type &A was changed\",RFC Start,Severe,Medium,Medium,0,0,AnomaliesOnly,Credential Access,nan,SOCTeam@MyOrg.COM,nan\nEUP,\"Virtual user client=&A type=&B action=&C &D\",\"Virtual user client=&A type=&B action=&C &D\",Logon,Critical,High,High,0,0,AnomaliesOnly,Credential Access,nan,SOCTeam@MyOrg.COM,nan\nEUV,\"CDS view &A (field &B) was published\",\"CDS view &A (field &B) was published\",Other,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nEUW,\"blocklisting is activated (connection/table/field: &A &B &C)\",\"blocklisting is activated (connection/table/field: &A &B &C)\",Other,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,BasisTeam@MyOrg.COM,nan\nEUX,\"blocklisting is deactivated (connection/table/field: &A &B &C)\",\"blocklisting is deactivated (connection/table/field: &A &B &C)\",Other,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,BasisTeam@MyOrg.COM,nan\nEUY,\"Data blocking activated for &A\",\"Data blocking activated for &A\",Other,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,BasisTeam@MyOrg.COM,nan\nEUZ,\"Data blocking deactivated for &A\",\"Data blocking deactivated for &A\",Other,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,BasisTeam@MyOrg.COM,nan\nFU0,\"Exclusive security audit log medium changed (new status &A)\",\"Exclusive security audit log medium changed (new status &A)\",System,Critical,High,High,0,0,Deterministic,Defense Evasion,nan,BasisTeam@MyOrg.COM,nan\nFU1,\"RFC function &B with dynamic destination &C was called in program &A\",\"RFC function &B with dynamic destination &C was called in program &A\",RFC Start,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nFU2,\"Parsing of an XML data stream canceled for security reasons (reason = &A)\",\"Parsing of an XML data stream canceled for security reasons (reason = &A)\",Other,Severe,Medium,Medium,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nFU3,\"Template &A (&B) loaded\",\"Template &A (&B) loaded\",Other,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nFU4,\"Could not upload template &A\",\"Could not upload template &A\",Other,Severe,Medium,Medium,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nFU8,\"Lock entry deleted for user &A\",\"Lock entry deleted for user &A\",User Master Record Change,Severe,Medium,Medium,0,0,AnomaliesOnly,Impact,nan,AuthTeam@MyOrg.COM,nan\nFUA,\"Audit alert:  &A | &B &C &D\",\"Audit alert:  &A | &B &C &D\",Other,Critical,High,High,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nFUB,\"TEMP: Customer-specific event FUB &A &B &C &D\",\"TEMP: Customer-specific event FUB &A &B &C &D\",Other,Critical,High,High,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nFUC,\"Attempted read on output document &A for object &B ( &C )\",\"Attempted read on output document &A for object &B ( &C )\",Other,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nFUD,\"Successful read on output document &A for object &B ( &C )\",\"Successful read on output document &A for object &B ( &C )\",Other,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nFUE,\"Failed read on output document &A for object &B ( &C )\",\"Failed read on output document &A for object &B ( &C )\",Other,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nNU0,\"Audit - Test. Text: &A\",\"Audit - Test. Text: &A\",Other,Non-Critical,Low,Low,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\nWEBDYNPRO_RT 007,\"Web Dynpro ABAP\",\"Web Dynpro ABAP\",Web Dynpro ABAP,Low,Low,Low,0,0,AnomaliesOnly,nan,nan,SOCTeam@MyOrg.COM,nan\n",
                "watchlistAlias": "SAP_Dynamic_Audit_Log_Monitor_Configuration",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "condition": "[parameters('wl_18_creation_required')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/SAP_User_Config')]",
            "apiVersion": "2022-08-01",
            "properties": {
                "description": "SAP VIP Users allows for fine tunning alerts by excluding users and including users in specific contexts.",
                "displayName": "SAP_User_Config",
                "source": "SAP_User_Config.csv",
                "provider": "Microsoft",
                "isDeleted": false,
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "SAPUser",
                "rawContent": "SAPUser,User Identifier,User AAD Object Id,User On-Prem Sid,User Principal Name,Tags\nALEREMOTE,-,-,-,SAP batch user,Sensitive; Super; Batch; MassiveLogonsOK; MassiveRFCOK; GenericTablebyRFCOK\nBWREMOTE,nan,nan,nan,nan,Sensitive; Super; Batch; MassiveLogonsOK; MassiveRFCOK; GenericTablebyRFCOK\nDDIC,-,-,-,SAP dictionary user,Sensitive; Super; MassiveLogonsOK; MassiveRFCOK; GenericTablebyRFCOK\nSAP_SYSTEM,nan,nan,nan,nan,Automation; MassiveLogonsOK; MassiveRFCOK; GenericTablebyRFCOK\nOSS,nan,nan,nan,nan,SpecialAttention\nSENTINEL,nan,nan,nan,nan,Automation; MassiveLogonsOK; MassiveRFCOK; GenericTablebyRFCOK\nEmployeeSoonToLeave,nan,nan,nan,nan,SoonToLeave\n",
                "watchlistAlias": "SAP_User_Config",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
            "apiVersion": "2022-01-01-preview",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "version": "2.0.53",
                "kind": "Solution",
                "contentSchemaVersion": "2.0.0",
                "contentId": "[variables('_solutionId')]",
                "parentId": "[variables('_solutionId')]",
                "source": {
                    "kind": "Solution",
                    "name": "SAP",
                    "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                    "name": "Microsoft",
                    "email": "[variables('_email')]"
                },
                "support": {
                    "name": "Microsoft Corporation",
                    "email": "support@microsoft.com",
                    "tier": "Microsoft",
                    "link": "https://support.microsoft.com/"
                },
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "kind": "Workbook",
                            "contentId": "[variables('_workbookContentId1')]",
                            "version": "[variables('workbookVersion1')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId1')]",
                            "version": "[variables('analyticRuleVersion1')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId2')]",
                            "version": "[variables('analyticRuleVersion2')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId3')]",
                            "version": "[variables('analyticRuleVersion3')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId4')]",
                            "version": "[variables('analyticRuleVersion4')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId5')]",
                            "version": "[variables('analyticRuleVersion5')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId6')]",
                            "version": "[variables('analyticRuleVersion6')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId7')]",
                            "version": "[variables('analyticRuleVersion7')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId8')]",
                            "version": "[variables('analyticRuleVersion8')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId9')]",
                            "version": "[variables('analyticRuleVersion9')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId10')]",
                            "version": "[variables('analyticRuleVersion10')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId11')]",
                            "version": "[variables('analyticRuleVersion11')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId12')]",
                            "version": "[variables('analyticRuleVersion12')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId13')]",
                            "version": "[variables('analyticRuleVersion13')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId14')]",
                            "version": "[variables('analyticRuleVersion14')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId15')]",
                            "version": "[variables('analyticRuleVersion15')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId16')]",
                            "version": "[variables('analyticRuleVersion16')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId17')]",
                            "version": "[variables('analyticRuleVersion17')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId18')]",
                            "version": "[variables('analyticRuleVersion18')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId19')]",
                            "version": "[variables('analyticRuleVersion19')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId20')]",
                            "version": "[variables('analyticRuleVersion20')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId21')]",
                            "version": "[variables('analyticRuleVersion21')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId22')]",
                            "version": "[variables('analyticRuleVersion22')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId23')]",
                            "version": "[variables('analyticRuleVersion23')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId24')]",
                            "version": "[variables('analyticRuleVersion24')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId25')]",
                            "version": "[variables('analyticRuleVersion25')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId26')]",
                            "version": "[variables('analyticRuleVersion26')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId27')]",
                            "version": "[variables('analyticRuleVersion27')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId28')]",
                            "version": "[variables('analyticRuleVersion28')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId29')]",
                            "version": "[variables('analyticRuleVersion29')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId30')]",
                            "version": "[variables('analyticRuleVersion30')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId31')]",
                            "version": "[variables('analyticRuleVersion31')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId32')]",
                            "version": "[variables('analyticRuleVersion32')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId33')]",
                            "version": "[variables('analyticRuleVersion33')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId34')]",
                            "version": "[variables('analyticRuleVersion34')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId35')]",
                            "version": "[variables('analyticRuleVersion35')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId36')]",
                            "version": "[variables('analyticRuleVersion36')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId37')]",
                            "version": "[variables('analyticRuleVersion37')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId38')]",
                            "version": "[variables('analyticRuleVersion38')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId39')]",
                            "version": "[variables('analyticRuleVersion39')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId40')]",
                            "version": "[variables('analyticRuleVersion40')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId41')]",
                            "version": "[variables('analyticRuleVersion41')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId42')]",
                            "version": "[variables('analyticRuleVersion42')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId43')]",
                            "version": "[variables('analyticRuleVersion43')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId44')]",
                            "version": "[variables('analyticRuleVersion44')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId45')]",
                            "version": "[variables('analyticRuleVersion45')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId46')]",
                            "version": "[variables('analyticRuleVersion46')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId47')]",
                            "version": "[variables('analyticRuleVersion47')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId48')]",
                            "version": "[variables('analyticRuleVersion48')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId49')]",
                            "version": "[variables('analyticRuleVersion49')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId50')]",
                            "version": "[variables('analyticRuleVersion50')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId51')]",
                            "version": "[variables('analyticRuleVersion51')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId52')]",
                            "version": "[variables('analyticRuleVersion52')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId53')]",
                            "version": "[variables('analyticRuleVersion53')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId54')]",
                            "version": "[variables('analyticRuleVersion54')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId55')]",
                            "version": "[variables('analyticRuleVersion55')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId56')]",
                            "version": "[variables('analyticRuleVersion56')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId57')]",
                            "version": "[variables('analyticRuleVersion57')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId58')]",
                            "version": "[variables('analyticRuleVersion58')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId59')]",
                            "version": "[variables('analyticRuleVersion59')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId60')]",
                            "version": "[variables('analyticRuleVersion60')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRulecontentId61')]",
                            "version": "[variables('analyticRuleVersion61')]"
                        },
                        {
                            "kind": "DataConnector",
                            "contentId": "[variables('_dataConnectorContentId1')]",
                            "version": "[variables('dataConnectorVersion1')]"
                        },
                        {
                            "kind": "Watchlist",
                            "contentId": "[variables('_SAP - Critical Authorizations')]",
                            "version": "2.0.19"
                        },
                        {
                            "kind": "Watchlist",
                            "contentId": "[variables('_SAP - Excluded Networks')]",
                            "version": "2.0.19"
                        },
                        {
                            "kind": "Watchlist",
                            "contentId": "[variables('_SAP - Excluded Users')]",
                            "version": "2.0.19"
                        },
                        {
                            "kind": "Watchlist",
                            "contentId": "[variables('_SAP - FTP Servers')]",
                            "version": "2.0.19"
                        },
                        {
                            "kind": "Watchlist",
                            "contentId": "[variables('_SAP - Networks')]",
                            "version": "2.0.19"
                        },
                        {
                            "kind": "Watchlist",
                            "contentId": "[variables('_SAP - Obsolete Function Modules')]",
                            "version": "2.0.19"
                        },
                        {
                            "kind": "Watchlist",
                            "contentId": "[variables('_SAP - Obsolete Programs')]",
                            "version": "2.0.19"
                        },
                        {
                            "kind": "Watchlist",
                            "contentId": "[variables('_SAP - Privileged Users')]",
                            "version": "2.0.19"
                        },
                        {
                            "kind": "Watchlist",
                            "contentId": "[variables('_SAP - Sensitive ABAP Programs')]",
                            "version": "2.0.19"
                        },
                        {
                            "kind": "Watchlist",
                            "contentId": "[variables('_SAP - Sensitive Function Modules')]",
                            "version": "2.0.19"
                        },
                        {
                            "kind": "Watchlist",
                            "contentId": "[variables('_SAP - Sensitive Profiles')]",
                            "version": "2.0.19"
                        },
                        {
                            "kind": "Watchlist",
                            "contentId": "[variables('_SAP - Sensitive Roles')]",
                            "version": "2.0.19"
                        },
                        {
                            "kind": "Watchlist",
                            "contentId": "[variables('_SAP - Sensitive Tables')]",
                            "version": "2.0.19"
                        },
                        {
                            "kind": "Watchlist",
                            "contentId": "[variables('_SAP - Sensitive Transactions')]",
                            "version": "2.0.19"
                        },
                        {
                            "kind": "Watchlist",
                            "contentId": "[variables('_SAP - Systems')]",
                            "version": "2.0.19"
                        },
                        {
                            "kind": "Watchlist",
                            "contentId": "[variables('_SAP - Transactions for ABAP Generations')]",
                            "version": "2.0.19"
                        },
                        {
                            "kind": "Watchlist",
                            "contentId": "[variables('_SAP_Dynamic_Audit_Log_Monitor_Configuration')]",
                            "version": "2.0.19"
                        },
                        {
                            "kind": "Watchlist",
                            "contentId": "[variables('_SAP_User_Config')]",
                            "version": "2.0.19"
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAPUsersEmail')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAPAuditLogConfiguration')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAPGetParameters')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAPAuditLogConfigRecommend')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAPGetDataTypes')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAPUsersGetSensitive')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAPUsersGetVIP')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAPUsersHeader')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAPSystems')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAPThreatIntelligenceIndicator')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAPAuditLogAnomalies')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAP_ADCP')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAP_ADR6')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAP_AGR_1251')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAP_AGR_AGRS')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAP_AGR_DEFINE')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAP_AGR_FLAGS')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAP_AGR_PROF')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAP_AGR_TCODES')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAP_AGR_USERS')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAP_DEVACCESS')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAP_PAHI')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAP_USGRP_USER')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAP_USR01')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAP_USR02')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAP_USR05')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAP_USR21')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAP_UST04')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAPAppLog')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAPAuditLog')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAPChangeDocsLog')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAPConnectorHealth')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAPConnectorOverview')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAPCRLog')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAPFilesLogs')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAPHeartBeat')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAPJAVAFilesLogs')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAPJobLog')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAPOS_GW')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAPOS_ICM')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAPOS_SAPCONTROL')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAPOS_Syslog')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAPOS_WP')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAPSpoolLog')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAPSpoolOutputLog')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAPSyslog')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAPTableDataLog')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAPUsersAssignments')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAPUsersAuthorizations')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAPUsersGetPrivileged')]",
                            "version": 2
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('_SAPFunctionsSAPWorkflowLog')]",
                            "version": 2
                        }
                    ]
                },
                "firstPublishDate": "2022-05-06",
                "providers": [
                    "Microsoft"
                ],
                "categories": {
                    "domains": [
                        "Security - Threat Protection",
                        "Identity"
                    ]
                }
            },
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2022-10-01",
            "name": "[parameters('workspace')]",
            "location": "[parameters('workspace-location')]",
            "resources": [
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAPUsersEmail",
                        "query": "let UserMDLookBack = totimespan(toscalar(SAPGetParameters('UserMDLookBack')| project-keep ValueLow));\r\n// older agents have to use USR21 to get the ADDRNUMBER, PERSNUMBER before getting the email address from ADR6\r\nlet AgentEmailsV1= SAP_USR21 | where TimeGenerated > ago(UserMDLookBack)\r\n| summarize arg_max(TimeGenerated, ADDRNUMBER, PERSNUMBER) by BNAME, MANDT, SystemID\r\n| project-rename CLIENT= MANDT\r\n| join kind= leftouter hint.strategy=shuffle \r\n(SAP_ADR6 | where TimeGenerated > ago(UserMDLookBack) \r\n| summarize arg_max(TimeGenerated, CONSNUMBER ) by CLIENT, DATE_FROM, ADDRNUMBER, PERSNUMBER, SystemID, SMTP_ADDR)\r\n on ADDRNUMBER, PERSNUMBER, SystemID, CLIENT\r\n| project SystemID, ClientID= CLIENT, User= BNAME, Email= iff(isempty(SMTP_ADDR), BNAME, SMTP_ADDR)\r\n| summarize Email= anyif(Email, isnotempty(Email) ) by ClientID, SystemID, User;\r\n\r\n// agents from version 60075287 have the join of USR21 and ADR6 performed \r\nlet AgentEmailsV2= SAP_ADR6 | where TimeGenerated > ago(UserMDLookBack)\r\n| summarize arg_max(TimeGenerated, SMTP_ADDR) by BNAME, ClientID= CLIENT, SystemID\r\n| project SystemID, ClientID, User= BNAME, Email= iff(isempty(SMTP_ADDR), BNAME, SMTP_ADDR)\r\n| summarize Email= anyif(Email, isnotempty(Email) ) by ClientID, SystemID, User;\r\n\r\nAgentEmailsV1 | union AgentEmailsV2\r\n",
                        "functionAlias": "SAPUsersEmail",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAPUsersEmail",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAPAuditLogConfiguration",
                        "query": "// optional parameters can look like this\r\n// let SelectedSystems =  dynamic([\"All Systems\"]);\r\n// let SelectedSystemRoles =  dynamic([\"All System Roles\"]);\r\n// let SelectedSeverities=  dynamic([\"High\", \"Medium\"]);\r\n// // let SelectedRuleTypes = dynamic([\"All RuleTypes\"]);\r\n// // let SelectedRuleTypes= dynamic([\"AnomaliesOnly\"]);\r\n// let SelectedRuleTypes= dynamic([\"Deterministic\"]);\r\n// // let SelectedSystems =  dynamic([\"S4P\", \"B4X\", \"ODT\"]);\r\n// // let SelectedSystemRoles =  dynamic([\"Production\", \"UAT\"]);\r\n// // let SelectedSeverities =  dynamic([\"All Severities\"]);\r\n\r\nlet Configuration = materialize (_GetWatchlist('SAP_Dynamic_Audit_Log_Monitor_Configuration') \r\n    | summarize arg_max(LastUpdatedTimeUTC, *) by SearchKey\r\n    | where (SelectedSeverities has ProductionSeverity or SelectedSeverities has NonProdSeverity or tostring(SelectedSeverities) == '[\"All Severities\"]')\r\n    | where (SelectedRuleTypes has RuleType or tostring(SelectedRuleTypes) == '[\"All RuleTypes\"]')\r\n    | extend DummyJoinField = 1);\r\n\r\nlet Systems = materialize (_GetWatchlist('SAP - Systems') \r\n    | where SearchKey in (SelectedSystems) or tostring(SelectedSystems) == '[\"All Systems\"]'\r\n    | where SystemRole in (SelectedSystemRoles) or tostring(SelectedSystemRoles) == '[\"All System Roles\"]'\r\n    | project-keep SearchKey, SystemRole, SystemUsage\r\n    | extend DummyJoinField = 1);\r\n\r\n\r\nlet SystemConfigurations =  Configuration\r\n    | join kind= inner Systems\r\n        on $left.DummyJoinField == $right.DummyJoinField;\r\n\r\n\r\nSystemConfigurations\r\n| project-rename SystemID = SearchKey1\r\n// | extend IsProd = iff((SystemRole == \"Production\" or ConsiderAsProd has SystemID) and not(ConsiderAsNonProd has SystemID), true, false)\r\n| extend IsProd = iff(SystemRole == \"Production\" , true, false)\r\n| extend Severity = iff(IsProd, ProductionSeverity, NonProdSeverity)\r\n| extend Threshold = tolong( iff(IsProd, ProductionThreshold, NonProdThreshold))\r\n| where (SelectedSeverities has Severity or  tostring(SelectedSeverities) == '[\"All Severities\"]')\r\n| extend BagOfDetails = bag_pack('MessageID', MessageID, 'Tactics', Tactics, 'SystemID', SystemID, 'Severity', Severity, 'DestinationEmail', DestinationEmail, 'TeamsChannelID', TeamsChannelID)\r\n// remove spaces\r\n| extend RolesTagsToExclude = replace_string(RolesTagsToExclude, ' ', '')\r\n\r\n\r\n| project-keep CategoryName\r\n, MessageID\r\n, MessageText\r\n, Tactics\r\n, SystemID\r\n, SystemRole\r\n, SystemUsage\r\n, DetailedDescription\r\n, Severity\r\n, DestinationEmail\t\r\n, TeamsChannelID\r\n, IsProd\r\n, BagOfDetails\r\n, Threshold\r\n, RolesTagsToExclude\r\n, RuleType\r\n// , VariablesDataTypes\r\n\r\n\r\n",
                        "functionAlias": "SAPAuditLogConfiguration",
                        "functionParameters": "SelectedSystems:dynamic = dynamic([\"All Systems\"]), SelectedSystemRoles:dynamic = dynamic([\"All System Roles\"]), SelectedSeverities:dynamic = dynamic([\"High\", \"Medium\"]), SelectedRuleTypes:dynamic = dynamic([\"All RuleTypes\"])",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAPAuditLogConfiguration",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAPGetParameters",
                        "query": "// let ParameterType= 'Static';\r\n// let ParameterName= 'UserMDLookBack';\r\nlet ParametersTable= datatable ( Parameter_Type: string, Parameter_Name: string, \tValueLow: string, ValueHigh: string , ValueOPT:string, ValueSIGN:string, Tags: dynamic )\r\n[ 'Static', 'UserMDLookBack', '7d', '', '', '', ''\r\n,'Static', 'UserHeaderAuditLookBack', '4d', '', '', '', ''\r\n,'Static', 'SolutionVersion', '2.00.31', '', '', '', ''\r\n];\r\n\r\nParametersTable\r\n| where Parameter_Type==ParameterType or ParameterType == '*'\r\n| where  Parameter_Name== ParameterName or ParameterName == '*'\r\n| project-rename ParameterName=Parameter_Name, ParameterType= Parameter_Type;\r\n",
                        "functionAlias": "SAPGetParameters",
                        "functionParameters": "ParameterName:string = '*', ParameterType:string = '*'",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAPGetParameters",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAPAuditLogConfigRecommend",
                        "query": "// This query aims to give configuration recommendations related to the handling of the anomaly detection rules \r\n// performed on the SAP audit log\r\nlet LearningTime = 14d;\r\n// get anomalies from the last 14 days\r\nlet MaterAnoms= materialize(SAPAuditLogAnomalies(DetectingTime= 0h, LearningTime= LearningTime));\r\nlet UserRolesProfiles= SAPUsersAssignments() \r\n| summarize DirectRoles= make_set_if(DirectRoles, isnotempty( DirectRoles), 50) , ChildRoles= make_set_if(ChildRoles, isnotempty( ChildRoles),20), Profiles= make_set_if(Profiles, array_length(Profiles) > 0, 50) by User, SystemID, ClientID= Client\r\n| extend Roles= array_concat(DirectRoles, ChildRoles); \r\n// overview of all anomalies\r\nlet AnomalyCount= MaterAnoms\r\n    | summarize Count= count() * 1.00\r\n    | extend\r\n        Issue= strcat(\"Total Anomalies counted within the last \", format_timespan(LearningTime, 'd'), ' days'),\r\n        Recommendation= '',\r\n        Sort= 100;\r\n// daily average\r\nlet DailyAnomalyCount= MaterAnoms\r\n    | summarize Count= count() * (1d / LearningTime)\r\n    | extend\r\n        Issue= iff(Count > 10, strcat(\"Daily average anomaly count of \", toint(Count), \" is too high\"), strcat(\"Expected daily incident count is \", toint(Count))),\r\n        Recommendation= 'Consider the recommendations below to further configure your SAP audit log alerting',\r\n        Sort= 90;\r\nlet NoiseThreshold= max_of(toscalar(DailyAnomalyCount\r\n    | project Count) / 10, 10);\r\n//  Recommended tags to be added\r\nlet RecommendedTagsToAdd= MaterAnoms\r\n    | where isempty(RolesTagsToExclude)\r\n    | summarize Count= count() * 1.00 by MessageID\r\n    | where Count > NoiseThreshold\r\n    | extend\r\n        Issue= 'Noisey MessageIDs- add tags',\r\n        Recommendation= strcat(\"Create Tags for MessageID \", MessageID, \" using the SAP_Dynamic_Audit_Log_Monitor_Configuration watchlist\"),\r\n        Sort= 80;\r\n// recommended users to assign with tags\r\nlet RecommendedTagsPerUser= MaterAnoms\r\n    | where isnotempty(RolesTagsToExclude) and tostring(RolesTagsToExclude)!= '[\"nan\"]'\r\n    | summarize\r\n        Count= count() * 1.00,\r\n        Values= make_set_if(RolesTagsToExclude, isnotempty(RolesTagsToExclude) or tostring(RolesTagsToExclude)!= '[\"nan\"]', 50)\r\n        by User\r\n    | where Count > NoiseThreshold\r\n    | extend\r\n        Issue= 'Noisey Users',\r\n        Recommendation= strcat(\"Add the tags \", tostring(Values), \" to user \", User, \" using the SAP_User_Config watchlist\"),\r\n        Sort= 70;\r\n// recommended profiles to add to Message IDs\r\nlet RecommendedProfilesToAdd= MaterAnoms \r\n    | join kind= inner UserRolesProfiles on User, SystemID, ClientID\r\n    | where array_length(Profiles) > 0\r\n    | summarize\r\n        Count= count() * 1.00,\r\n        Values= make_set(Profiles, 50)\r\n        by MessageID\r\n    | where Count > NoiseThreshold\r\n    | extend\r\n        Issue= 'Noisey MessageIDs- add profiles',\r\n        Recommendation= strcat(\"Add the Profiles \", tostring(Values),\" as RolesTagsToExclude next to MessageID  \", MessageID, \" in the SAP_Dynamic_Audit_Log_Monitor_Configuration watchlist\"),\r\n        Sort= 60;\r\n// recommended Roles to add to Message IDs\r\nlet RecommendedRolesToAdd= MaterAnoms \r\n    | join kind= inner UserRolesProfiles on User, SystemID, ClientID\r\n    | where array_length(Roles) > 0\r\n    | summarize\r\n        Count= count() * 1.00,\r\n        Values= make_set(Roles, 50)\r\n        by MessageID\r\n    | where Count > NoiseThreshold\r\n    | extend\r\n        Issue= 'Noisey MessageIDs- add roles',\r\n        Recommendation= strcat(\"Add the Roles \", tostring(Values),\" as RolesTagsToExclude next to MessageID \", MessageID, \" in the SAP_Dynamic_Audit_Log_Monitor_Configuration watchlist\"),\r\n        Sort= 50;\r\n// query\r\nunion AnomalyCount, DailyAnomalyCount, RecommendedTagsPerUser, RecommendedTagsToAdd, RecommendedProfilesToAdd, RecommendedRolesToAdd\r\n| order by Sort, Count desc  \r\n| project IncidentCount= toint(Count), Issue, Recommendation",
                        "functionAlias": "SAPAuditLogConfigRecommend",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAPAuditLogConfigRecommend",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAPGetDataTypes",
                        "query": "// Function returns all keys and datatypes by default\r\n// let DataTypes = dynamic(['All DataTypes']);\r\n// let DataKeys = dynamic(['All DataKeys']);\r\n\r\n// multiple valus are also accepted\r\n// let DataTypes = dynamic(['LogonTypes', 'LogonFailureCauses']); \r\n// let DataKeys = dynamic(['A', 'B']);\r\n\r\n// single values are OK too\r\n// let DataTypes = dynamic(['LogonType']) ;//single value is also OK\r\n// let DataKeys = dynamic(['J']);//single value is also OK\r\n\r\nlet LogonTypes = datatable(Key: string , Value: string )\r\n[\"A\",\"Dialog logon (SAP GUI)\",\"B\",\"Background job start\",\"H\",\"HTTP logon\",\"U\",\"User switch (internal call)\",\"'\",\"' = Password check (API, internal call)\",\"M\",\"SMTP\",\"P\",\"ABAP Push Channel (APC)\",\"E\",\"Build of a shared object area (internal call)\",\"O\",\"AutoABAP (internal call)\",\"T\",\"Server startup procedure (internal call)\",\"V\",\"SAP start service (internal call)\",\"J\",\"JAVA virtual machine (internal call)\",\"W\",\"BGRFC watchdog (internal call)\", \"C\", \"CPIC call\",\"R\",\"external RFC call\",\"F\",\"internal RFC call\",\"S\",\"external RFC system call (function group SRFC\",\r\n\"I\",\"internal RFC system call (function group SRFC)\"]\r\n| extend DataType = 'LogonType';\r\n\r\nlet LogonFailureCauses = datatable(Key: string , Value: string )\r\n[\"0\",\"No error - successful logon\",\"1\",\"Incorrect logon data (client, user name, password)\",\"2\",\"User is locked (by administrator or incorrect logon attempts)\",\"3\",\"As 1 (connection to terminal also terminated)\",\"4\",\"Logon using emergency user SAP* (see SAP Note 2383)\",\"5\",\"Error creating the user buffer (==> may be a follow-on error)\",\"6\",\"User only exists in Central User Administration (CUA)\",\"7\",\"Invalid user type\",\"8\",\"User account is outside its validity period\",\"10\",\"Logon requires Secure Network Communication (SNC)\",\"11\",\"No SAP user exists in the system with this SNC ID\",\"12\",\"ACL entry missing for SNC-secured server-server connection\",\"13\",\"No matching SAP account found for SNC name\",\"14\",\"Ambiguous assignment between SNC name and SAP account\",\"15\",\"Unencrypted SAP GUI connection (was blocked)\",\"20\",\"Logon with logon ticket deactivated in general\",\"21\",\"Syntax error in received logon ticket\",\"22\",\"Check of logon ticket digital signature failed\",\"23\",\"Issuer of logon ticket is not in ACL table\",\"24\",\"Validity of logon ticket has expired\",\"25\",\"Unintended recipient (assertion ticket)\",\"26\",\"Ticket contains empty ABAP user ID\",\"27\",\"Ticket does not match current user\",\"28\",\"Ticket logon deactivated (security policy)\",\"30\",\"Logon by X.509 certificate deactivated in general\",\"31\",\"Syntax error in received X.509 certificate\",\"32\",\"X.509 certificate not from Internet Transaction Server\",\"34\",\"No matching SAP account found for X.509 certificate\",\"35\",\"Ambiguous assignment between X.509 certificate and SAP accounts\",\"36\",\"X.509 certificate rejected due to minimum validity period requirement\",\"40\",\"Logon using external ID deactivated generally\",\"41\",\"No matching SAP account found for external ID\",\"42\",\"Ambiguous assignment between external ID and SAP accounts\",\"50\",\"Logon using a password deactivated generally\",\"51\",\"Initial password not used for too long => no longer valid\",\"52\",\"User does not have a password => password logon not possible\",\"53\",\"Too many failed password logon attempts\",\"54\",\"Productive password not used for too long => no longer valid\",\"60\",\"SPNego logon deactivated\",\"61\",\"Invalid SPNego token (syntax)\",\"62\",\"NTLM token received instead of SPNego token\",\"63\",\"Missing/incorrect KeyTab entry\",\"64\",\"Expired SPNego token (time)\",\"65\",\"SPNego replay attack detected\",\"66\",\"Kerberos user name -> SNC name failed\",\"67\",\"SPNego: No SNC mapping found\",\"68\",\"SPNego: Multiple SNC mappings found\",\"100\",\"Client does not exist\",\"101\",\"Client is currently locked for logons (upgrade running)\",\"999\",\"Other error (see trace)\",\"1002\",\"Trusted system logon: Missing S_RFCACL authorization\"]\r\n| extend DataType = 'LogonFailureCause';\r\n\r\nlet LogonMethods = datatable(Key: string , Value: string )\r\n[\"P\",\"Password\",\"T\",\"Logon ticket\",\"t\",\"Assertion ticket\",\"X\",\"X.509 certificate\",\"S\",\"SNC\",\"R\",\"RFC ticket\",\"A\",\"Authorized impersonation (background processing)\",\"E\",\"External (EXTID)\",\"U\",\"User switch\",\"s\",\"HTTP security session\",\"2\",\"SAML2\",\"1\",\"SAML1\",\"o\",\"OAuth2\",\"N\",\"SPNego\",\"a\",\"APC session\"]\r\n| extend DataType = 'LogonMethod';\r\n\r\nlet UserTypes = datatable(Key: string , Value: string )\r\n[\"A\", \"Dialog\", \"B\", \"System\", \"C\", \"Communications Data\", \"L\", \"Reference (Logon not possible)\", \"S\", \"Service\"]\r\n| extend DataType = 'UserType';\r\n\r\n\r\nunion LogonTypes, LogonFailureCauses, LogonMethods, UserTypes\r\n| where tostring(DataKeys) == '[\"All DataKeys\"]' or Key == DataKeys[0] or (array_length( DataKeys) > 1 and tostring(DataKeys) contains_cs Key)\r\n| where tostring(DataTypes) == '[\"All DataTypes\"]' or DataType == DataTypes[0] or (array_length( DataTypes) > 1 and tostring(DataTypes) contains_cs DataType ) \r\n",
                        "functionAlias": "SAPGetDataTypes",
                        "functionParameters": "DataTypes:dynamic = dynamic([\"All DataTypes\"]), DataKeys:dynamic = dynamic([\"All DataKeys\"])",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAPGetDataTypes",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAPUsersGetSensitive",
                        "query": "// this function returns privilileged and sensitive users\r\n// privileged users are users which are directly named as such \r\nlet PrivelegedUsers = _GetWatchlist('SAP - Privileged Users');\r\nlet FixedUsers = datatable(User: string, Client: string, SystemID: string) [\"DDIC\", \"XXX\",\"001\"];\r\n// privileged users can also be such that carry a privileged role\r\nlet fixedRoles = datatable(Role: string) ['SAP_BC_BASIS_ADMIN', 'SAP_BC_AUTH_PROFILE_ADMIN'];\r\n// privileged users can also be such that carry a privileged profile\r\nlet fixedProfiles = datatable(Profile: string) [\"SAP_ALL\", \"SAP_NEW\"];\r\n// sensitive users are such that hold a sensitive role:\r\nlet SensRoles = _GetWatchlist('SAP - Sensitive Roles') | summarize by SearchKey;\r\n// or a sensitive profile:\r\nlet SensProfiles = _GetWatchlist('SAP - Sensitive Profiles') | summarize by SearchKey;\r\n// get SAP systems which are relevant\r\nlet AuditTimeAgo = totimespan(toscalar(SAPGetParameters('UserMDLookBack')| project-keep ValueLow));\r\nlet availableSystems= SAPAuditLog\r\n| where TimeGenerated > ago(AuditTimeAgo)\r\n| summarize by SystemID, Client= ClientID\r\n| extend dummy ='';\r\n// get the user assignments to roles and profiles\r\nlet UserAssignments= materialize(SAPUsersAssignments() | project User, ChildRoles, DirectRoles, Profiles, Client, SystemID);\r\n// privileged users\r\nlet PrivUsersByMD = UserAssignments\r\n| mv-expand ChildRoles, DirectRoles, Profiles\r\n| where DirectRoles in (fixedRoles) or ChildRoles in (fixedRoles) or Profiles in (fixedProfiles)\r\n| summarize by User, Client, SystemID\r\n| extend IsPrivileged= true;\r\n// sensitive users\r\nlet SensitiveUsersByMD = UserAssignments\r\n| project User, ChildRoles, DirectRoles, Profiles, Client, SystemID\r\n| mv-expand ChildRoles, DirectRoles, Profiles\r\n| where DirectRoles in (SensRoles) or ChildRoles in (SensRoles) or Profiles in (SensProfiles)\r\n| summarize by User, Client, SystemID\r\n| extend IsPrivileged= false;\r\n// cross join watchlist users with available systems and clients\r\nlet FixedUPriv = ((PrivelegedUsers\r\n    | union isfuzzy=true  FixedUsers \r\n    | summarize by User\r\n    | extend dummy = '') \r\n    | join kind= fullouter availableSystems\r\n        on $left.dummy == $right.dummy)\r\n    | extend IsPrivileged= true;\r\nFixedUPriv\r\n| union isfuzzy=true PrivUsersByMD, SensitiveUsersByMD, FixedUsers\r\n| where Client != \"XXX\"\r\n| summarize IsPrivileged= max(IsPrivileged) by User, Client, SystemID",
                        "functionAlias": "SAPUsersGetSensitive",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAPUsersGetSensitive",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAPUsersGetVIP",
                        "query": "// function gets tags which can either be SAP roles, SAP Profiles or tags.\r\n// let SearchForTags= dynamic(['Sensitive', 'T-AH390004']);\r\n// let SearchForTags= todynamic('All Tags');\r\n// let SpecialFocusTags = split('SpecialAttention; SoonToLeave', ';');\r\n// get the SAP roles / SAP profiles that are relevant\r\nlet SAPUserRolesAndProfiles = SAPUsersAssignments \r\n| where (tostring(SearchForTags) == 'All Tags' or Profiles has_any (SearchForTags) or ChildRoles has_any (SearchForTags) or DirectRoles has_any (SearchForTags))\r\n| project-keep User, SystemID, DirectRoles, ChildRoles, Profiles \r\n| summarize RolesAndProfiles = make_set(array_concat(DirectRoles, ChildRoles, Profiles), 120) by SAPUser= User\r\n| extend SearchKey= SAPUser;\r\n// query\r\n_GetWatchlist('SAP_User_Config')\r\n// remove spaces\r\n| extend Tags = replace_string(Tags, ' ', '')\r\n| extend TagsArr= split(Tags,\";\")\r\n| summarize Tags=make_set(Tags, 30), TagsList= make_set(TagsArr, 200), arg_max(LastUpdatedTimeUTC, SAPUser, ['User AAD Object Id'],\t['User Identifier'],\t['User On-Prem Sid'],\t['User Principal Name']) by SearchKey\r\n| join kind= inner SAPUserRolesAndProfiles on SAPUser\r\n| extend TagsList = array_concat(TagsList, RolesAndProfiles)\r\n| extend TagsIntersect = set_intersect(TagsList, SearchForTags)\r\n| extend SpecialFocusTagged = iff(array_length(set_intersect(TagsList, SpecialFocusTags)) > 0, true, false)\r\n| extend IntersectionSize = array_length(TagsIntersect)\r\n| extend Tags= replace_string(tostring(Tags),',','; ')\r\n| extend Tags= translate('[]\"','', Tags)\r\n| where (IntersectionSize > 0 or tostring(SearchForTags) == 'All Tags' or SpecialFocusTagged == true)\r\n| project-away LastUpdatedTimeUTC, SAPUser1, SearchKey1",
                        "functionAlias": "SAPUsersGetVIP",
                        "functionParameters": "SearchForTags:dynamic = dynamic('All Tags'), SpecialFocusTags:dynamic = dynamic([\"Do not return any in-focus users\"])",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAPUsersGetVIP",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAPUsersHeader",
                        "query": "// // optional parameters can look like this\r\n// let SelectedSystems =  dynamic([\"All Systems\"]);\r\n// let SelectedSystemRoles =  dynamic([\"All System Roles\"]);\r\n// let SelectedUsers = dynamic([\"All Users\"]);\r\n// let SelectedUser = \"All Users\";\r\n// // let SelectedSystems =  dynamic([\"S4P\", \"B4X\", \"ODT\"]);\r\n// // let SelectedSystemRoles =  dynamic([\"Production\", \"UAT\"]);\r\n// // let SelectedUsers = dynamic([\"DEVELOPER\",\"DDIC\"]); \r\n// // let SelectedUser = \"DDIC\";\r\n\r\nlet UserMDLookBack = totimespan(toscalar(SAPGetParameters('UserMDLookBack')| project-keep ValueLow));\r\nlet UserHeaderAuditLookBack = totimespan(toscalar(SAPGetParameters('UserHeaderAuditLookBack')| project-keep ValueLow));\r\n\r\nlet Now = now();\r\nlet Systems = materialize (_GetWatchlist('SAP - Systems') \r\n    | where SearchKey in (SelectedSystems) or tostring(SelectedSystems) == '[\"All Systems\"]'\r\n    | where SystemRole in (SelectedSystemRoles) or tostring(SelectedSystemRoles) == '[\"All System Roles\"]' \r\n    | project-keep SystemID, SystemRole, SystemUsage);\r\n\r\nlet AuditEvents= materialize(SAPAuditLog() \r\n| where TimeGenerated > ago(UserHeaderAuditLookBack)\r\n| summarize  TimeGenerated= arg_max(TimeGenerated, User, ClientID, SystemID, TerminalIPv6, Email) by User, ClientID, SystemID, TerminalIPv6, Email\r\n| lookup kind=inner Systems on SystemID\r\n| project-rename Client= ClientID);\r\n\r\nlet LastKnownIPs = AuditEvents | where isnotempty(TerminalIPv6)| summarize LastUsedOn= arg_max(TimeGenerated, *) by User, Client, SystemID | project LastKnownIP= TerminalIPv6, User, Client, SystemID;\r\n\r\nlet KnownIPsAndEmails = AuditEvents\r\n| summarize Count= count() by User, Client, SystemID, TerminalIPv6, Email| order by Count desc\r\n| summarize KnownEmails= make_set_if(Email,isnotempty( Email), 10), KnownIPs = make_set_if(TerminalIPv6, isnotempty(TerminalIPv6), 10) \r\nby User, SystemID, Client\r\n| extend PrimaryEmail = KnownEmails[0], PrimaryIP= KnownIPs[0];\r\n\r\n// query\r\nSystems | join kind= inner \r\n// get logon Data (Kernel-Side Use)\r\n(SAP_USR02 | where TimeGenerated > ago(UserMDLookBack) \r\n| where (BNAME in (SelectedUsers) or tostring( SelectedUsers) == '[\"All Users\"]') and (BNAME == SelectedUser or SelectedUser == \"All Users\")\r\n| summarize arg_max(TimeGenerated, *) by BNAME, MANDT, SystemID )\r\non SystemID\r\n\r\n// get User Name/Address Key Assignment\r\n| join kind=leftouter hint.strategy=shuffle \r\n(SAP_USR21 | where TimeGenerated > ago(UserMDLookBack) | summarize arg_max(TimeGenerated, *) by BNAME, MANDT, SystemID)\r\non BNAME, MANDT, SystemID\r\n| project-rename CLIENT= MANDT\r\n\r\n// get E-Mail Addresses \r\n| join kind= leftouter hint.strategy=shuffle \r\n(SAP_ADR6 | where TimeGenerated > ago(UserMDLookBack) \r\n| summarize arg_max(TimeGenerated, CONSNUMBER ) by CLIENT, DATE_FROM, ADDRNUMBER, PERSNUMBER, SystemID, SMTP_ADDR)\r\n on ADDRNUMBER, PERSNUMBER, SystemID, CLIENT\r\n| project-rename User= BNAME, Client= CLIENT\r\n| lookup KnownIPsAndEmails on User, SystemID, Client\r\n| lookup LastKnownIPs on User, SystemID, Client\r\n\r\n| extend LastSeen = todatetime(strcat(TRDAT, LTIME))\r\n| extend LastSeenDaysAgo = datetime_diff('Day', Now, LastSeen)\r\n| project \r\n// TimeGenerated,\r\nUser,\r\nEmail = SMTP_ADDR,\r\nUserType = USTYP,\r\nTimezone = TZONE,\r\nLockedStatus = UFLAG,\r\nLastSeen,\r\nLastSeenDaysAgo,\r\nPrimaryIP,\r\nLastKnownIP,\r\nPrimaryEmail,\r\nKnownIPs,\r\nKnownEmails,\r\nClient,\r\nSystemID,\r\nSystemRole,\r\nSystemUsage",
                        "functionAlias": "SAPUsersHeader",
                        "functionParameters": "SelectedSystemRoles:dynamic = dynamic([\"All System Roles\"]), SelectedSystems:dynamic = dynamic([\"All Systems\"]), SelectedUsers:dynamic = dynamic([\"All Users\"]), SelectedUser:string = \"All Users\"",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAPUsersHeader",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAPSystems",
                        "query": "[replace(variables('SAPFunctionsSAPSystemsQuery'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAPSystems",
                        "functionParameters": "SelectedSystems:dynamic = dynamic([\"All Systems\"]), SelectedSystemRoles:dynamic = dynamic([\"All System Roles\"]), SelectedSystemUsage:dynamic = dynamic([\"All Usage Types\"])",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAPSystems",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAPThreatIntelligenceIndicator",
                        "query": "[replace(variables('SAPFunctionsSAPThreatIntelligenceIndicatorQuery'),'CWSQSOC.', variables('CWSQSOCIdentifier'))]",
                        "functionAlias": "SAPThreatIntelligenceIndicator",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAPThreatIntelligenceIndicator",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAPAuditLogAnomalies",
                        "query": "////// get anomalies from the SAPAuditLog\r\n//// Dynamic parameters\r\n// let LearningTime = 14d;\r\n// let DetectingTime = 1h;// use 1 h for alerting on anomalies // can also do // let DetectingTime = 0h;//0h for seeing anomalies across all training data\r\n// let SelectedSystems =  dynamic([\"All Systems\"]);//can also do// let SelectedSystems =  dynamic([\"S4P\", \"B4X\", \"ODT\"]);\r\n// let SelectedSystemRoles =  dynamic([\"All System Roles\"]); //can also do// let SelectedSystemRoles =  dynamic([\"Production\", \"UAT\"]);\r\n// let SelectedSeverities=  dynamic([\"High\", \"Medium\"]);//can also do dynamic([\"All Severities\"]), dynamic([\"High\", \"Medium\", \"Low\"])\r\n// let SelectedRuleTypes= dynamic([\"AnomaliesOnly\"]);\r\n// let SelectedPrefixMask = 24;\r\n// // other potential values can be: \r\n// // let SelectedRuleTypes= dynamic([\"Deterministic\"]);\r\n// // let SelectedRuleTypes = dynamic([\"All RuleTypes\"]);\r\n//// Static parameters\r\n// If DetectingTime==0h, we want anomalies to show across all training time as well\r\n// 1h hour detecting will spill over 2 hour bins\r\nlet ActualDetectingTime= iff(DetectingTime == 0h, LearningTime, DetectingTime + 1h);\r\nlet TestPoints= iff(DetectingTime == 0h, 0, toint((DetectingTime + 1h) / 1h));\r\nlet Now = now();\r\nlet AnomalyThreshold= 2; \r\nlet AnomalyTrendKind= 'linefit';// can be 'linefit', 'avg' or 'none'\r\nlet AnomalySeasonality= 24; // can be 0, or number of bins, -1 is AutoDetect\r\nlet AnomalyAD_method = 'ctukey'; // 'ctukey' = 10th-90th percentile, 'tukey' = 25th-75th percentile range \r\n// get special users for exclusion and in-focus analysis\r\nlet SAPUsersGottenVIP = materialize(SAPUsersGetVIP\r\n    | project-rename User = SAPUser);\r\nlet SAPUserRolesAndProfiles = (SAPUsersAssignments\r\n    | project-keep User, SystemID, DirectRoles, ChildRoles, Profiles \r\n    | summarize RolesAndProfiles = make_set(array_concat(DirectRoles, ChildRoles, Profiles), 120) by User, SystemID); \r\n// get the configuration from the \"SAPAuditLogConfiguration\" watchlist which allows\r\n// assigning severity levels per system Role (Production/ non-production), automatic team assignments and other configuration options\r\nlet AuditConfiguration= materialize(SAPAuditLogConfiguration(SelectedSystems, SelectedSystemRoles, SelectedSeverities= SelectedSeverities, SelectedRuleTypes= SelectedRuleTypes)\r\n    | extend FrequencyThreshold= Threshold);\r\n// get relevant audit events according to configuration\r\nlet AuditEvents = (SAPAuditLog\r\n        | where TimeGenerated > ago(LearningTime)\r\n        | where SystemID in ((AuditConfiguration | summarize  by SystemID))\r\n        | where MessageID in ((AuditConfiguration | summarize  by MessageID))\r\n        // Alerts coming from SAP as \"Low\" or missing User ID aren't very intersting\r\n        | where AlertSeverityText != \"Low\" and isnotempty(User)\r\n        | join kind= leftsemi AuditConfiguration on SystemID, MessageID\r\n        | project-away\r\n            AuditClassID,\r\n            AlertSeverityText,\r\n            MonitoringObjectName,\r\n            MonitorShortName,\r\n            AlertValue,\r\n            AlertSeverity,\r\n            Variable1,\r\n            Variable2,\r\n            Variable3,\r\n            Variable4,\r\n            Type,\r\n            SystemNumber\r\n        | extend HourOfDay= hourofday(TimeGenerated) * 1h + startofday(TimeGenerated));\r\n// create time-series\r\nlet TimeSeriesLog = AuditEvents\r\n    | where TimeGenerated > ago(LearningTime)\r\n    // aggregate by sub net\r\n    | extend IPRange = format_ipv4(TerminalIPv6, SelectedPrefixMask)\r\n    | make-series Count= count()\r\n        on TimeGenerated\r\n        from (startofday(ago(LearningTime)) + hourofday(Now) * 1h)to Now step 1h\r\n        by \r\n        SystemID, MessageID, User, IPRange\r\n        | lookup (AuditConfiguration | project SystemID, MessageID, FrequencyThreshold) on SystemID, MessageID;\r\n// detect anomalies at aggregated level\r\nlet TimeSeriesAlerts= TimeSeriesLog\r\n    | extend (anomalies, score, baseline) = series_decompose_anomalies(Count, Threshold= AnomalyThreshold, Seasonality= AnomalySeasonality, Trend= AnomalyTrendKind, Test_points= TestPoints)\r\n    // expand to hourly\r\n    | mv-expand\r\n        Count to typeof(double),\r\n        TimeGenerated to typeof(datetime),\r\n        anomalies to typeof(double),\r\n        score to typeof(double),\r\n        baseline to typeof(long)\r\n    | where TimeGenerated >= ago(ActualDetectingTime) \r\n    // apply anomaly filters + thesholds\r\n    | where anomalies > 0\r\n    | where score > 2\r\n    | where Count > FrequencyThreshold\r\n    | project-rename DiscoveredOn= TimeGenerated, AnomalCount= Count\r\n    | project\r\n        SystemID,\r\n        MessageID,\r\n        User,\r\n        DiscoveredOn,\r\n        score,\r\n        baseline,\r\n        AnomalCount,\r\n        FrequencyThreshold\r\n    // To reduce false positives, exclude users whos tags in the SAP_User_Config watchlist \r\n// match tags in the RolesTagsToExclude column in the SAP_Dynamic_Audit_Log_Monitor_Configuration\r\n// tags can be either strings representing a group such as Batch; Sensitive; Super; MassiveLogonsOK; MassiveRFCOK; GenericTablebyRFCOK\r\n// or SAP roles such as SAP_BC_TRANSPORT_ADMINISTRATOR, or SAP profiles like SAP_ALL\r\n    | lookup AuditConfiguration on MessageID, SystemID\r\n    | lookup SAPUsersGottenVIP on User\r\n    | lookup SAPUserRolesAndProfiles on User, SystemID\r\n    | extend RolesProfilesAndTags = array_concat(RolesAndProfiles, TagsList)\r\n    | extend TagsIntersect = set_intersect(split(RolesTagsToExclude, \";\"), RolesProfilesAndTags)\r\n    | extend IntersectionSize = array_length(TagsIntersect)\r\n    // keep only non-excluded users\r\n    | where IntersectionSize == 0 or isempty(IntersectionSize)\r\n    // fetch detailed data for anomal combinations\r\n    | join kind= inner (AuditEvents\r\n        | where TimeGenerated > ago(ActualDetectingTime))\r\n        on User, SystemID, MessageID, $left.DiscoveredOn == $right.HourOfDay\r\n| summarize EventCount= count(), AnomalCount= max(AnomalCount), MinTime= min(TimeGenerated), MaxTime = max(TimeGenerated), Score= max(score)\r\n, take_any(Instance, MessageClass, ClientID, TerminalIPv6, TransactionCode, ABAPProgramName, SAPProcesType, SAPWPName, Email, Host, BagOfDetails, DetailedDescription, Threshold, CategoryName, DestinationEmail,  Tactics, TeamsChannelID, SystemRole, SystemUsage, IsProd, Severity, BagOfDetails, RolesTagsToExclude)\r\nby DiscoveredOn, SystemID, MessageText, User, MessageID\r\n| extend BagOfDetails = tostring(BagOfDetails);\r\nTimeSeriesAlerts\r\n\r\n",
                        "functionAlias": "SAPAuditLogAnomalies",
                        "functionParameters": "LearningTime:timespan = 14d, DetectingTime:timespan = 1h, SelectedSystems:dynamic = dynamic([\"All Systems\"]), SelectedSystemRoles:dynamic = dynamic([\"All System Roles\"]), SelectedSeverities:dynamic = dynamic([\"High\", \"Medium\"]), SelectedPrefixMask:int = 24, SelectedRuleTypes:dynamic = dynamic([\"AnomaliesOnly\"])",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAPAuditLogAnomalies",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAP_ADCP",
                        "query": "[replace(variables('SAPFunctionsSAP_ADCPQuery'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAP_ADCP",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAP_ADCP",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAP_ADR6",
                        "query": "[replace(variables('SAPFunctionsSAP_ADR6Query'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAP_ADR6",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAP_ADR6",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAP_AGR_1251",
                        "query": "[replace(variables('SAPFunctionsSAP_AGR_1251Query'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAP_AGR_1251",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAP_AGR_1251",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAP_AGR_AGRS",
                        "query": "[replace(variables('SAPFunctionsSAP_AGR_AGRSQuery'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAP_AGR_AGRS",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAP_AGR_AGRS",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAP_AGR_DEFINE",
                        "query": "[replace(variables('SAPFunctionsSAP_AGR_DEFINEQuery'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAP_AGR_DEFINE",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAP_AGR_DEFINE",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAP_AGR_FLAGS",
                        "query": "[replace(variables('SAPFunctionsSAP_AGR_FLAGSQuery'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAP_AGR_FLAGS",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAP_AGR_FLAGS",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAP_AGR_PROF",
                        "query": "[replace(variables('SAPFunctionsSAP_AGR_PROFQuery'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAP_AGR_PROF",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAP_AGR_PROF",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAP_AGR_TCODES",
                        "query": "[replace(variables('SAPFunctionsSAP_AGR_TCODESQuery'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAP_AGR_TCODES",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAP_AGR_TCODES",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAP_AGR_USERS",
                        "query": "[replace(variables('SAPFunctionsSAP_AGR_USERSQuery'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAP_AGR_USERS",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAP_AGR_USERS",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAP_DEVACCESS",
                        "query": "[replace(variables('SAPFunctionsSAP_DEVACCESSQuery'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAP_DEVACCESS",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAP_DEVACCESS",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAP_PAHI",
                        "query": "[replace(variables('SAPFunctionsSAP_PAHIQuery'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAP_PAHI",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAP_PAHI",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAP_USGRP_USER",
                        "query": "[replace(variables('SAPFunctionsSAP_USGRP_USERQuery'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAP_USGRP_USER",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAP_USGRP_USER",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAP_USR01",
                        "query": "[replace(variables('SAPFunctionsSAP_USR01Query'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAP_USR01",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAP_USR01",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAP_USR02",
                        "query": "[replace(variables('SAPFunctionsSAP_USR02Query'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAP_USR02",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAP_USR02",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAP_USR05",
                        "query": "[replace(variables('SAPFunctionsSAP_USR05Query'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAP_USR05",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAP_USR05",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAP_USR21",
                        "query": "[replace(variables('SAPFunctionsSAP_USR21Query'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAP_USR21",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAP_USR21",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAP_UST04",
                        "query": "[replace(variables('SAPFunctionsSAP_UST04Query'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAP_UST04",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAP_UST04",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAPAppLog",
                        "query": "[replace(variables('SAPFunctionsSAPAppLogQuery'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAPAppLog",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAPAppLog",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAPAuditLog",
                        "query": "[replace(variables('SAPFunctionsSAPAuditLogQuery'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAPAuditLog",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAPAuditLog",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAPChangeDocsLog",
                        "query": "[replace(variables('SAPFunctionsSAPChangeDocsLogQuery'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAPChangeDocsLog",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAPChangeDocsLog",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAPConnectorHealth",
                        "query": "[replace(variables('SAPFunctionsSAPConnectorHealthQuery'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAPConnectorHealth",
                        "functionParameters": "Dummy:string = '_'",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAPConnectorHealth",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAPConnectorOverview",
                        "query": "[replace(variables('SAPFunctionsSAPConnectorOverviewQuery'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAPConnectorOverview",
                        "functionParameters": "DaysAgo:timespan = 14d",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAPConnectorOverview",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAPCRLog",
                        "query": "[replace(variables('SAPFunctionsSAPCRLogQuery'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAPCRLog",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAPCRLog",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAPFilesLogs",
                        "query": "[replace(variables('SAPFunctionsSAPFilesLogsQuery'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAPFilesLogs",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAPFilesLogs",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAPHeartBeat",
                        "query": "[replace(variables('SAPFunctionsSAPHeartBeatQuery'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAPHeartBeat",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAPHeartBeat",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAPJAVAFilesLogs",
                        "query": "//generated function structure for custom log JAVAFilesLogs_CL \n//generated on 2022-05-07 \n//Sentinel4SAP solution version 1.2.98 \nlet D_JAVAFilesLogs_CL = datatable(TimeGenerated:datetime \n,Client:string\n,User:string\n,MNo:string\n,Pid:string\n,Terminal:string\n,Program:string\n,Session:string\n,InstanceNr:string\n,Sid:string\n,hostname:string\n,Severity:string\n,LogName:string\n,MessageText:string\n,Type:string\n)['1000-01-01T00:00:00Z','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString','initialString'];\n\nlet T_JAVAFilesLogs_CL = (JAVAFilesLogs_CL | project \nTimeGenerated = column_ifexists('TimeGenerated', '1000-01-01T00:00:00Z')\n,Client = column_ifexists('Client_s', 'initialString')\n,User = column_ifexists('User_s', 'initialString')\n,MNo = column_ifexists('MNo_s', 'initialString')\n,Pid = column_ifexists('Pid_s', 'initialString')\n,Terminal = column_ifexists('Terminal_s', 'initialString')\n,Program = column_ifexists('Program_s', 'initialString')\n,Session = column_ifexists('Session_s', 'initialString')\n,InstanceNr = column_ifexists('InstanceNr_s', 'initialString')\n,Sid = column_ifexists('Sid_s', 'initialString')\n,hostname = column_ifexists('hostname_s', 'initialString')\n,Severity = column_ifexists('Severity_s', 'initialString')\n,LogName = column_ifexists('LogName_s', 'initialString')\n,MessageText = column_ifexists('MessageText_s', 'initialString')\n,Type = column_ifexists('Type', 'initialString')\n);\n\nT_JAVAFilesLogs_CL | union isfuzzy= true (D_JAVAFilesLogs_CL  | where TimeGenerated != '1000-01-01T00:00:00Z')",
                        "functionAlias": "SAPJAVAFilesLogs",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAPJAVAFilesLogs",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAPJobLog",
                        "query": "[replace(variables('SAPFunctionsSAPJobLogQuery'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAPJobLog",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAPJobLog",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAPOS_GW",
                        "query": "[replace(variables('SAPFunctionsSAPOS_GWQuery'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAPOS_GW",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAPOS_GW",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAPOS_ICM",
                        "query": "[replace(variables('SAPFunctionsSAPOS_ICMQuery'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAPOS_ICM",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAPOS_ICM",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAPOS_SAPCONTROL",
                        "query": "//generated function structure for custom log ABAPOS_SAPCONTROL_CL \nlet D_ABAPOS_SAPCONTROL_CL = datatable(TimeGenerated:datetime \n,System:string\n,MessageText:string\n,Type:string\n)[];\n\nlet T_ABAPOS_SAPCONTROL_CL = (ABAPOS_SAPCONTROL_CL | project \nTimeGenerated = TimeGenerated\n,System = System_s\n,MessageText = MessageText_s\n,Type = Type\n);\n\nT_ABAPOS_SAPCONTROL_CL | union isfuzzy= true D_ABAPOS_SAPCONTROL_CL  ",
                        "functionAlias": "SAPOS_SAPCONTROL",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAPOS_SAPCONTROL",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAPOS_Syslog",
                        "query": "[replace(variables('SAPFunctionsSAPOS_SyslogQuery'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAPOS_Syslog",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAPOS_Syslog",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAPOS_WP",
                        "query": "[replace(variables('SAPFunctionsSAPOS_WPQuery'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAPOS_WP",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAPOS_WP",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAPSpoolLog",
                        "query": "[replace(variables('SAPFunctionsSAPSpoolLogQuery'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAPSpoolLog",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAPSpoolLog",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAPSpoolOutputLog",
                        "query": "[replace(variables('SAPFunctionsSAPSpoolOutputLogQuery'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAPSpoolOutputLog",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAPSpoolOutputLog",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAPSyslog",
                        "query": "//generated function structure for custom log Syslog \n//generated on 2022-05-07 \n//Sentinel4SAP solution version 1.2.98 \nlet D_Syslog = datatable(TimeGenerated:datetime \n,EventTime:datetime\n,Facility:string\n,HostName:string\n,SeverityLevel:string\n,SyslogMessage:string\n,ProcessID:int\n,HostIP:string\n,ProcessName:string\n,Type:string\n)['1000-01-01T00:00:00Z','1000-01-01T00:00:00Z','initialString','initialString','initialString','initialString',1,'initialString','initialString','initialString'];\n\nlet T_Syslog = (Syslog | project \nTimeGenerated = column_ifexists('TimeGenerated', '1000-01-01T00:00:00Z')\n,EventTime = column_ifexists('EventTime', '1000-01-01T00:00:00Z')\n,Facility = column_ifexists('Facility', 'initialString')\n,HostName = column_ifexists('HostName', 'initialString')\n,SeverityLevel = column_ifexists('SeverityLevel', 'initialString')\n,SyslogMessage = column_ifexists('SyslogMessage', 'initialString')\n,ProcessID = column_ifexists('ProcessID', 1)\n,HostIP = column_ifexists('HostIP', 'initialString')\n,ProcessName = column_ifexists('ProcessName', 'initialString')\n,Type = column_ifexists('Type', 'initialString')\n);\n\nT_Syslog | union isfuzzy= true (D_Syslog  | where TimeGenerated != '1000-01-01T00:00:00Z')",
                        "functionAlias": "SAPSyslog",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAPSyslog",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAPTableDataLog",
                        "query": "[replace(variables('SAPFunctionsSAPTableDataLogQuery'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAPTableDataLog",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAPTableDataLog",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAPUsersAssignments",
                        "query": "let UserMDTimeAgo = totimespan(toscalar(SAPGetParameters('UserMDLookBack')| project-keep ValueLow));\n// only show users which are not locked for over 180 days (for performance considerations)\nlet agoLocked = format_datetime(ago(180d), 'yyyyMMdd');\n// query\n// get logon Data (Kernel-Side Use)\nSAP_USR02 | where TimeGenerated > ago(UserMDTimeAgo) \n| extend Relevant= strcmp( GLTGB, agoLocked) > 0 or GLTGB == \"00000000\"\n| where Relevant\n| summarize any(ERDAT), arg_max(TimeGenerated, CLASS, UFLAG, TZONE, USTYP, TRDAT, LTIME, ERDAT) by BNAME, MANDT, SystemID\n// get profiles\n| join kind=leftouter (SAP_UST04| where TimeGenerated > ago(UserMDTimeAgo) | summarize arg_max(TimeGenerated, *), profiles = make_set(PROFILE, 50) by BNAME, MANDT, SystemID)\non BNAME, MANDT, SystemID\n\n// get Assignment of roles to users\n| join kind=leftouter hint.strategy=shuffle (SAP_AGR_USERS | where TimeGenerated > ago(UserMDTimeAgo) | summarize arg_max(TimeGenerated, UNAME, AGR_NAME, MANDT, SystemID, COL_FLAG) by UNAME, AGR_NAME, MANDT, SystemID, COL_FLAG\n// get the child roles as well\n| join kind= leftouter   (SAP_AGR_AGRS | where TimeGenerated > ago(UserMDTimeAgo) | summarize arg_max(TimeGenerated, MANDT, AGR_NAME, CHILD_AGR, SystemID) by MANDT, AGR_NAME, CHILD_AGR, SystemID)\non MANDT, SystemID, AGR_NAME\n| summarize\nDirectRoles = make_set_if(AGR_NAME, COL_FLAG != 'X',  50),// COL_FLAG==X -> indirect\nChildRoles = make_set_if(CHILD_AGR, isnotempty(CHILD_AGR) ,50)\nby UNAME, MANDT, SystemID\n)\non $left.BNAME == $right.UNAME\n, $left.MANDT == $right.MANDT\n, $left.SystemID == $right.SystemID\n\n// get User Name/Address Key Assignment\n| join kind=leftouter hint.strategy=shuffle ( (SAP_USR21 | where TimeGenerated > ago(UserMDTimeAgo) \n| summarize arg_max(TimeGenerated, BNAME, ADDRNUMBER, PERSNUMBER) by BNAME, MANDT, SystemID )\n\n// get E-Mail Addresses \n| join kind= inner hint.strategy=shuffle (SAP_ADR6| where TimeGenerated > ago(UserMDTimeAgo) | summarize arg_max(TimeGenerated, ADDRNUMBER, SMTP_ADDR) by CLIENT, ADDRNUMBER, PERSNUMBER, DATE_FROM, CONSNUMBER, SystemID) \non $left.ADDRNUMBER == $right.ADDRNUMBER\n, $left.MANDT == $right.CLIENT\n, $left.SystemID == $right.SystemID\n, $left.PERSNUMBER == $right.PERSNUMBER\n\n| summarize\narg_max(TimeGenerated1, SMTP_ADDR, MANDT, SystemID),\narg_max(TimeGenerated, BNAME, MANDT, SystemID)\nby BNAME, MANDT, SystemID\n)\non $left.BNAME == $right.BNAME\n, $left.MANDT == $right.MANDT\n, $left.SystemID == $right.SystemID\n| extend LastSeen = todatetime(strcat(TRDAT, LTIME))\n| extend CreatedOn = todatetime(ERDAT)\n| project User = BNAME,\nEmail = SMTP_ADDR,\nUserType = USTYP,\nTimezone = TZONE,\nLockedStatus = UFLAG,\nLastSeen,\nUserGroupAuth = CLASS,\nProfiles = profiles,\nDirectRoles,\nChildRoles,\nCreatedOn,\nClient = MANDT,\nSystemID = SystemID\n\n",
                        "functionAlias": "SAPUsersAssignments",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAPUsersAssignments",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAPUsersAuthorizations",
                        "query": "[replace(variables('SAPFunctionsSAPUsersAuthorizationsQuery'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAPUsersAuthorizations",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAPUsersAuthorizations",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAPUsersGetPrivileged",
                        "query": "// this function returns privilileged user by default but can also return sensitive users\r\n// let IncludeSensitiveUsers= false;// can also do IncludeSensitive= true which will include users with sensitive profiles\r\n// privileged users are users which are directly named as such \r\nlet PrivelegedUsers = _GetWatchlist('SAP - Privileged Users');\r\nlet FixedUsers = datatable(User: string, Client: string, SystemID: string) [\"DDIC\", \"XXX\",\"001\"];\r\n// privileged users can also be such that carry a privileged role\r\nlet fixedRoles = datatable(Role: string) ['SAP_BC_BASIS_ADMIN', 'SAP_BC_AUTH_PROFILE_ADMIN'];\r\n// privileged users can also be such that carry a privileged profile\r\nlet fixedProfiles = datatable(Profile: string) [\"SAP_ALL\", \"SAP_NEW\"];\r\nlet AuditTimeAgo = totimespan(toscalar(SAPGetParameters('UserMDLookBack')| project-keep ValueLow));\r\nlet availableSystems= SAPAuditLog\r\n| where TimeGenerated > ago(AuditTimeAgo)\r\n| summarize by SystemID, Client= ClientID\r\n| extend dummy ='';\r\n// get the user assignments to roles and profiles\r\nlet UserAssignments= materialize(SAPUsersAssignments() | project User, ChildRoles, DirectRoles, Profiles, Client, SystemID);\r\n// privileged users\r\nlet PrivUsersByMD = UserAssignments\r\n| mv-expand ChildRoles, DirectRoles, Profiles\r\n| where DirectRoles in (fixedRoles) or ChildRoles in (fixedRoles) or Profiles in (fixedProfiles)\r\n| summarize by User, Client, SystemID\r\n| extend IsPrivileged= true;\r\n\r\n// cross join watchlist users with available systems and clients\r\nlet FixedUPriv = ((PrivelegedUsers\r\n    | union isfuzzy=true  FixedUsers \r\n    | summarize by User\r\n    | extend dummy = '') \r\n    | join kind= fullouter availableSystems\r\n        on $left.dummy == $right.dummy)\r\n    | extend IsPrivileged= true;\r\n\r\nFixedUPriv\r\n| union isfuzzy=true PrivUsersByMD, FixedUsers\r\n| where Client != \"XXX\"\r\n| summarize by User, Client, SystemID",
                        "functionAlias": "SAPUsersGetPrivileged",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAPUsersGetPrivileged",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                },
                {
                    "properties": {
                        "category": "SAPFunctions",
                        "displayName": "SAPWorkflowLog",
                        "query": "[replace(variables('SAPFunctionsSAPWorkflowLogQuery'),'CWSQSAP.', variables('CWSQSAPIdentifier'))]",
                        "functionAlias": "SAPWorkflowLog",
                        "version": 2,
                        "etag": "*"
                    },
                    "name": "SAPWorkflowLog",
                    "type": "savedSearches",
                    "apiVersion": "2022-10-01",
                    "dependsOn": [
                        "[variables('workspace-dependency')]"
                    ]
                }
            ]
        }
    ],
    "outputs": {}
}